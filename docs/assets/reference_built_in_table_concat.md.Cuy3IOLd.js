import{_ as s,c as i,a2 as e,o as t}from"./chunks/framework.DPuwY6B9.js";const k=JSON.parse('{"title":"table.concat","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/table/concat.md","filePath":"reference/built_in/table/concat.md","lastUpdated":1730041717000}'),l={name:"reference/built_in/table/concat.md"};function n(h,a,p,o,c,r){return t(),i("div",null,a[0]||(a[0]=[e(`<h1 id="table-concat" tabindex="-1">table.concat <a class="header-anchor" href="#table-concat" aria-label="Permalink to &quot;table.concat&quot;">​</a></h1><p>テーブルの要素を連結し、文字列を返す</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">table.concat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (table [, sep [, i [, j]]])</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>テーブル内の要素を連結して、一つの文字列を作成します。要素は以下の形式で連結されます：</p><p><code>table[i] .. sep .. table[i+1] .. sep .. ... .. sep .. table[j]</code></p><p>ここで、<code>sep</code> は区切り文字を指定します。<code>sep</code> を省略した場合、デフォルトは空文字列（区切りなし）です。<code>i</code> は連結を開始するインデックスで、デフォルトは <code>1</code>、<code>j</code> は連結を終了するインデックスで、デフォルトはテーブルの長さ（<code>#table</code>）です。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> t </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Lua&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;is&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;great&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> s </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> table.concat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot; &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- Lua is great</span></span></code></pre></div><p>この例では、テーブルの要素を空白で区切って1つの文字列に連結しています。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua 5.1</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li><a href="./insert.html"><code>table.insert</code></a></li><li><a href="./remove.html"><code>table.remove</code></a></li></ul>`,14)]))}const u=s(l,[["render",n]]);export{k as __pageData,u as default};
