import{_ as a,c as e,a2 as i,o as t}from"./chunks/framework.DPuwY6B9.js";const c=JSON.parse('{"title":"setfenv","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/std/setfenv.md","filePath":"reference/built_in/std/setfenv.md","lastUpdated":1729914702000}'),n={name:"reference/built_in/std/setfenv.md"};function l(h,s,d,p,r,o){return t(),e("div",null,s[0]||(s[0]=[i(`<h1 id="setfenv" tabindex="-1">setfenv <a class="header-anchor" href="#setfenv" aria-label="Permalink to &quot;setfenv&quot;">​</a></h1><p>関数に新しい環境テーブルを設定する</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setfenv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (f, table)</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>関数 <code>f</code> が使用する環境テーブルを <code>table</code> に設定します。<code>f</code> は Lua 関数、またはスタックレベルを示す数値で、レベル 1 は <code>setfenv</code> を呼び出した関数です。<code>setfenv</code> は設定後の関数を返します。</p><p>特別な場合として、<code>f</code> に 0 を指定すると、実行中のスレッドの環境を変更します。この場合、<code>setfenv</code> は値を返しません。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setfenv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, {a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 10</span></span></code></pre></div><p>この例では、環境テーブルに基づいて変数<code>a</code>の値が返されます。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua5.1</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li><a href="./getfenv.html"><code>getfenv</code></a></li></ul>`,13)]))}const f=a(n,[["render",l]]);export{c as __pageData,f as default};
