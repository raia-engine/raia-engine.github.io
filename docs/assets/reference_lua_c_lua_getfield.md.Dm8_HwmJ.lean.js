import{_ as i,c as e,a2 as s,o as t}from"./chunks/framework.DzmM640o.js";const c=JSON.parse('{"title":"lua_getfield","description":"","frontmatter":{},"headers":[],"relativePath":"reference/lua_c/lua_getfield.md","filePath":"reference/lua_c/lua_getfield.md","lastUpdated":1731828945000}'),l={name:"reference/lua_c/lua_getfield.md"};function h(n,a,d,p,r,k){return t(),e("div",null,a[0]||(a[0]=[s('<h1 id="lua-getfield" tabindex="-1">lua_getfield <a class="header-anchor" href="#lua-getfield" aria-label="Permalink to &quot;lua_getfield&quot;">​</a></h1><p>スタックに値<code>t[k]</code>をプッシュします。</p><p><code>[-0, +1, e]</code></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lua_getfield</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (lua_State </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">L</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> char</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">k</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>スタックに値<code>t[k]</code>をプッシュします。ここで<code>t</code>は指定された有効なインデックスの値です。Luaと同様に、この関数は&quot;index&quot;イベントに対するメタメソッドをトリガーすることがあります。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lua_getfield</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(L, LUA_GLOBALSINDEX, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;myVar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>このコードは、グローバル変数<code>myVar</code>の値をスタックにプッシュします。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua5.1</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li>lua_setfield</li><li>lua_gettable</li></ul>',13)]))}const u=i(l,[["render",h]]);export{c as __pageData,u as default};
