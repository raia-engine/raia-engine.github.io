import{_ as e,c as t,a2 as s,o as i}from"./chunks/framework.CKGreiRV.js";const c=JSON.parse('{"title":"setmetatable","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/std/setmetatable.md","filePath":"reference/built_in/std/setmetatable.md","lastUpdated":1730041717000}'),l={name:"reference/built_in/std/setmetatable.md"};function n(h,a,d,p,r,o){return i(),t("div",null,a[0]||(a[0]=[s(`<h1 id="setmetatable" tabindex="-1">setmetatable <a class="header-anchor" href="#setmetatable" aria-label="Permalink to &quot;setmetatable&quot;">​</a></h1><p>テーブルにメタテーブルを設定する</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setmetatable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (table, metatable)</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>テーブル <code>table</code> に対して、新しいメタテーブル <code>metatable</code> を設定します。（Lua からはテーブル以外の型のメタテーブルを変更することはできません。C 言語からのみ可能です。）<code>metatable</code> に <code>nil</code> を指定すると、テーブルのメタテーブルを削除します。もし元のメタテーブルに <code>&quot;__metatable&quot;</code> フィールドが存在する場合、エラーが発生します。</p><p>この関数は、設定後のテーブル <code>table</code> を返します。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> t </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setmetatable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t, {__index </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}})</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 1</span></span></code></pre></div><p>この例では、メタテーブルを使ってテーブル<code>t</code>のキー<code>a</code>にアクセスしています。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua5.1</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li><a href="./getmetatable.html"><code>getmetatable</code></a></li></ul>`,13)]))}const b=e(l,[["render",n]]);export{c as __pageData,b as default};
