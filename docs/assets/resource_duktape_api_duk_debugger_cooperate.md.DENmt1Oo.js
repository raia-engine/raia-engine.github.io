import{_ as a,c as t,a2 as s,o as i}from"./chunks/framework.DPuwY6B9.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"resource/duktape/api/duk_debugger_cooperate.md","filePath":"resource/duktape/api/duk_debugger_cooperate.md","lastUpdated":1732350347000}'),r={name:"resource/duktape/api/duk_debugger_cooperate.md"};function d(o,e,p,h,n,l){return i(),t("div",null,e[0]||(e[0]=[s('<h2 id="duk-debugger-cooperate" tabindex="-1">duk_debugger_cooperate() <a class="header-anchor" href="#duk-debugger-cooperate" aria-label="Permalink to &quot;duk_debugger_cooperate()&quot;">​</a></h2><p>1.2.0 debugger</p><h3 id="プロトタイプ" tabindex="-1">プロトタイプ <a class="header-anchor" href="#プロトタイプ" aria-label="Permalink to &quot;プロトタイプ&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> duk_debugger_cooperate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(duk_context </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ctx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="スタック" tabindex="-1">スタック <a class="header-anchor" href="#スタック" aria-label="Permalink to &quot;スタック&quot;">​</a></h3><p>(バリュースタックに影響なし。)</p><h3 id="要約" tabindex="-1">要約 <a class="header-anchor" href="#要約" aria-label="Permalink to &quot;要約&quot;">​</a></h3><p>受信したデバッグコマンドをブロックせずにチェックし、実行します。デバッグ・コマンドは、引数ctxのコンテキストで実行されます。Duktapeへの呼び出しが（どのコンテキストからも）進行中でない場合にのみ呼び出すことができます。詳細については、debugger.rst を参照してください。</p><h3 id="例" tabindex="-1">例 <a class="header-anchor" href="#例" aria-label="Permalink to &quot;例&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">duk_debugger_cooperate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx);</span></span></code></pre></div><h3 id="参照" tabindex="-1">参照 <a class="header-anchor" href="#参照" aria-label="Permalink to &quot;参照&quot;">​</a></h3><p>duk_debugger_attach duk_debugger_detach</p>',12)]))}const k=a(r,[["render",d]]);export{u as __pageData,k as default};
