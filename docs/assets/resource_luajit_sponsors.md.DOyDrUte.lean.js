import{_ as a,c as d,a2 as e,o as r}from"./chunks/framework.CuCbyi2k.js";const c=JSON.parse('{"title":"LuaJIT スポンサーシッププログラム","description":"","frontmatter":{},"headers":[],"relativePath":"resource/luajit/sponsors.md","filePath":"resource/luajit/sponsors.md","lastUpdated":1729914702000}'),i={name:"resource/luajit/sponsors.md"};function o(l,t,h,n,s,u){return r(),d("div",null,t[0]||(t[0]=[e('<h1 id="luajit-スポンサーシッププログラム" tabindex="-1">LuaJIT スポンサーシッププログラム <a class="header-anchor" href="#luajit-スポンサーシッププログラム" aria-label="Permalink to &quot;LuaJIT スポンサーシッププログラム&quot;">​</a></h1><p>LuaJITはオープンソースソフトウェアであり、あなたの貢献に依存しています！これは、バグレポート、バグ修正、パッチの形であるかもしれません — Githubのイシュートラッカーを参照してください。もう一つのオプションは、企業スポンサーシップを通じてプロジェクトを財政的にサポートすることです。</p><p>ご注意ください：メインのLuaJIT著者（Mike Pall）は関連しないプロジェクトに取り組んでおり、現時点では大きなスポンサーシップを受け入れることができません。しかし、他のコミュニティメンバーはスポンサーシップオファーにオープンかもしれません — LuaJITメーリングリストで関心がある人を尋ねてください。</p><h2 id="以前のスポンサーシップ一覧" tabindex="-1">以前のスポンサーシップ一覧 <a class="header-anchor" href="#以前のスポンサーシップ一覧" aria-label="Permalink to &quot;以前のスポンサーシップ一覧&quot;">​</a></h2><table tabindex="0"><thead><tr><th>日付</th><th>スポンサーシップ</th><th>スポンサー</th><th>状態</th></tr></thead><tbody><tr><td>2009-12</td><td>x64 ポート</td><td>様々、下記参照</td><td>✔ 完了</td></tr><tr><td>2010-08</td><td>PPC/e500 ポート（インタープリタ）</td><td>匿名の企業スポンサー</td><td>✔ 完了</td></tr><tr><td>2011-01</td><td>ARM ポート</td><td>QUALCOMM Inc.</td><td>✔ 完了</td></tr><tr><td>2011-06</td><td>バイトコードのロード/セーブ</td><td>Gehtsoft USA, LLC</td><td>✔ 完了</td></tr><tr><td>2011-07</td><td>PPC ポート</td><td>匿名の企業スポンサー</td><td>✔ 完了</td></tr><tr><td>2011-10</td><td>MIPS ポート</td><td>MIPS Technologies, Inc.</td><td>✔ 完了</td></tr><tr><td>2011-11</td><td>FFI コールバック</td><td>Neomantra Corp</td><td>✔ 完了</td></tr><tr><td>2012-03</td><td>アロケーション/ストアの沈降</td><td>匿名の企業スポンサー</td><td>✔ 完了</td></tr><tr><td>2012-05</td><td>ARM VFP + ハードフロート</td><td>匿名の企業スポンサー</td><td>✔ 完了</td></tr><tr><td>2012-11</td><td>LuaJIT 2.0 の完成</td><td>Snabb</td><td>✔ 完了</td></tr><tr><td>2013-03</td><td>64ビットビット単位演算</td><td>匿名の企業スポンサー</td><td>✔ 完了 git v2.1</td></tr><tr><td>2013-04</td><td>パフォーマンス</td><td>CloudFlare</td><td>✔ 完了 git v2.1</td></tr><tr><td>2013-06</td><td>低オーバーヘッドプロファイリング</td><td>GIANTS Software GmbH</td><td>✔ 完了 git v2.1</td></tr><tr><td>2014-12</td><td>ARM64 インタープリタ</td><td>匿名の企業スポンサー</td><td>✔ 完了 git v2.1</td></tr><tr><td>2015-08</td><td>MIPS32 ソフトフロート</td><td>Cisco Systems, Inc.</td><td>✔ 完了 git v2.1</td></tr><tr><td>2016-05</td><td>MIPS64</td><td>Cisco Systems, Inc.</td><td>✔ 完了 git v2.1</td></tr><tr><td>2016-07</td><td>ARM64 JIT コンパイラ</td><td>Cisco &amp; Linaro</td><td>✔ 完了 git v2.1</td></tr><tr><td>2017-07</td><td>PPC ソフトフロート</td><td>Cisco Systems, Inc.</td><td>✔ 完了 git v2.1</td></tr><tr><td>2019-12</td><td>MIPS64 r6 ポート</td><td>Wave Computing</td><td>✔ 完了 git v2.1</td></tr><tr><td>2021-03</td><td>文字列バッファ</td><td>fmad engineering llc</td><td>✔ 完了 git v2.1</td></tr><tr><td>2021-08</td><td>テーブルトラバーサル</td><td>OpenResty Inc.</td><td>✔ 完了 git v2.1</td></tr></tbody></table><h2 id="tableトラバーサルのコンパイルのためのスポンサーシップ" tabindex="-1">Tableトラバーサルのコンパイルのためのスポンサーシップ <a class="header-anchor" href="#tableトラバーサルのコンパイルのためのスポンサーシップ" aria-label="Permalink to &quot;Tableトラバーサルのコンパイルのためのスポンサーシップ&quot;">​</a></h2><p>OpenResty Inc.は、Luaテーブルのトラバーサル（つまり、<code>next()</code>、<code>pairs()</code> およびそれに伴う最適化されたバイトコード）のJITコンパイルのスポンサーとなりました。</p><h2 id="文字列バッファのためのスポンサーシップ" tabindex="-1">文字列バッファのためのスポンサーシップ <a class="header-anchor" href="#文字列バッファのためのスポンサーシップ" aria-label="Permalink to &quot;文字列バッファのためのスポンサーシップ&quot;">​</a></h2><p>fmad engineering llcは、文字列バッファライブラリの開発のスポンサーとなりました。文字列バッファライブラリは、文字列のようなデータの高性能な操作を可能にします。また、Luaオブジェクトのための高性能シリアライザも含まれています。</p><h2 id="mips64-r6ポートのためのスポンサーシップ" tabindex="-1">MIPS64 r6ポートのためのスポンサーシップ <a class="header-anchor" href="#mips64-r6ポートのためのスポンサーシップ" aria-label="Permalink to &quot;MIPS64 r6ポートのためのスポンサーシップ&quot;">​</a></h2><p>Wave Computingは、既存のMIPSポートのMIPS64 r6 ISAバリアントのスポンサーとなりました。この作業はWave ComputingとRT-RKによって行われました。</p><h2 id="ppcソフトフロートサポートのためのスポンサーシップ" tabindex="-1">PPCソフトフロートサポートのためのスポンサーシップ <a class="header-anchor" href="#ppcソフトフロートサポートのためのスポンサーシップ" aria-label="Permalink to &quot;PPCソフトフロートサポートのためのスポンサーシップ&quot;">​</a></h2><p>Cisco Systems, Inc.は、既存のPPCポートのソフトフロートバリアントの開発のスポンサーとなりました。この作業はRT-RKによって行われました。</p><h2 id="arm64-jitコンパイラのためのスポンサーシップ" tabindex="-1">ARM64 JITコンパイラのためのスポンサーシップ <a class="header-anchor" href="#arm64-jitコンパイラのためのスポンサーシップ" aria-label="Permalink to &quot;ARM64 JITコンパイラのためのスポンサーシップ&quot;">​</a></h2><p>Cisco Systems, Inc.とLinaroは、ARM64ポートのためのJITコンパイラバックエンドの開発のスポンサーとなりました。この作業はRT-RK、Linaro、およびARMによって行われました。</p><h2 id="mips64ポートのためのスポンサーシップ" tabindex="-1">MIPS64ポートのためのスポンサーシップ <a class="header-anchor" href="#mips64ポートのためのスポンサーシップ" aria-label="Permalink to &quot;MIPS64ポートのためのスポンサーシップ&quot;">​</a></h2><p>Cisco Systems, Inc.は、MIPS64ポート（ハードフロート+ソフトフロート）の開発のスポンサーとなりました。この作業はRT-RKによって行われました。</p><h2 id="mips32デュアルナンバー-ソフトフロートサポート" tabindex="-1">MIPS32デュアルナンバー+ソフトフロートサポート <a class="header-anchor" href="#mips32デュアルナンバー-ソフトフロートサポート" aria-label="Permalink to &quot;MIPS32デュアルナンバー+ソフトフロートサポート&quot;">​</a></h2><p>LuaJITの既存のMIPSポートはハードウェアFPUを必要としますが、多くのMIPS CPUを搭載した組み込みデバイスにはFPUが搭載されていない（または必要とされていない）ことがあります。シングルナンバーモードのみがサポートされているため、カーネルでのFPUエミュレーションは許容できないほど遅くなります。</p><p>Cisco Systems, Inc.は、既存のMIPS32ポートのための不足していたデュアルナンバー+ソフトフロート機能の開発のスポンサーとなりました。この作業はRT-RKによって行われました。</p><p>これらの変更により、LuaJITのMIPSポートは、小型ルータから高性能なFPU非搭載のMIPS SoCまで、さらに多くのMIPSデバイスで使用できるようになりました。</p><h2 id="低オーバーヘッドプロファイリング" tabindex="-1">低オーバーヘッドプロファイリング <a class="header-anchor" href="#低オーバーヘッドプロファイリング" aria-label="Permalink to &quot;低オーバーヘッドプロファイリング&quot;">​</a></h2><p>GIANTS Software GmbHは、2013年6月にLuaJIT 2.1向けの低オーバーヘッドプロファイリング機能の開発をスポンサーしました。GIANTS Softwareは、デスクトップ、モバイル、コンソール用のさまざまなシミュレーションゲームを開発しています。これらのゲームは、スクリプティングやモディングにLuaを広範囲に使用しています。LuaJITへの切り替えは、すべてのプラットフォームでCPU負荷を削減し、必要なフレームレートを維持する上で重要でした。</p><h2 id="パフォーマンスの改善" tabindex="-1">パフォーマンスの改善 <a class="header-anchor" href="#パフォーマンスの改善" aria-label="Permalink to &quot;パフォーマンスの改善&quot;">​</a></h2><p>CloudFlare Inc.は、2013年4月からLuaJIT 2.1のさまざまなパフォーマンス改善をスポンサーしています。CloudFlareは、世界最大級のnginx + LuaJITのデプロイメントを運用しています。この規模では、リクエストの処理時間をわずかに短縮することが大きな影響を与えます。</p><p>LuaJIT 2.0と比較して、より多くのビルトインおよびバイトコードがコンパイルおよび最適化されています。文字列操作の多くも改善されています。</p><h2 id="_64ビットビット単位演算のためのスポンサーシップ" tabindex="-1">64ビットビット単位演算のためのスポンサーシップ <a class="header-anchor" href="#_64ビットビット単位演算のためのスポンサーシップ" aria-label="Permalink to &quot;64ビットビット単位演算のためのスポンサーシップ&quot;">​</a></h2><p>名前非公開を希望する企業スポンサーは、2013年3月にLuaJIT 2.1のための64ビットビット単位演算の開発をスポンサーしました。</p><h2 id="割り当て-ストアシンキングのためのスポンサーシップ" tabindex="-1">割り当て/ストアシンキングのためのスポンサーシップ <a class="header-anchor" href="#割り当て-ストアシンキングのためのスポンサーシップ" aria-label="Permalink to &quot;割り当て/ストアシンキングのためのスポンサーシップ&quot;">​</a></h2><p>名前非公開を希望する企業スポンサーは、2012年3月にLuaJITのための割り当てシンキングとストアシンキングの最適化開発をスポンサーしました。</p><p>一時的な割り当てを避けることは、高水準言語の重要な最適化です。このスポンサーシップの目的は、分析と最適化技術の革新的な組み合わせを研究することです。これらを組み合わせることで、従来の技術よりも効果的で、動的言語により適しています。</p><h2 id="ffiコールバックのためのスポンサーシップ" tabindex="-1">FFIコールバックのためのスポンサーシップ <a class="header-anchor" href="#ffiコールバックのためのスポンサーシップ" aria-label="Permalink to &quot;FFIコールバックのためのスポンサーシップ&quot;">​</a></h2><p>Neomantra Corpは、2011年11月にLuaJIT x86/x64のためのFFIコールバック機能をスポンサーしました。</p><h2 id="luajitのmipsポートのためのスポンサーシップ" tabindex="-1">LuaJITのMIPSポートのためのスポンサーシップ <a class="header-anchor" href="#luajitのmipsポートのためのスポンサーシップ" aria-label="Permalink to &quot;LuaJITのMIPSポートのためのスポンサーシップ&quot;">​</a></h2><p>オープンソース開発への取り組みの一環として、MIPS Technologies, Inc.は2011年10月にLuaJIT 2.0のMIPSポートをスポンサーしました。</p><p>このポートには、MIPS32 R1アーキテクチャ（O32 ABI、hard-fp、リトルエンディアンまたはビッグエンディアン）に準拠したCPUが必要です。このポートは、MIPS32 34Kおよび74Kコアに最適化されています。</p><h2 id="バイトコードの読み込み-保存のためのスポンサーシップ" tabindex="-1">バイトコードの読み込み/保存のためのスポンサーシップ <a class="header-anchor" href="#バイトコードの読み込み-保存のためのスポンサーシップ" aria-label="Permalink to &quot;バイトコードの読み込み/保存のためのスポンサーシップ&quot;">​</a></h2><p>Gehtsoft USA, LLCは、2011年6月にLuaJITのバイトコード読み込み/保存機能をスポンサーしました。</p><p>LuaJITのバイトコード形式は移植可能で、Luaバイトコードより約40％小さいです。LuaJITのバイトコードローダーは、Luaのバイトコードローダーより10倍速いです。そして、LuaJITのバイトコードはソースコードより30倍から40倍速く読み込まれます。これはコード自体の実行速度とは関係ないことに注意してください — コードがどのようにロードされたかは関係ありません。</p><h2 id="luajitのarmポートのためのスポンサーシップ" tabindex="-1">LuaJITのARMポートのためのスポンサーシップ <a class="header-anchor" href="#luajitのarmポートのためのスポンサーシップ" aria-label="Permalink to &quot;LuaJITのARMポートのためのスポンサーシップ&quot;">​</a></h2><p>QUALCOMM Inc.は2011年1月にLuaJIT 2.0のARMポートをスポンサーしました。</p><p>ARMポートの初期ターゲットは、低〜中級のARMベースのデバイスでした。このポートには、ARMv5アーキテクチャ（ARM9Eコアまたはそれ以上）に準拠したCPUとソフトウェア浮動小数点（FPUは不要）、およびクラシックなARM命令セットが必要です。</p><p>別の匿名を希望する企業スポンサーが、ARMポートのVFPサポート（ハードウェアFPU）とハードフロートEABIサポートをスポンサーしました。LuaJIT 2.0のARMポートは、ソフトフロートターゲット用、ソフトフロートEABI（armel）を使用するVFPターゲット用、またはハードフロートEABI（armhf）を使用するVFPターゲット用にビルドすることができます。</p><h2 id="luajitのppcポートのためのスポンサーシップ" tabindex="-1">LuaJITのPPCポートのためのスポンサーシップ <a class="header-anchor" href="#luajitのppcポートのためのスポンサーシップ" aria-label="Permalink to &quot;LuaJITのPPCポートのためのスポンサーシップ&quot;">​</a></h2><p>名前を非公開にしたいと望む企業スポンサーが、2011年7月にLuaJITをPowerPC CPUに移植するためのスポンサーシップを提供しました。この移植はFreeScale e300コアに最適化されていますが、標準的なハードウェアFPUを搭載するすべてのPPC CPUで問題なく動作します。</p><p>別の名前を非公開にしたいと望む企業スポンサーは、2010年8月にLuaJIT 2.0インタプリタをPowerPC/e500v2（標準PPCとは異なるFPU）に移植するためのスポンサーシップを以前に提供していました。</p><h2 id="luajitのx64ポートのためのスポンサーシップ" tabindex="-1">LuaJITのx64ポートのためのスポンサーシップ <a class="header-anchor" href="#luajitのx64ポートのためのスポンサーシップ" aria-label="Permalink to &quot;LuaJITのx64ポートのためのスポンサーシップ&quot;">​</a></h2><p>このスポンサーシップキャンペーンの目標は、LuaJIT 2.0のx64ポートのために20,000ユーロを調達することでした。LuaJITのスポンサーシップを促進するために、Athena Capital Researchは2009年12月に初回の寄付として5,000ユーロを提供しました。</p><p>オープンソースコミュニティへのコミットメントの一環として、Athena Capital Researchは最大7,000ユーロのマッチングファンドを提供することを申し出ました。企業スポンサーシップを通じて提供されたすべての資金は1対1でマッチングされました。他の資金は2対1でマッチングされました。</p><p>x64のスポンサーシップ目標は2010年1月に達成され、合計20,167ユーロが調達されました！ LuaJITを支援してくれたすべてのスポンサーに感謝します！</p><table tabindex="0"><thead><tr><th>スポンサー名</th><th>金額</th><th>マッチング</th><th>日付</th></tr></thead><tbody><tr><td>Athena Capital Research LLC</td><td>€ 5,000</td><td></td><td>2009-12-07</td></tr><tr><td>(身元非公開) via Athena CR</td><td>$ 100</td><td>+ $ 200</td><td>2009-12-10</td></tr><tr><td>Snabb</td><td>€ 100</td><td>+ € 100</td><td>2009-12-17</td></tr><tr><td>Google Inc.</td><td>€ 8,000</td><td>+ € 6,767</td><td>2010-01-20</td></tr><tr><td>合計 € 20,167</td><td>€ 13,167</td><td>+ € 7,000</td><td></td></tr></tbody></table><div class="info custom-block"><p class="custom-block-title">注意</p><p>全ての会計はユーロで行われます。外貨は、受領日の実際の為替レートを銀行手数料および税金（該当する場合）を差し引いてユーロに換算されます。</p></div>',52)]))}const I=a(i,[["render",o]]);export{c as __pageData,I as default};
