import{_ as s,c as e,a2 as t,o as i}from"./chunks/framework.6x3wfQve.js";const k=JSON.parse('{"title":"os.setlocale","description":"","frontmatter":{},"headers":[],"relativePath":"document/built_in/os/setlocale.md","filePath":"document/built_in/os/setlocale.md","lastUpdated":1729487189000}'),l={name:"document/built_in/os/setlocale.md"};function o(n,a,h,d,c,p){return i(),e("div",null,a[0]||(a[0]=[t(`<h1 id="os-setlocale" tabindex="-1">os.setlocale <a class="header-anchor" href="#os-setlocale" aria-label="Permalink to &quot;os.setlocale&quot;">​</a></h1><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">os.setlocale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (locale [, category])</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>プログラムのロケールを設定します。<code>category</code>には<code>&quot;all&quot;</code>, <code>&quot;collate&quot;</code>, <code>&quot;ctype&quot;</code>, <code>&quot;monetary&quot;</code>, <code>&quot;numeric&quot;</code>, <code>&quot;time&quot;</code>を指定できます。成功した場合、新しいロケールの名前を返し、失敗した場合は<code>nil</code>を返します。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">os.setlocale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;en_US.UTF-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;all&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">os.date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;%x&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- ロケールに従った日付フォーマット</span></span></code></pre></div><p>この例では、ロケールを設定して、そのロケールに基づいた日付を表示しています。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua 5.1</li></ul>`,9)]))}const u=s(l,[["render",o]]);export{k as __pageData,u as default};
