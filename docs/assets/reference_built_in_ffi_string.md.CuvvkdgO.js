import{_ as s,c as a,a2 as e,o as t}from"./chunks/framework.CKGreiRV.js";const c=JSON.parse('{"title":"ffi.string","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/ffi/string.md","filePath":"reference/built_in/ffi/string.md","lastUpdated":1730090475000}'),l={name:"reference/built_in/ffi/string.md"};function n(h,i,r,p,d,k){return t(),a("div",null,i[0]||(i[0]=[e(`<h1 id="ffi-string" tabindex="-1">ffi.string <a class="header-anchor" href="#ffi-string" aria-label="Permalink to &quot;ffi.string&quot;">​</a></h1><p>Cの文字列（<code>char*</code>）をLuaの文字列に変換する</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ffi.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ptr [, len])</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p><code>ffi.string</code> 関数は、指定されたポインタ <code>ptr</code> が指すデータをLuaの文字列として返します。オプションで <code>len</code> を指定すると、その長さ分だけデータをコピーします。<code>len</code> が指定されていない場合は、<code>ptr</code> をゼロ終端された文字列として扱い、終端までのデータをコピーします。</p><h2 id="補足" tabindex="-1">補足 <a class="header-anchor" href="#補足" aria-label="Permalink to &quot;補足&quot;">​</a></h2><ul><li><code>ffi.string</code> は <code>const char *</code> のポインタから一時的なデータをLuaの文字列に変換する際に便利です。</li><li>返されるLua文字列はデータのコピーで、元のCデータとは独立して管理されます。</li><li>バイナリデータやゼロを含むデータもLua文字列として扱えるため、<code>len</code> を指定して任意の長さを取得できます。</li></ul><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ffi </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ffi&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> c_str </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ffi.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;char[6]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ffi.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c_str))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- hello</span></span></code></pre></div><p>このコードは、Cの文字列をLuaの文字列に変換して表示します。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>LuaJIT</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li>ffi.copy</li></ul>`,14)]))}const u=s(l,[["render",n]]);export{c as __pageData,u as default};
