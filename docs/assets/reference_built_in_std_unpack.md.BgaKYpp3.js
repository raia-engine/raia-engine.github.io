import{_ as a,c as i,a2 as t,o as e}from"./chunks/framework.6x3wfQve.js";const o=JSON.parse('{"title":"unpack","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/std/unpack.md","filePath":"reference/built_in/std/unpack.md","lastUpdated":null}'),n={name:"reference/built_in/std/unpack.md"};function l(h,s,p,k,d,r){return e(),i("div",null,s[0]||(s[0]=[t(`<h1 id="unpack" tabindex="-1">unpack <a class="header-anchor" href="#unpack" aria-label="Permalink to &quot;unpack&quot;">​</a></h1><p>テーブルの要素を複数の引数として展開する</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (list [, i [, j]])</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>指定されたテーブルから要素を返します。この関数は</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list[i], list[i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, list[j]</span></span></code></pre></div><p>と同等ですが、上記のコードは固定数の要素に対してのみ記述できます。デフォルトでは、<code>i</code>は1で、<code>j</code>は長さ演算子によって定義されたリストの長さです。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> t </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">unpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 1 2 3</span></span></code></pre></div><p>この例では、テーブルの要素が展開されて表示されます。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua5.1</li></ul>`,12)]))}const u=a(n,[["render",l]]);export{o as __pageData,u as default};
