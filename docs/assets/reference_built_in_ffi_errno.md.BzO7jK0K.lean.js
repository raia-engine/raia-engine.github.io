import{_ as a,c as s,a2 as e,o as n}from"./chunks/framework.CuCbyi2k.js";const c=JSON.parse('{"title":"ffi.errno","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/ffi/errno.md","filePath":"reference/built_in/ffi/errno.md","lastUpdated":1730090475000}'),t={name:"reference/built_in/ffi/errno.md"};function l(r,i,h,p,o,d){return n(),s("div",null,i[0]||(i[0]=[e(`<h1 id="ffi-errno" tabindex="-1">ffi.errno <a class="header-anchor" href="#ffi-errno" aria-label="Permalink to &quot;ffi.errno&quot;">​</a></h1><p>Cライブラリの<code>errno</code>の値を取得または設定する</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ffi.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">errno</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([newerr])</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p><code>ffi.errno</code> 関数は、直前のC関数呼び出しで発生したエラー番号を返します。オプションで <code>newerr</code> を指定すると、エラー番号をその値に設定し、以前のエラー番号を返します。これは、OSに依存しない方法でエラー状態を追跡するために使用されます。</p><h2 id="補足" tabindex="-1">補足 <a class="header-anchor" href="#補足" aria-label="Permalink to &quot;補足&quot;">​</a></h2><ul><li><code>ffi.errno</code> はエラー状態を示すC関数（通常は <code>-1</code> や <code>NULL</code> を返す関数）でのみ意味を持ち、そうでない場合は未定義の値が含まれる可能性があります。</li><li>関連するC関数の呼び出し直後に取得するのが推奨されます。</li></ul><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ffi </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ffi&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- C関数でエラーが発生した後にerrnoを取得</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ffi.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">errno</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Last error: &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, err)</span></span></code></pre></div><p>このコードは、最後に発生したエラー番号を取得して表示します。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>LuaJIT</li></ul>`,12)]))}const f=a(t,[["render",l]]);export{c as __pageData,f as default};
