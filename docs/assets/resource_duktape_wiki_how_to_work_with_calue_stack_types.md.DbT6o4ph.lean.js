import{_ as d,c as e,a2 as r,o}from"./chunks/framework.DPuwY6B9.js";const _=JSON.parse('{"title":"バリュースタックタイプの操作方法","description":"","frontmatter":{},"headers":[],"relativePath":"resource/duktape/wiki/how_to_work_with_calue_stack_types.md","filePath":"resource/duktape/wiki/how_to_work_with_calue_stack_types.md","lastUpdated":null}'),a={name:"resource/duktape/wiki/how_to_work_with_calue_stack_types.md"};function u(i,t,l,p,c,n){return o(),e("div",null,t[0]||(t[0]=[r('<h1 id="バリュースタックタイプの操作方法" tabindex="-1">バリュースタックタイプの操作方法 <a class="header-anchor" href="#バリュースタックタイプの操作方法" aria-label="Permalink to &quot;バリュースタックタイプの操作方法&quot;">​</a></h1><h2 id="読み取り値" tabindex="-1">読み取り値 <a class="header-anchor" href="#読み取り値" aria-label="Permalink to &quot;読み取り値&quot;">​</a></h2><p>以下の表は、特定の型（例：文字列）の値を読み取るためのAPIコールをまとめたものである。</p><table tabindex="0"><thead><tr><th>Value stack entry type</th><th>duk_get_xxx()</th><th>duk_get_xxx_default()</th><th>duk_require_xxx()</th><th>duk_opt_xxx()</th><th>duk_to_xxx()</th></tr></thead><tbody><tr><td>none (index out of bounds)</td><td>default (automatic)</td><td>default (explicit)</td><td>TypeError</td><td>default (explicit)</td><td>TypeError</td></tr><tr><td>undefined</td><td>default (automatic)</td><td>default (explicit)</td><td>TypeError</td><td>default (explicit)</td><td>coercion</td></tr><tr><td>null</td><td>default (automatic)</td><td>default (explicit)</td><td>TypeError</td><td>TypeError</td><td>coercion</td></tr><tr><td>Matching type</td><td>as is</td><td>as is</td><td>as is</td><td>as is</td><td>as is</td></tr><tr><td>Non-matching type</td><td>default (automatic)</td><td>default (explicit)</td><td>TypeError</td><td>TypeError</td><td>coercion</td></tr></tbody></table><p>文字列の値の具体例。</p><table tabindex="0"><thead><tr><th>Value stack entry type</th><th>duk_get_string()</th><th>duk_get_string_default()</th><th>duk_require_string()</th><th>duk_opt_string()</th><th>duk_to_string()</th></tr></thead><tbody><tr><td>none (index out of bounds)</td><td>NULL</td><td>default (explicit)</td><td>TypeError</td><td>default (explicit)</td><td>TypeError</td></tr><tr><td>undefined</td><td>NULL</td><td>default (explicit)</td><td>TypeError</td><td>default (explicit)</td><td>&quot;undefined&quot;</td></tr><tr><td>null</td><td>NULL</td><td>default (explicit)</td><td>TypeError</td><td>TypeError</td><td>&quot;null&quot;</td></tr><tr><td>boolean</td><td>NULL</td><td>default (explicit)</td><td>TypeError</td><td>TypeError</td><td>&quot;true&quot;</td></tr><tr><td>number</td><td>NULL</td><td>default (explicit)</td><td>TypeError</td><td>TypeError</td><td>&quot;123.4&quot;</td></tr><tr><td>string</td><td>&quot;hello&quot;</td><td>&quot;hello&quot;</td><td>&quot;hello&quot;</td><td>&quot;hello&quot;</td><td></td></tr><tr><td>object</td><td>NULL</td><td>default (explicit)</td><td>TypeError</td><td>TypeError</td><td>&quot;[object Object]&quot;</td></tr><tr><td>buffer</td><td>NULL</td><td>default (explicit)</td><td>TypeError</td><td>TypeError</td><td>&quot;[object ArrayBuffer]&quot;</td></tr><tr><td>pointer</td><td>NULL</td><td>default (explicit)</td><td>TypeError</td><td>TypeError</td><td>&quot;0xdeadbeef&quot;</td></tr><tr><td>lightfunc</td><td>NULL</td><td>default (explicit)</td><td>TypeError</td><td>TypeError</td><td>&quot;function light_08062727_0a11() { [lightfunc code] }&quot;</td></tr></tbody></table><blockquote><p>Notes: 整数ゲッターは、APIの返り値に対して double から integer への強制変換を行います。この強制は、値スタック上の数値を変更しないので、double のままである。</p></blockquote>',7)]))}const s=d(a,[["render",u]]);export{_ as __pageData,s as default};
