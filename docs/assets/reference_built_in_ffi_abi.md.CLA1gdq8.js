import{_ as s,c as a,a2 as t,o as n}from"./chunks/framework.DzmM640o.js";const E=JSON.parse('{"title":"ffi.abi","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/ffi/abi.md","filePath":"reference/built_in/ffi/abi.md","lastUpdated":1730090475000}'),e={name:"reference/built_in/ffi/abi.md"};function h(l,i,p,d,r,k){return n(),a("div",null,i[0]||(i[0]=[t(`<h1 id="ffi-abi" tabindex="-1">ffi.abi <a class="header-anchor" href="#ffi-abi" aria-label="Permalink to &quot;ffi.abi&quot;">​</a></h1><p>実行環境に関するABI情報を取得する</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ffi.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">abi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(param)</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p><code>ffi.abi</code> 関数は、指定した <code>param</code>（Luaの文字列）が現在の実行環境のABI（Application Binary Interface）に該当するかどうかを判定します。該当する場合は <code>true</code>、そうでない場合は <code>false</code> を返します。これを利用することで、スクリプトは特定の環境条件に応じた適切な処理を行えるようになります。</p><table tabindex="0"><thead><tr><th>パラメータ</th><th>説明</th></tr></thead><tbody><tr><td>32bit</td><td>32ビットアーキテクチャ</td></tr><tr><td>64bit</td><td>64ビットアーキテクチャ</td></tr><tr><td>le</td><td>リトルエンディアンアーキテクチャ</td></tr><tr><td>be</td><td>ビッグエンディアンアーキテクチャ</td></tr><tr><td>fpu</td><td>ハードウェアFPUを持つターゲット</td></tr><tr><td>softfp</td><td>softfp呼び出し規約</td></tr><tr><td>hardfp</td><td>hardfp呼び出し規約</td></tr><tr><td>eabi</td><td>標準ABIのEABIバリアント</td></tr><tr><td>win</td><td>標準ABIのWindowsバリアント</td></tr><tr><td>pauth</td><td>ポインタ認証ABI</td></tr><tr><td>uwp</td><td>ユニバーサルWindowsプラットフォーム</td></tr><tr><td>gc64</td><td>64ビットGC参照</td></tr></tbody></table><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ffi </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ffi&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ffi.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">abi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;64bit&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Running on a 64-bit architecture&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Running on a 32-bit architecture&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ffi.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">abi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;le&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Little-endian architecture&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Big-endian architecture&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>このコードは、実行環境が64ビットか32ビットか、リトルエンディアンかビッグエンディアンかを判定し、適切なメッセージを表示します。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>LuaJIT</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li><code>ffi.arch</code></li></ul>`,13)]))}const c=s(e,[["render",h]]);export{E as __pageData,c as default};
