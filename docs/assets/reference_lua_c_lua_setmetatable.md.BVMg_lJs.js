import{_ as e,c as s,a2 as t,o as i}from"./chunks/framework.DPuwY6B9.js";const c=JSON.parse('{"title":"lua_setmetatable","description":"","frontmatter":{},"headers":[],"relativePath":"reference/lua_c/lua_setmetatable.md","filePath":"reference/lua_c/lua_setmetatable.md","lastUpdated":1731828945000}'),l={name:"reference/lua_c/lua_setmetatable.md"};function n(h,a,p,r,d,k){return i(),s("div",null,a[0]||(a[0]=[t(`<h1 id="lua-setmetatable" tabindex="-1">lua_setmetatable <a class="header-anchor" href="#lua-setmetatable" aria-label="Permalink to &quot;lua_setmetatable&quot;">​</a></h1><p>指定されたインデックスにある値のメタテーブルを設定します。</p><p><code>[-1, +0, -]</code></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lua_setmetatable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (lua_State </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">L</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>スタックからテーブルをポップし、指定された有効なインデックスの値の新しいメタテーブルとして設定します。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lua_newtable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(L);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* 新しいメタテーブルを作成 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lua_setmetatable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(L, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>このコードは、インデックス1の値に新しいメタテーブルを設定します。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua5.1</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li>lua_getmetatable</li><li>luaL_setmetatable</li></ul>`,13)]))}const u=e(l,[["render",n]]);export{c as __pageData,u as default};
