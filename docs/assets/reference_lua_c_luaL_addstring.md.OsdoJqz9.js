import{_ as s,c as i,a2 as e,o as t}from"./chunks/framework.DPuwY6B9.js";const k=JSON.parse('{"title":"luaL_addstring","description":"","frontmatter":{},"headers":[],"relativePath":"reference/lua_c/luaL_addstring.md","filePath":"reference/lua_c/luaL_addstring.md","lastUpdated":null}'),l={name:"reference/lua_c/luaL_addstring.md"};function d(n,a,h,r,p,o){return t(),i("div",null,a[0]||(a[0]=[e('<h1 id="lual-addstring" tabindex="-1">luaL_addstring <a class="header-anchor" href="#lual-addstring" aria-label="Permalink to &quot;luaL_addstring&quot;">​</a></h1><p>ゼロ終端文字列<code>s</code>をバッファ<code>B</code>に追加します。</p><p><code>[-0, +0, m]</code></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> luaL_addstring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (luaL_Buffer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">B</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> char</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>ゼロ終端文字列<code>s</code>をバッファ<code>B</code>に追加します（<code>luaL_Buffer</code>を参照）。文字列には組み込みのゼロを含むことはできません。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">luaL_addstring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">B</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;world&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>このコードは、バッファ<code>B</code>に文字列「world」を追加します。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua5.1</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li>luaL_addchar</li><li>luaL_addlstring</li></ul>',13)]))}const u=s(l,[["render",d]]);export{k as __pageData,u as default};
