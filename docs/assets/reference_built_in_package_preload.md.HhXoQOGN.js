import{_ as e,c as i,a2 as s,o as t}from"./chunks/framework.DPuwY6B9.js";const c=JSON.parse('{"title":"package.preload","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/package/preload.md","filePath":"reference/built_in/package/preload.md","lastUpdated":1730041717000}'),l={name:"reference/built_in/package/preload.md"};function n(p,a,r,h,d,o){return t(),i("div",null,a[0]||(a[0]=[s(`<h1 id="package-preload" tabindex="-1">package.preload <a class="header-anchor" href="#package-preload" aria-label="Permalink to &quot;package.preload&quot;">​</a></h1><p>モジュールを手動で登録するためのテーブル</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">package.preload</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>特定のモジュールのローダー関数を格納するテーブルです。<code>require</code> はモジュールをロードする際、まずこのテーブルを参照して、モジュール名に対応するローダー関数が登録されているかを確認します。これにより、Lua スクリプトや C ライブラリ以外の方法でモジュールを提供することが可能になります。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">package.preload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mymodule&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Loading mymodule&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mymodule&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>この例では、<code>mymodule</code>のローダーを手動で設定し、<code>require</code>でロードしています。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua 5.1</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li><a href="./require.html"><code>require</code></a></li><li><a href="./loaders.html"><code>package.loaders</code></a></li></ul>`,12)]))}const u=e(l,[["render",n]]);export{c as __pageData,u as default};
