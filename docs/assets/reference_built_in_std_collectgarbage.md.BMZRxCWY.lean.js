import{_ as e,c as a,a2 as o,o as d}from"./chunks/framework.DzmM640o.js";const u=JSON.parse('{"title":"collectgarbage","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/std/collectgarbage.md","filePath":"reference/built_in/std/collectgarbage.md","lastUpdated":1730041717000}'),s={name:"reference/built_in/std/collectgarbage.md"};function l(c,t,i,r,n,h){return d(),a("div",null,t[0]||(t[0]=[o('<h1 id="collectgarbage" tabindex="-1">collectgarbage <a class="header-anchor" href="#collectgarbage" aria-label="Permalink to &quot;collectgarbage&quot;">​</a></h1><p>ガベージコレクタを制御する</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">collectgarbage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ([opt [, arg]])</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>この関数は、ガベージコレクタを制御するための汎用インターフェースです。最初の引数 <code>opt</code> によって、さまざまな機能を実行します：</p><table tabindex="0"><thead><tr><th><code>opt</code></th><th>説明</th></tr></thead><tbody><tr><td><code>&quot;collect&quot;</code></td><td>完全なガベージコレクションサイクルを実行します（これがデフォルトのオプションです）。</td></tr><tr><td><code>&quot;stop&quot;</code></td><td>ガベージコレクタを停止します。</td></tr><tr><td><code>&quot;restart&quot;</code></td><td>ガベージコレクタを再起動します。</td></tr><tr><td><code>&quot;count&quot;</code></td><td>Lua が使用している総メモリ量（キロバイト単位）を返します。</td></tr><tr><td><code>&quot;step&quot;</code></td><td>ガベージコレクションのステップを実行します。ステップの「サイズ」は <code>arg</code> によって制御され（値が大きいほど多くのステップを実行）、具体的な方法は指定されていません。ステップサイズを細かく制御したい場合は、<code>arg</code> の値を調整してください。コレクションサイクルが終了した場合は <code>true</code> を返します。</td></tr><tr><td><code>&quot;setpause&quot;</code></td><td>ガベージコレクタの一時停止パラメータを <code>arg</code> の値に設定し、以前の値を返します。</td></tr><tr><td><code>&quot;setstepmul&quot;</code></td><td>ガベージコレクタのステップ倍率を <code>arg</code> の値に設定し、以前の値を返します。</td></tr></tbody></table><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">collectgarbage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;collect&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>この例では、ガベージコレクタが強制的に実行されます。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua5.1</li></ul>',11)]))}const g=e(s,[["render",l]]);export{u as __pageData,g as default};
