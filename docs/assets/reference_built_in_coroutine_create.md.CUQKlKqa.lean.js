import{_ as e,c as i,a2 as s,o as t}from"./chunks/framework.CuCbyi2k.js";const k=JSON.parse('{"title":"coroutine.create","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/coroutine/create.md","filePath":"reference/built_in/coroutine/create.md","lastUpdated":1730041717000}'),n={name:"reference/built_in/coroutine/create.md"};function l(r,a,o,h,c,p){return t(),i("div",null,a[0]||(a[0]=[s(`<h1 id="coroutine-create" tabindex="-1">coroutine.create <a class="header-anchor" href="#coroutine-create" aria-label="Permalink to &quot;coroutine.create&quot;">​</a></h1><p>新しいコルーチンを作成する</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">coroutine.create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (f)</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>Lua関数 <code>f</code> を本体とする新しいコルーチンを作成します。<code>f</code> は必ず Lua の関数でなければなりません。この関数は新しく生成されたコルーチンを返し、そのオブジェクトのタイプは <code>&quot;thread&quot;</code> です。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> co </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> coroutine.create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello from coroutine!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">coroutine.resume</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(co)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- &quot;Hello from coroutine!&quot; を出力</span></span></code></pre></div><p>この例では、コルーチンを作成し、<code>resume</code>でその実行を開始しています。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua 5.1</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li><a href="./resume.html"><code>coroutine.resume</code></a></li><li><a href="./wrap.html"><code>coroutine.wrap</code></a></li></ul>`,12)]))}const u=e(n,[["render",l]]);export{k as __pageData,u as default};
