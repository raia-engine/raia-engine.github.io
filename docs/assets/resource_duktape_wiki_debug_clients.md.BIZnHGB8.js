import{_ as e,c as d,a2 as r,o as a}from"./chunks/framework.DPuwY6B9.js";const b=JSON.parse('{"title":"既知のDuktapeデバッグクライアントの実装","description":"","frontmatter":{},"headers":[],"relativePath":"resource/duktape/wiki/debug_clients.md","filePath":"resource/duktape/wiki/debug_clients.md","lastUpdated":null}'),o={name:"resource/duktape/wiki/debug_clients.md"};function u(s,t,i,n,l,p){return a(),d("div",null,t[0]||(t[0]=[r('<h1 id="既知のduktapeデバッグクライアントの実装" tabindex="-1">既知のDuktapeデバッグクライアントの実装 <a class="header-anchor" href="#既知のduktapeデバッグクライアントの実装" aria-label="Permalink to &quot;既知のDuktapeデバッグクライアントの実装&quot;">​</a></h1><p>もしあなたがデバッグ・クライアントを実装したり、Duktapeデバッグをあなたのプロジェクトに統合したならば、Duktape Wikiで課題を開き、ここに追加してください。</p><p>テーブル・カラム:</p><ul><li>デバッグクライアント/プロキシ &quot;は、デバッグクライアントまたはプロキシのメインページにリンクしています。</li><li>Transport &quot;は、デバッグクライアントがサポートするトランスポートを説明します。</li><li>プロトコル」は、デバッグクライアントがDuktapeとどのように通信するかを示します。バイナリdvalueプロトコルを直接実装する場合は「binary」、デバッグクライアントがJSONプロキシに依存している場合は「json」です。</li><li>&quot;Description &quot;は追加情報を提供します。</li></ul><table tabindex="0"><thead><tr><th>Debug client/proxy</th><th>Transport</th><th>Protocol</th><th>Description</th></tr></thead><tbody><tr><td>duk_debug.js</td><td>TCP</td><td>binary</td><td>duk_debug.js は Node.js ベースのデバッグクライアントとウェブ UI を組み合わせたものを提供します。Duktapeにバンドルされています。</td></tr><tr><td>duk_debug.js</td><td>TCP</td><td>binary</td><td>duk_debug.js は、Node.js ベースの JSON デバッグプロキシも提供します。Duktapeにバンドルされています。</td></tr><tr><td>duk_debug_proxy.js</td><td>TCP</td><td>binary</td><td>DukLuv で書かれた JSON デバッグプロキシで、非常に移植性が高く、あなたのアプリケーションに簡単にバンドルできます (DukLuv は MIT ライセンスです)。Duktapeにバンドルされています。</td></tr><tr><td>AllJoyn.js</td><td>AllJoyn custom</td><td>binary</td><td>コンソールと Python UI の両方を提供します。デバッグトランスポートはターゲットにローカルで、デバッグのためのAllJoynスキーマを公開します。</td></tr><tr><td>Minisphere</td><td>TCP</td><td>binary</td><td>Minisphereは、GUIとコンソールの両方のデバッグクライアントを提供しています。スクリーンショット：screenshot1, screenshot2, screenshot3, screenshot4.</td></tr><tr><td>duk4vb</td><td>In process</td><td>binary</td><td>Visual Basic 6で動作するDuktape用デバッガ。スクリーンショット：スクリーンショット1.</td></tr><tr><td>VSCode duk-debug</td><td>TCP</td><td>binary</td><td>Duktape ランタイム用の Visual Studio Code デバッガ拡張。<br>Source: <a href="https://github.com/harold-b/vscode-duktape-debug" target="_blank" rel="noreferrer">https://github.com/harold-b/vscode-duktape-debug</a><br>Screenshots: screenshot1, screenshot2.</td></tr></tbody></table>',5)]))}const k=e(o,[["render",u]]);export{b as __pageData,k as default};
