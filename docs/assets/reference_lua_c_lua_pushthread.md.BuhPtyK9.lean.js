import{_ as s,c as i,a2 as e,o as t}from"./chunks/framework.CKGreiRV.js";const o=JSON.parse('{"title":"lua_pushthread","description":"","frontmatter":{},"headers":[],"relativePath":"reference/lua_c/lua_pushthread.md","filePath":"reference/lua_c/lua_pushthread.md","lastUpdated":1731828945000}'),h={name:"reference/lua_c/lua_pushthread.md"};function l(n,a,p,r,d,k){return t(),i("div",null,a[0]||(a[0]=[e(`<h1 id="lua-pushthread" tabindex="-1">lua_pushthread <a class="header-anchor" href="#lua-pushthread" aria-label="Permalink to &quot;lua_pushthread&quot;">​</a></h1><p>現在のスレッドをスタックにプッシュし、メインスレッドであれば1を返します。</p><p><code>[-0, +1, -]</code></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lua_pushthread</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (lua_State </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">L</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p><code>L</code>によって表されるスレッドをスタックにプッシュします。このスレッドがそのステートのメインスレッドであれば1を返します。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> is_main_thread </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lua_pushthread</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(L);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;メインスレッド: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%d\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, is_main_thread);</span></span></code></pre></div><p>このコードは、現在のスレッドをスタックにプッシュし、メインスレッドかどうかを確認します。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua5.1</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li>lua_newthread</li><li>lua_resume</li></ul>`,13)]))}const c=s(h,[["render",l]]);export{o as __pageData,c as default};
