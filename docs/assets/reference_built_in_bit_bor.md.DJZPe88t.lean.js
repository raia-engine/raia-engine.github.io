import{_ as a,c as s,a2 as t,o as e}from"./chunks/framework.DzmM640o.js";const E=JSON.parse('{"title":"bit.bor","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/bit/bor.md","filePath":"reference/built_in/bit/bor.md","lastUpdated":1730090475000}'),h={name:"reference/built_in/bit/bor.md"};function l(n,i,r,p,k,d){return e(),s("div",null,i[0]||(i[0]=[t(`<h1 id="bit-bor" tabindex="-1">bit.bor <a class="header-anchor" href="#bit-bor" aria-label="Permalink to &quot;bit.bor&quot;">​</a></h1><p>数値同士のビット単位のOR演算を行う</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bit.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (x1 [, x2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>複数の引数 <code>x1, x2...</code> に対してビット単位のOR演算を行います。各引数の対応するビット同士でOR演算が適用され、結果を返します。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(bit.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">--&gt; 15</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(bit.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x12345678</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x0f0f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">--&gt; 305422207</span></span></code></pre></div><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>LuaJIT</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li><a href="./band.html"><code>bit.band</code></a></li><li><a href="./bxor.html"><code>bit.bxor</code></a></li></ul>`,11)]))}const b=a(h,[["render",l]]);export{E as __pageData,b as default};
