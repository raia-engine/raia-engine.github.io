import{_ as o,c,a2 as d,o as l}from"./chunks/framework.DPuwY6B9.js";const N=JSON.parse('{"title":"スクリプトの文法","description":"","frontmatter":{},"headers":[],"relativePath":"document/rag.md","filePath":"document/rag.md","lastUpdated":1697360545000}'),t={name:"document/rag.md"};function i(E,e,a,_,L,O){return l(),c("div",null,e[0]||(e[0]=[d(`<h2 id="文字コード" tabindex="-1">文字コード <a class="header-anchor" href="#文字コード" aria-label="Permalink to &quot;文字コード&quot;">​</a></h2><ul><li>utf-8</li></ul><h2 id="スクリプトファイルの拡張子" tabindex="-1">スクリプトファイルの拡張子 <a class="header-anchor" href="#スクリプトファイルの拡張子" aria-label="Permalink to &quot;スクリプトファイルの拡張子&quot;">​</a></h2><ul><li><code>.rag</code></li><li><code>.rags</code></li></ul><h1 id="スクリプトの文法" tabindex="-1">スクリプトの文法 <a class="header-anchor" href="#スクリプトの文法" aria-label="Permalink to &quot;スクリプトの文法&quot;">​</a></h1><h2 id="トークン" tabindex="-1">トークン <a class="header-anchor" href="#トークン" aria-label="Permalink to &quot;トークン&quot;">​</a></h2><h3 id="空白" tabindex="-1">空白 <a class="header-anchor" href="#空白" aria-label="Permalink to &quot;空白&quot;">​</a></h3><ul><li><code>LF</code>: <code>0x0A</code></li><li><code>CR</code>: <code>0x0D</code></li><li><code>EOL</code>: <code>&lt;LF&gt;</code>, <code>&lt;CR&gt;</code>, <code>&lt;CR&gt;&lt;LF&gt;</code> のいずれか</li><li><code>TAB_H</code>: <code>0x09</code></li><li><code>TAB_V</code>: <code>0x0B</code></li><li><code>TAB</code>: <code>&lt;TAB_H&gt;</code>, <code>&lt;TAB_V&gt;</code> のいずれか</li><li><code>FF</code>: <code>0x0C</code></li><li><code>SPACE_ASCII</code>: <code>0x20</code>。行頭に4つ以上連続して存在すると新しいスクリプト行として解釈されます。</li><li><code>SPACE_UTF8_2BYTE</code>: <code>0xC2A0</code></li><li><code>SPACE_UTF8_3BYTE</code>: <code>0xE38080</code></li><li><code>BLANK</code>: <code>&lt;SPACE_ASCII&gt;</code>, <code>&lt;EOL&gt;</code>, <code>&lt;TAB&gt;</code>, <code>&lt;FF&gt;</code> のいずれか。文字列や他のトークンの間隔を開ける役割をする。</li></ul><h3 id="記号" tabindex="-1">記号 <a class="header-anchor" href="#記号" aria-label="Permalink to &quot;記号&quot;">​</a></h3><ul><li><code>DOT</code>: <code>.</code></li><li><code>COMMA</code>: <code>,</code></li><li><code>EQUAL</code>: <code>=</code></li><li><code>SQUARE_L</code>: <code>[</code></li><li><code>SQUARE_R</code>: <code>]</code></li><li><code>CURLY_L</code>: <code>{</code></li><li><code>CURLY_R</code>: <code>}</code></li><li><code>ANGLE_L</code>: <code>&lt;</code></li><li><code>ANGLE_R</code>: <code>&gt;</code></li><li><code>ROUND_L</code>: <code>(</code></li><li><code>ROUND_R</code>: <code>)</code></li><li><code>PLUS</code>: <code>+</code></li><li><code>HYPHEN</code>: <code>-</code></li><li><code>ASTERISK</code>: <code>*</code></li><li><code>SLASH</code>: <code>/</code></li><li><code>BACK_SLASH</code>: <code>\\</code></li><li><code>SEMICOLON</code>: <code>;</code></li><li><code>COLON</code>: <code>:</code></li><li><code>DOLLAR</code>: <code>$</code></li><li><code>PERCENT</code>: <code>%</code></li><li><code>SHARP</code>: <code>#</code></li><li><code>QUOTE_SINGLE</code>: <code>&#39;</code></li><li><code>QUOTE_DOUBLE</code>: <code>&quot;</code></li><li><code>QUOTE_BACK</code>: <code>\`</code></li><li><code>UNDERSCORE</code>: <code>_</code></li><li><code>QUESTION</code>: <code>?</code></li><li><code>EXCLAMATION</code>: <code>!</code></li><li><code>AND</code>: <code>&amp;</code></li><li><code>AT</code>: <code>@</code></li><li><code>HAT</code>: <code>^</code></li><li><code>TILDE</code>: <code>~</code></li><li><code>OR</code>: <code>|</code></li></ul><h3 id="エスケープ文字" tabindex="-1">エスケープ文字 <a class="header-anchor" href="#エスケープ文字" aria-label="Permalink to &quot;エスケープ文字&quot;">​</a></h3><ul><li><code>ESC_LF</code>: <code>\\n</code>。文字列か<code>&lt;NOVEL_MESSAGE_KEYS&gt;</code>に使用する。それ以外のコンテキストでは使用できない。</li><li><code>ESC_CR</code>: <code>\\r</code>。文字列か<code>&lt;NOVEL_MESSAGE_KEYS&gt;</code>に使用する。それ以外のコンテキストでは使用できない。</li><li><code>ESC_TAB</code>: <code>\\t</code>。文字列か<code>&lt;NOVEL_MESSAGE_KEYS&gt;</code>に使用する。それ以外のコンテキストでは使用できない。</li><li><code>ESC_QUOTE_SINGLE</code>: <code>\\&#39;</code>。文字列か<code>&lt;NOVEL_MESSAGE_KEYS&gt;</code>に使用する。それ以外のコンテキストでは使用できない。</li><li><code>ESC_QUOTE_DOUBLE</code>: <code>\\&quot;</code>。文字列か<code>&lt;NOVEL_MESSAGE_KEYS&gt;</code>に使用する。それ以外のコンテキストでは使用できない。</li><li><code>ESC_BACK_SLASH</code>: <code>\\\\</code>。文字列か<code>&lt;NOVEL_MESSAGE_KEYS&gt;</code>に使用する。それ以外のコンテキストでは使用できない。</li><li><code>ESC_CHAR</code>: <code>&lt;ESC_LF&gt;</code>, <code>&lt;ESC_CR&gt;</code>, <code>&lt;ESC_TAB&gt;</code>, <code>&lt;ESC_QUOTE_SINGLE&gt;</code>, <code>&lt;ESC_QUOTE_DOUBLE&gt;</code>, <code>&lt;ESC_BACK_SLASH&gt;</code> のいずれか。文字列か<code>&lt;NOVEL_MESSAGE_KEYS&gt;</code>に使用する。それ以外のコンテキストでは使用できない。</li></ul><h3 id="メッセージ用の記号" tabindex="-1">メッセージ用の記号 <a class="header-anchor" href="#メッセージ用の記号" aria-label="Permalink to &quot;メッセージ用の記号&quot;">​</a></h3><ul><li><code>MESSAGE_SYMBOL_NON_TOP</code>: <code>&lt;ASTERISK&gt;</code>, <code>&lt;SEMICOLON&gt;</code>, <code>&lt;SHARP&gt;</code>, <code>&lt;AT&gt;</code>, <code>&lt;HAT&gt;</code>。<code>&lt;NOVEL_MESSAGE_KEYS&gt;</code>に使用する。先頭には使用しない。</li><li><code>MESSAGE_SYMBOL</code>: <code>&lt;DOT&gt;</code>, <code>&lt;COMMA&gt;</code>, <code>&lt;EQUAL&gt;</code>, <code>&lt;ROUND_L&gt;</code>, <code>&lt;ROUND_R&gt;</code>, <code>&lt;PLUS&gt;</code>, <code>&lt;HYPHEN&gt;</code>, <code>&lt;SLASH&gt;</code>, <code>&lt;COLON&gt;</code>, <code>&lt;DOLLAR&gt;</code>, <code>&lt;PERCENT&gt;</code>, <code>&lt;UNDERSCORE&gt;</code>, <code>&lt;QUESTION&gt;</code>, <code>&lt;EXCLAMATION&gt;</code>, <code>&lt;AND&gt;</code>, <code>&lt;TILDE&gt;</code>, <code>&lt;OR&gt;</code> のいずれか。<code>&lt;NOVEL_MESSAGE_KEYS&gt;</code>に使用する。</li></ul><h3 id="アルファベット" tabindex="-1">アルファベット <a class="header-anchor" href="#アルファベット" aria-label="Permalink to &quot;アルファベット&quot;">​</a></h3><ul><li><code>ALPHABET</code>: <code>a-z</code>、<code>A-Z</code> のいずれか。アルファベッドは変数名や関数名などの識別子に使用され、小文字と大文字を区別します。</li></ul><h3 id="utf-8" tabindex="-1">UTF-8 <a class="header-anchor" href="#utf-8" aria-label="Permalink to &quot;UTF-8&quot;">​</a></h3><ul><li><code>U1</code>: <code>0x80</code>から<code>0xBF</code>のいずれか（続くバイト）</li><li><code>U2</code>: <code>0xC2</code>から<code>0xDF</code>のいずれか（2バイト文字の最初のバイト）</li><li><code>U3</code>: <code>0xE0</code>、<code>0xE1</code>から<code>0xEC</code>、<code>0xEE</code>、<code>0xEF</code>のいずれか（3バイト文字の最初のバイト）</li><li><code>U4</code>: <code>0xF0</code>から<code>0xF4</code>のいずれか（4バイト文字の最初のバイト）</li><li><code>UTF8_TWO_BYTE</code>: <code>&lt;U2&gt;&lt;U1&gt;</code>（2バイトのUTF-8文字）</li><li><code>UTF8_THREE_BYTE</code>: <code>&lt;U3&gt;&lt;U1&gt;&lt;U1&gt;</code>（3バイトのUTF-8文字）</li><li><code>UTF8_FOUR_BYTE</code>: <code>&lt;U4&gt;&lt;U1&gt;&lt;U1&gt;&lt;U1&gt;</code>（4バイトのUTF-8文字）</li><li><code>UTF8</code>: <code>&lt;UTF8_TWO_BYTE&gt;</code>, <code>&lt;UTF8_THREE_BYTE&gt;</code>, <code>&lt;UTF8_FOUR_BYTE&gt;</code> のいずれか</li></ul><h3 id="予約語" tabindex="-1">予約語 <a class="header-anchor" href="#予約語" aria-label="Permalink to &quot;予約語&quot;">​</a></h3><ul><li><code>NONE</code>: <code>none</code></li><li><code>NULL</code>: <code>null</code></li><li><code>BOOLEAN</code>: <code>true</code>、<code>false</code> のいずれか</li><li><code>IF_START</code>: <code>if</code></li><li><code>IF_END</code>: <code>endif</code></li><li><code>IGNORE_START</code>: <code>ignore</code></li><li><code>IGNORE_END</code>: <code>endignore</code></li><li><code>MACRO_START</code>: <code>macro</code></li><li><code>MACRO_END</code>: <code>endmacro</code></li><li><code>SCRIPT_START</code>: <code>script</code>, <code>iscript</code> のいずれか</li><li><code>SCRIPT_END</code>: <code>endscript</code>, <code>endiscript</code> のいずれか</li><li><code>LINK_START</code>: <code>link</code></li><li><code>LINK_END</code>: <code>endlink</code></li><li><code>RETURN</code>: <code>return</code></li><li><code>STOP</code>: <code>stop</code>, <code>s</code>のいずれか</li></ul><h3 id="数値" tabindex="-1">数値 <a class="header-anchor" href="#数値" aria-label="Permalink to &quot;数値&quot;">​</a></h3><ul><li><code>DIGIT_NON_ZERO</code>: <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, <code>5</code>, <code>6</code>, <code>7</code>, <code>8</code>, <code>9</code> のいずれか。1から9までの任意の数字を指す。</li><li><code>DIGIT</code>: <code>0</code>, <code>&lt;DIGIT_NON_ZERO&gt;</code> のいずれか</li><li><code>DIGITS</code>: <code>&lt;DIGIT&gt;</code>の1つ以上の連続</li><li><code>INTEGER</code>: <code>&lt;DIGIT&gt;</code> または <code>&lt;DIGIT_NON_ZERO&gt;&lt;DIGITS&gt;</code></li><li><code>FLOAT</code>: <code>&lt;DIGITS&gt;&lt;DOT&gt;&lt;DIGITS&gt;</code></li><li><code>DIGIT_HEX</code>: <code>&lt;DIGIT&gt;</code>, <code>a</code>, <code>b</code>, <code>c</code>, <code>d</code>, <code>e</code>, <code>f</code>, <code>A</code>, <code>B</code>, <code>C</code>, <code>D</code>, <code>E</code>, <code>F</code> のいずれか</li><li><code>DIGITS_HEX</code>: <code>&lt;DIGIT_HEX&gt;</code>の1つ以上の連続</li><li><code>NUMERAL_HEX</code>: <code>0x&lt;DIGITS_HEX&gt;</code>, <code>0X&lt;DIGITS_HEX&gt;</code></li><li><code>SIGN</code>: <code>&lt;PLUS&gt;</code>, <code>&lt;HYPHEN&gt;</code> のいずれか</li><li><code>SIGNED_INTEGER</code>: <code>&lt;SIGN&gt;&lt;INTEGER&gt;</code></li><li><code>SIGNED_FLOAT</code>: <code>&lt;SIGN&gt;&lt;FLOAT&gt;</code></li></ul><h3 id="色" tabindex="-1">色 <a class="header-anchor" href="#色" aria-label="Permalink to &quot;色&quot;">​</a></h3><ul><li><code>HEX_COLOR_RRGGBB</code>: <code>&lt;SHARP&gt;&lt;DIGIT_HEX&gt;&lt;DIGIT_HEX&gt;&lt;DIGIT_HEX&gt;&lt;DIGIT_HEX&gt;&lt;DIGIT_HEX&gt;&lt;DIGIT_HEX&gt;</code></li></ul><h2 id="文法" tabindex="-1">文法 <a class="header-anchor" href="#文法" aria-label="Permalink to &quot;文法&quot;">​</a></h2><ul><li><p><code>RAG_SCRIPT</code>: <code>&lt;BLANK_BLOCK&gt;</code>, <code>&lt;SCRIPT_STRING_BLOCK&gt;</code>, <code>&lt;NOVEL_BLOCK&gt;</code>, で構成される</p></li><li><p><code>BLANK_BLOCK</code>: <code>&lt;BLANK_LINE&gt;</code> の連続が1つ以上</p></li><li><p><code>SCRIPT_STRING_BLOCK</code>: <code>&lt;SCRIPT_STRING_LINE&gt;</code> の連続が1つ以上</p></li><li><p><code>NOVEL_BLOCK</code>: <code>&lt;NOVEL_LINE&gt;</code> の連続が1つ以上</p></li><li><p><code>BLANK_LINE</code>: <code>&lt;BLANK&gt;</code> で構成される行</p></li><li><p><code>SCRIPT_STRING_LINE</code>: <code>&lt;SPACE_ASCII&gt;</code>が行頭から連続して4つ以上ある行末までの文字列。</p></li><li><p><code>SCRIPT_KEYS</code>: <code>&lt;ALPHABET&gt;</code>, <code>&lt;DIGIT&gt;</code>, <code>&lt;UNDERSCORE&gt;</code>, <code>&lt;UTF8&gt;</code>の1つ以上の連続</p></li><li><p><code>NOVEL_LINE</code>: <code>&lt;SPACE_ASCII&gt;</code>が存在しないか、行頭から０個から3個が連続してあった場合、その後<code>&lt;NOVEL_ELEMENTS&gt;</code>で構成される行</p></li><li><p><code>NOVEL_ELEMENTS</code>: <code>&lt;NOVEL_ELEMENT&gt;</code>の連続が1つ以上</p></li><li><p><code>NOVEL_ELEMENT</code>: <code>&lt;NOVEL_COMMAND&gt;</code>、<code>&lt;NOVEL_STRING&gt;</code>、<code>&lt;NOVEL_LABEL&gt;</code>、<code>&lt;NOVEL_SCRIPT_BLOCK&gt;</code>、<code>&lt;NOVEL_MACRO_BLOCK&gt;</code>、<code>&lt;NOVEL_LINK_BLOCK&gt;</code>、<code>&lt;NOVEL_SUBROUNTINE&gt;</code>、<code>&lt;NOVEL_IF_BLOCK&gt;</code>、<code>&lt;NOVEL_IGNORE_BLOCK&gt;</code>、 <code>&lt;NOVEL_COMMENT &gt;</code>、<code>&lt;NOVEL_MESSAGE&gt;</code> のいずれか</p></li><li><p><code>NOVEL_MESSAGE</code>: <code>&lt;NOVEL_MESSAGE_KEYS&gt;</code>で構成される。<code>&lt;NOVEL_COMMAND&gt;</code>、<code>&lt;NOVEL_LABEL&gt;</code>、<code>&lt;NOVEL_COMMENT&gt;</code>、<code>&lt;NOVEL_SCRIPT_BLOCK&gt;</code> に該当しない</p></li><li><p><code>NOVEL_COMMENT</code>: <code>&lt;NOVEL_HAT_COMMENT&gt;</code>, <code>&lt;NOVEL_SEMICOLON_COMMENT&gt;</code> のいずれか</p></li><li><p><code>NOVEL_HAT_COMMENT</code>: <code>&lt;HAT&gt;</code>から行末まで。<code>&lt;NOVEL_SCRIPT_BLOCK&gt;</code>と<code>&lt;NOVEL_STRING&gt;</code>内を除く</p></li><li><p><code>NOVEL_SEMICOLON_COMMENT</code>: 行頭の<code>&lt;SEMICOLON&gt;</code>から行末まで。<code>&lt;NOVEL_SCRIPT_BLOCK&gt;</code>と<code>&lt;NOVEL_STRING&gt;</code>内を除く</p></li><li><p><code>NOVEL_IGNORE_BLOCK</code>: <code>&lt;IGNORE_START&gt;</code>命令から<code>&lt;IGNORE_END&gt;</code>命令まで。間にはラベルを挟まないように。</p></li><li><p><code>NOVEL_IF_BLOCK</code>: <code>&lt;IF_START&gt;</code>命令から<code>&lt;IF_END&gt;</code>命令まで。間にはラベルを挟んではいけない。</p></li><li><p><code>NOVEL_SUBROUTINE</code>: <code>&lt;NOVEL_LABEL&gt;</code>から<code>&lt;NOVEL_SUBROUTINE_END&gt;</code>まで</p></li><li><p><code>NOVEL_SUBROUTINE_END</code>: <code>&lt;RETURN&gt;</code>命令あるいは<code>&lt;STOP&gt;</code>命令、またはファイル末尾</p></li><li><p><code>NOVEL_LINK_BLOCK</code>: <code>&lt;LINK_START&gt;</code>命令から<code>&lt;LINK_END&gt;</code>命令まで</p></li><li><p><code>NOVEL_MACRO_ATTRIBUTE_ALL</code>: <code>&lt;NOVEL_MACRO_BLOCK&gt;</code>内の<code>&lt;NOVEL_COMMAND&gt;</code>の<code>&lt;NOVEL_COMMAND_NAME&gt;</code>の次の<code>&lt;ASTERISK&gt;</code>。例: <code>[macro name=&quot;&quot;new_macro][move *][endmacro]</code>における<code>*</code>が該当します。</p></li><li><p><code>NOVEL_MACRO_ATTRIBUTE_DEFAULT</code>: <code>&lt;NOVEL_MACRO_ATTRIBUTE_VALUE&gt;</code>の次が<code>&lt;OR&gt;</code>であった場合の次の<code>&lt;NOVEL_KEYS&gt;</code>。例: <code>[macro name=&quot;new_macro&quot;][move time=%t|2000][endmacro]</code>における<code>2000</code>が該当します。</p></li><li><p><code>NOVEL_MACRO_ATTRIBUTE_VALUE</code>: <code>&lt;NOVEL_MACRO_BLOCK&gt;</code>でのみ使用できる<code>&lt;NOVEL_COMMAND_ATTRIBUTE&gt;</code>。必ず<code>%</code>で始まる。例: <code>[macro name=&quot;new_macro&quot;][move time=%t][endmacro]</code>における<code>%t</code>が該当します</p></li><li><p><code>NOVEL_MACRO_BLOCK</code>: <code>&lt;MACRO_START&gt;</code>命令から<code>&lt;MACRO_END&gt;</code>命令まで</p></li><li><p><code>NOVEL_SCRIPT_BLOCK</code>: <code>&lt;SCRIPT_START&gt;</code>命令から<code>&lt;SCRIPT_END&gt;</code>命令に囲まれた文字列</p></li><li><p><code>NOVEL_SAVE_NAME</code>: <code>&lt;NOVEL_LABEL_NAME&gt;</code>の次の<code>&lt;NOVEL_KEYS&gt;</code>または<code>&lt;NOVEL_ENTITY&gt;</code>。ただし<code>&lt;NOVEL_LABEL_NAME&gt;</code>と<code>&lt;KAB_SAVE_NAME&gt;</code>の間には<code>|</code>が必要。例:<code>*label|save_name</code>における<code>save_name</code>が該当します。</p></li><li><p><code>NOVEL_LABEL_NAME</code>: <code>&lt;NOVEL_LABEL&gt;</code>内の最初の<code>&lt;NOVEL_KEYS&gt;</code>。ただし、直前の<code>&lt;NOVEL_LABEL_NAME&gt;</code>が必要な場合もあります。</p></li><li><p><code>NOVEL_LABEL</code>: <code>&lt;NOVEL_LABEL_TOP_FILE&gt;</code>あるいは<code>&lt;NOVEL_LABEL_NOMAL&gt;</code></p></li><li><p><code>NOVEL_LABEL_NORMAL</code>: 行頭が <code>&lt;ASTERISK&gt;</code> で始まる行</p></li><li><p><code>NOVEL_LABEL_TOP_FILE</code>: ファイルの最初の行を示すラベル。</p></li><li><p><code>NOVEL_STRING</code>: <code>&lt;NOVEL_STRING_SINGLE&gt;</code>、<code>&lt;NOVEL_STRING_DOUBLE&gt;</code> のどちらか</p></li><li><p><code>NOVEL_STRING_DOUBLE</code>: <code>&quot;</code> で囲まれた文字列。内包する<code>&#39;</code>、<code>\\&quot;</code>は文字列とみなされる。ネストは許可されない。</p></li><li><p><code>NOVEL_STRING_SINGLE</code>: <code>&#39;</code> で囲まれた文字列。内包する<code>&quot;</code>、<code>\\&#39;</code>は文字列とみなされる。ネストは許可されない。</p></li><li><p><code>NOVEL_COMMAND_ATTRIBUTE_VALUE</code>: <code>&lt;NOVEL_COMMAND_ATTRIBUTE&gt;</code>の等式の右辺。例: <code>[move time=2000]</code>における<code>2000</code>が該当します。</p></li><li><p><code>NOVEL_COMMAND_ATTRIBUTE_NAME</code>: <code>&lt;NOVEL_COMMAND_ATTRIBUTE&gt;</code>の等式の左辺。例: <code>[move time=2000]</code>における<code>time</code>が該当します。</p></li><li><p><code>NOVEL_COMMAND_ATTRIBUTE</code>: <code>&lt;NOVEL_COMMAND_NAME&gt;</code>の後ろに続く<code>&lt;NOVEL_KEYS&gt;&lt;EQUAL&gt;&lt;NOVEL_KEYS&gt;</code>形式の等式。等式中の空白文字は無視されます。例：<code>[move time=2000]</code>における<code>time=2000</code>が該当します。</p></li><li><p><code>NOVEL_COMMAND_NAME</code>: <code>&lt;NOVEL_COMMAND&gt;</code>の最初の<code>&lt;NOVEL_KEYS&gt;</code></p></li><li><p><code>NOVEL_COMMAND</code>: 「x」命令の形式で記述される要素。<code>&lt;NOVEL_COMMAND_SQUARE_BRACKET&gt;</code>あるいは<code>&lt;NOVEL_COMMAND_AT&gt;</code>である。<code>[</code> \`\`NOVEL_COMMAND_NAME<code></code>...<code></code>]<code> あるいは</code>@<code></code>NOVEL_COMMAND_NAME<code></code>...\`の形式を取る。</p></li><li><p><code>NOVEL_COMMAND_AT</code>: <code>&lt;at&gt;&lt;NOVEL_COMMAND_NAME&gt;</code>、あるいは <code>&lt;at&gt;&lt;NOVEL_COMMAND_NAME&gt;&lt;NOVEL_COMMAND_ATTRIBUTE&gt;+</code></p></li><li><p><code>NOVEL_COMMAND_SQUARE_BRACKET</code>: <code>&lt;SQUARE_L&gt;&lt;NOVEL_COMMAND_NAME&gt;&lt;SQUARE_L&gt;</code>, または<code>&lt;SQUARE_L&gt;&lt;NOVEL_COMMAND_NAME&gt;&lt;NOVEL_COMMAND_ATTRIBUTE&gt;+&lt;SQUARE_R&gt;</code>。ただし<code>[[</code>、<code>\\[</code>にはマッチしない。</p></li><li><p><code>NOVEL_ENTITY</code>: <code>&amp;f.&lt;NOVEL_KEYS&gt;</code>, <code>&amp;sf.&lt;NOVEL_KEYS&gt;</code>, <code>&amp;tf.&lt;NOVEL_KEYS&gt;</code>, <code>&amp;kag.&lt;NOVEL_KEYS&gt;</code>のいずれか</p></li><li><p><code>NOVEL_MESSAGE_KEYS</code>: <code>&lt;ALPHABET&gt;</code>, <code>&lt;DIGIT&gt;</code>, <code>&lt;UTF8&gt;</code>, <code>&lt;ESC_CHAR&gt;</code>, <code>&lt;MESSAGE_SYMBOL&gt;</code>, のいずれか、続いて<code>&lt;ALPHABET&gt;</code>, <code>&lt;DIGIT&gt;</code>, <code>&lt;UNDERSCORE&gt;</code>, <code>&lt;UTF8&gt;</code>, <code>&lt;MESSAGE_SYMBOL&gt;</code>、<code>&lt;MESSAGE_SYMBOL_NON_TOP&gt;</code>の０以上の連続。</p></li><li><p><code>NOVEL_KEYS</code>: <code>&lt;ALPHABET&gt;</code>, <code>&lt;DIGIT&gt;</code>, <code>&lt;UNDERSCORE&gt;</code>, <code>&lt;UTF8&gt;</code>, から構成されるキー</p></li></ul><h2 id="吉里吉里のkagと違うところ" tabindex="-1">吉里吉里のKAGと違うところ <a class="header-anchor" href="#吉里吉里のkagと違うところ" aria-label="Permalink to &quot;吉里吉里のKAGと違うところ&quot;">​</a></h2><ul><li>自動改行、手動改行の切り替え</li></ul><h2 id="ティラノスクリプト拡張記法" tabindex="-1">ティラノスクリプト拡張記法 <a class="header-anchor" href="#ティラノスクリプト拡張記法" aria-label="Permalink to &quot;ティラノスクリプト拡張記法&quot;">​</a></h2><ul><li><code>#</code>+名前でキャラクター名を指定できる</li><li><code>#</code>+名前+<code>:</code>+表情など で表情を指定できる</li></ul><h2 id="拡張記法" tabindex="-1">拡張記法 <a class="header-anchor" href="#拡張記法" aria-label="Permalink to &quot;拡張記法&quot;">​</a></h2><ul><li><code>MESSAGE_BLOCK</code>: <code>message</code>命令から<code>endmessage</code>命令まで</li><li><code>@script</code>命令。</li><li>スクリプトの途中の行末に<code>\\</code>を挿入ことで、スクリプトを複数行に渡って記述できる</li><li>終了命令に<code>end...</code>の代わりに<code>[/if]</code>を指定できる</li><li>インデントで命令記号を省略してスクリプトで記述できる</li><li><code>if {} macro {} ignore {}</code>が使える。</li><li><code>for</code> <code>while</code> などが使える</li><li><code>iscript</code>、<code>endscript</code>は無視される。</li><li>スクリプト中はスクリプトに準拠するが基本的に、<code>//</code>,<code>/**/</code>, <code>#</code>コメントを使える</li><li><code>\\{\\{script\\}\\}</code>でスクリプトを呼び出せる。<code>@eval</code>と同等。</li><li><code>[?mruby ?]</code></li><li>キャラ名：行頭+KEYS+<code>:</code> + <code>\\n | (...)</code> でキャラ名の指定ができる。<code>:</code>の後にKEYSが来てはいけない。</li><li><code>キャラ名.表情:</code> で表情を指定できる</li><li>表情指定：キャラ名指定ののち<code>(...)</code>の間に表情指定などができる</li><li>ボイス指定：表情指定ののちに<code>{...}</code>でボイス形式でアニメーションなどを指定できる</li><li>キャラ名と同等の記法でメッセージとして<code>:</code>を使用したい時は<code>\\:</code>を用いる。</li><li>メッセージ行</li><li>メッセージブロック: メッセージ行の連続、空白行または命令、インデントブロック、あるいは末尾まで</li><li>メッセージ内に<code>$(x)</code>で表情差分、<code>\${x}</code>でボイス、<code>$&lt;x&gt;</code>で特殊演出、<code>\\{\\{script\\}\\}</code>でスクリプト</li><li>メッセージ内に指定がなければ、事前予約された表情、</li><li><code>-</code> リストでリンクの分岐が作れる（？）</li><li><code>[1]</code> 命令名の部分が数値だったばあいは予約参照</li></ul><h2 id="メモ" tabindex="-1">メモ <a class="header-anchor" href="#メモ" aria-label="Permalink to &quot;メモ&quot;">​</a></h2><ul><li>[eval exp=&quot;f.flag1 = 1000&quot;]でスクリプトの式を計算できる <ul><li>ゲーム変数であれば f. を、システム変数であれば sf. を、一時変数であれば tf. を付けます</li><li>kag. はKAGシステムへのアクセスに使われる</li><li>delete var で変数削除</li><li>[emb exp=&quot;f.var&quot;]で変数の内容を表示</li><li>[font size=&quot;&amp;f.fontsize&quot;] のように&amp; の後に書かれた属性の値の内容を、TJS2 式として実行して、その結果で属性の値を置き換える</li></ul></li><li>cond 属性には TJS式 を指定し、この式を評価した結果が真の時のみにその命令が実行されます <ul><li><code>macro endmacro if else elsif endif ignore endignore iscript endscript</code> の命令をのぞく</li></ul></li><li>音声と表情の同期。</li></ul><h3 id="演算子" tabindex="-1">演算子 <a class="header-anchor" href="#演算子" aria-label="Permalink to &quot;演算子&quot;">​</a></h3><ul><li><code>GROUPING</code>: <code>( ... )</code>。結合性はなし。</li><li><code>LOGICAL_NOT</code>: <code>! ...</code>。結合性は右から左。</li><li><code>UNARY_NEGATION</code>: <code>- ...</code>。結合性は右から左。</li><li><code>EXPONENTIATION</code>: <code>... ** ...</code>。結合性は右から左。</li><li>乗除算余剰演算子 (*, /, %)結合性は左から右。</li><li>加減算演算子 (+, -)結合性は左から右。</li><li>比較演算子（例： &gt;, &lt;, &gt;=, &lt;=）結合性は左から右。</li><li>等価不等価（==, !=）結合性は左から右。</li><li>論理AND (&amp;&amp;)結合性は左から右。</li><li>論理OR (||)。結合性は左から右。</li><li>代入演算子 (=)。結合性は右から左。</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>先生: ()</span></span>
<span class="line"><span>わたしもやき{1}が回ったってことかしら？</span></span>
<span class="line"><span>そうでもなければだ{2}ものね。</span></span>
<span class="line"><span>でも、そう{3}かんがえると</span></span>
<span class="line"><span></span></span>
<span class="line"><span>それでは・・・そういうことかもしれない。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>私: (face normal) {voice 0%:&quot;78&quot;, 50%:happy, 9%:shy}</span></span>
<span class="line"><span>そういうことであれば、{{script}}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>少女: (face) {voice}</span></span>
<span class="line"><span>$(1)なるほど、わかりました。</span></span>
<span class="line"><span>$(2)そういうことであれば、気をつけます。</span></span>
<span class="line"><span>$(3)あなたもがんばってください。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>少女: {</span></span>
<span class="line"><span>    character: {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span></span></span>
<span class="line"><span>}</span></span></code></pre></div><h2 id="toml" tabindex="-1">TOML <a class="header-anchor" href="#toml" aria-label="Permalink to &quot;TOML&quot;">​</a></h2><h3 id="tomlのトークン" tabindex="-1">TOMLのトークン <a class="header-anchor" href="#tomlのトークン" aria-label="Permalink to &quot;TOMLのトークン&quot;">​</a></h3><ul><li><code>TOML_COMMENT</code>: <code>#</code> から行末まで</li><li><code>TOML_KEY</code>: <code>&quot;</code>で囲まれた任意の文字列、またはアルファベット、数字、アンダースコア、ハイフンの連続</li><li><code>TOML_NUMBER</code>: 浮動小数点数または整数。数字とアンダースコアの連続で、アンダースコアは数字の間にだけ現れます。</li><li><code>TOML_BOOLEAN</code>: trueまたはfalse</li><li><code>TOML_DATE</code>: 日付</li><li><code>TOML_DOT</code>: <code>.</code></li><li><code>TOML_COMMA</code>: <code>,</code></li><li><code>TOML_EQ</code>: <code>=</code></li><li><code>TOML_LBRACKET</code>: <code>[</code></li><li><code>TOML_RBRACKET</code>: <code>]</code></li><li><code>TOML_LBRACE</code>: <code>(</code></li><li><code>TOML_RBRACE</code>: <code>)</code></li></ul><h3 id="tomlの文法" tabindex="-1">TOMLの文法 <a class="header-anchor" href="#tomlの文法" aria-label="Permalink to &quot;TOMLの文法&quot;">​</a></h3><ul><li><code>TOML_VALUE</code>: <code>TOML_KEY</code>、<code>TOML_NUMBER</code>、<code>TOML_BOOLEAN</code>、<code>TOML_DATE</code>、<code>TOML_ARRAY</code>、<code>TOML_INLINE_TABLE</code> のいずれかです。</li><li><code>TOML_ARRAY</code>: <code>[]</code>で囲まれた<code>TOML_VALUE</code>のリストです。リスト内の値は<code>,</code>で区切られます。</li><li><code>TOML_INLINE_TABLE</code>: <code>{}</code>で囲まれた<code>TOML_KEY_VALUE</code>のリストです。リスト内の<code>TOML_KEY_VALUE</code>は<code>,</code>で区切られます。ただし、<code>TOML_INLINE_TABLE</code>は単一行に収めるべきです。</li><li><code>TOML_KEY_VALUE</code>: <code>TOML_KEY_OR_STR</code>、<code>=</code>、<code>TOML_VALUEで</code>で構成されます。</li><li><code>TOML_TABLE_ENTRIES</code>: 0つ以上の<code>TOML_KEY_VALUE</code>からなるリストです。</li><li><code>TOML_PATH</code>: <code>TOML_KEY_OR_STR</code>、<code>.</code>、<code>TOML_KEY_OR_STR</code>が0回以上続く形式です。</li><li><code>TOML_TABLE_HEADER</code>: <code>[]</code>で囲まれた<code>TOML_PATH</code>です。</li><li><code>TOML_TABLE_ARRAY_HEADER</code>: <code>[[]]</code>で囲まれた<code>TOML_PATH</code>です。</li><li><code>TOML_TABLE_ARRAY</code>: <code>TOML_TABLE_ARRAY_HEADER</code>と<code>TOML_TABLE_ENTRIES</code>で構成されます。</li><li><code>TOML_TABLE</code>: <code>TOML_TABLE_HEADER</code>と<code>TOMLE_TABLE_ENTRIES</code>で構成されます。</li><li><code>TOML_EXPRESSION</code>: <code>TOML_KEY_VALUE</code>、<code>TOML_TABLE</code>、<code>TOML_TABLE_ARRAY</code>のいずれかです。</li><li><code>TOML_CONTENT</code>: 0個つ以上の<code>TOML_EXPRESSION</code>で構成されます</li></ul>`,42)]))}const A=o(t,[["render",i]]);export{N as __pageData,A as default};
