import{_ as a,c as s,a2 as t,o as e}from"./chunks/framework.DzmM640o.js";const b=JSON.parse('{"title":"bit.band","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/bit/band.md","filePath":"reference/built_in/bit/band.md","lastUpdated":1730090475000}'),n={name:"reference/built_in/bit/band.md"};function l(h,i,p,d,r,k){return e(),s("div",null,i[0]||(i[0]=[t(`<h1 id="bit-band" tabindex="-1">bit.band <a class="header-anchor" href="#bit-band" aria-label="Permalink to &quot;bit.band&quot;">​</a></h1><p>数値同士のビット単位のAND演算を行う</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bit.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">band</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (x1 [, x2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>複数の引数 <code>x1, x2...</code> に対してビット単位のAND演算を行います。各引数の対応するビット同士でAND演算が適用され、結果を返します。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(bit.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">band</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0xf0f0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x0f0f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">--&gt; 0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(bit.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">band</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x12345678</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0xff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">--&gt; 120</span></span></code></pre></div><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>LuaJIT</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li><a href="./bor.html"><code>bit.bor</code></a></li><li><a href="./bxor.html"><code>bit.bxor</code></a></li></ul>`,11)]))}const c=a(n,[["render",l]]);export{b as __pageData,c as default};
