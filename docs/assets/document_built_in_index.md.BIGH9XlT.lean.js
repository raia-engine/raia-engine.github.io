import{_ as d,c as e,a2 as a,o as r}from"./chunks/framework.6x3wfQve.js";const s=JSON.parse('{"title":"ビルトイン関数","description":"","frontmatter":{},"headers":[],"relativePath":"document/built_in/index.md","filePath":"document/built_in/index.md","lastUpdated":1729512784000}'),o={name:"document/built_in/index.md"};function h(c,t,l,i,f,u){return r(),e("div",null,t[0]||(t[0]=[a('<h1 id="ビルトイン関数" tabindex="-1">ビルトイン関数 <a class="header-anchor" href="#ビルトイン関数" aria-label="Permalink to &quot;ビルトイン関数&quot;">​</a></h1><p>RaiaEngineはLuaJITをスクリプト言語として採用しています。LuaJITはLua5.1との互換性を保ちつつ、必要に応じてLua5.2、5.3から機能を追加しています。また、FFIやJIT関係の関数など、LuaJIT独自の機能を追加しています。</p><p>LuaJIT独自の拡張がある関数には、互換性の欄に(*)の表記を追加しています。</p><h2 id="基本ライブラリ" tabindex="-1">基本ライブラリ <a class="header-anchor" href="#基本ライブラリ" aria-label="Permalink to &quot;基本ライブラリ&quot;">​</a></h2><h3 id="変数-定数-テーブル" tabindex="-1">変数/定数/テーブル <a class="header-anchor" href="#変数-定数-テーブル" aria-label="Permalink to &quot;変数/定数/テーブル&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名前</th><th>説明</th><th>互換性</th></tr></thead><tbody><tr><td><a href="./global/_g.html"><code>_G</code></a></td><td>グローバル環境</td><td>Lua5.1</td></tr><tr><td><a href="./global/_version.html"><code>_VERSION</code></a></td><td>現在のLuaのバージョン</td><td>Lua5.1</td></tr></tbody></table><h3 id="関数-メソッド" tabindex="-1">関数/メソッド <a class="header-anchor" href="#関数-メソッド" aria-label="Permalink to &quot;関数/メソッド&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名前</th><th>説明</th><th>互換性</th></tr></thead><tbody><tr><td><a href="./std/assert.html"><code>assert</code></a></td><td>条件が偽の場合、エラーを発生させる</td><td><em>Lua5.3</em></td></tr><tr><td><a href="./std/collectgarbage.html"><code>collectgarbage</code></a></td><td>ガベージコレクタを制御する</td><td>Lua5.1</td></tr><tr><td><a href="./std/dofile.html"><code>dofile</code></a></td><td>指定されたファイルをLuaスクリプトとして実行する</td><td>Lua5.1</td></tr><tr><td><a href="./std/error.html"><code>error</code></a></td><td>実行中の関数を停止し、エラーメッセージを返す</td><td>Lua5.1</td></tr><tr><td><a href="./std/getfenv.html"><code>getfenv</code></a></td><td>関数やスレッドの環境テーブルを取得する</td><td>Lua5.1</td></tr><tr><td><a href="./std/getmetatable.html"><code>getmetatable</code></a></td><td>オブジェクトのメタテーブルを返す</td><td>Lua5.1</td></tr><tr><td><a href="./std/ipairs.html"><code>ipairs</code></a></td><td>配列テーブルを順番にイテレートするためのイテレータ関数</td><td>Lua5.1</td></tr><tr><td><a href="./std/load.html"><code>load</code></a></td><td>文字列や関数からLuaコードを読み込み、チャンクを返す</td><td><em>Lua5.2</em>(*)</td></tr><tr><td><a href="./std/loadfile.html"><code>loadfile</code></a></td><td>ファイルからLuaコードを読み込み、チャンクを返す</td><td><em>Lua5.2</em>(*)</td></tr><tr><td><a href="./std/loadstring.html"><code>loadstring</code></a></td><td>文字列からLuaコードを読み込み、チャンクを返す</td><td>Lua5.1(*)</td></tr><tr><td><a href="./std/next.html"><code>next</code></a></td><td>テーブルの次のキーと値を返し、テーブルをトラバース可能にする</td><td>Lua5.1</td></tr><tr><td><a href="./std/pairs.html"><code>pairs</code></a></td><td>テーブル全体をトラバースするためのイテレータ関数</td><td>Lua5.1</td></tr><tr><td><a href="./std/pcall.html"><code>pcall</code></a></td><td>保護されたモードで関数を呼び出す（エラーが発生しても処理を継続させる）</td><td>Lua5.1</td></tr><tr><td><a href="./std/print.html"><code>print</code></a></td><td>標準出力に値を出力する</td><td>Lua5.1</td></tr><tr><td><a href="./std/rawequal.html"><code>rawequal</code></a></td><td>2つの値が等しいかをチェックする（メタメソッドは呼び出されない）</td><td>Lua5.1</td></tr><tr><td><a href="./std/rawget.html"><code>rawget</code></a></td><td>テーブルから直接値を取得する（メタメソッドは呼び出されない）</td><td>Lua5.1</td></tr><tr><td><a href="./std/rawset.html"><code>rawset</code></a></td><td>テーブルに直接値を設定する（メタメソッドは呼び出されない）</td><td>Lua5.1</td></tr><tr><td><a href="./std/select.html"><code>select</code></a></td><td>可変長引数の中から特定の引数を返す</td><td>Lua5.1</td></tr><tr><td><a href="./std/setfenv.html"><code>setfenv</code></a></td><td>関数に新しい環境テーブルを設定する</td><td>Lua5.1</td></tr><tr><td><a href="./std/setmetatable.html"><code>setmetatable</code></a></td><td>テーブルにメタテーブルを設定する</td><td>Lua5.1</td></tr><tr><td><a href="./std/tonumber.html"><code>tonumber</code></a></td><td>値を数値に変換する</td><td>Lua5.1</td></tr><tr><td><a href="./std/tostring.html"><code>tostring</code></a></td><td>値を文字列に変換する</td><td>Lua5.1</td></tr><tr><td><a href="./std/type.html"><code>type</code></a></td><td>引数のデータ型を文字列で返す</td><td>Lua5.1</td></tr><tr><td><a href="./std/unpack.html"><code>unpack</code></a></td><td>テーブルの要素を複数の引数として展開する</td><td>Lua5.1</td></tr><tr><td><a href="./std/xpcall.html"><code>xpcall</code></a></td><td>保護されたモードで関数を呼び出す（エラーハンドラを指定する）</td><td>Lua5.1(*)</td></tr></tbody></table><h2 id="コルーチン操作-coroutine" tabindex="-1">コルーチン操作 (<code>coroutine.*</code>) <a class="header-anchor" href="#コルーチン操作-coroutine" aria-label="Permalink to &quot;コルーチン操作 (`coroutine.*`)&quot;">​</a></h2><table tabindex="0"><thead><tr><th>名前</th><th>説明</th><th>互換性</th></tr></thead><tbody><tr><td><a href="./coroutine/create.html"><code>coroutine.create</code></a></td><td>新しいコルーチンを作成する</td><td>Lua5.1</td></tr><tr><td><a href="./coroutine/resume.html"><code>coroutine.resume</code></a></td><td>コルーチンを再開する</td><td>Lua5.1</td></tr><tr><td><a href="./coroutine/running.html"><code>coroutine.running</code></a></td><td>実行中のコルーチンを返す</td><td>Lua5.1</td></tr><tr><td><a href="./coroutine/status.html"><code>coroutine.status</code></a></td><td>コルーチンの状態を返す</td><td>Lua5.1</td></tr><tr><td><a href="./coroutine/wrap.html"><code>coroutine.wrap</code></a></td><td>コルーチンを関数としてラップする</td><td>Lua5.1</td></tr><tr><td><a href="./coroutine/yield.html"><code>coroutine.yield</code></a></td><td>コルーチンを一時停止し、再開できるようにする</td><td>Lua5.1</td></tr><tr><td><a href="./coroutine/isyieldable.html"><code>coroutine.isyieldable</code></a></td><td>現在の関数が中断可能かどうかを判定する</td><td><em>Lua5.3</em></td></tr></tbody></table><h2 id="モジュール-package" tabindex="-1">モジュール (<code>package.*</code>) <a class="header-anchor" href="#モジュール-package" aria-label="Permalink to &quot;モジュール (`package.*`)&quot;">​</a></h2><h3 id="変数-定数-テーブル-1" tabindex="-1">変数/定数/テーブル <a class="header-anchor" href="#変数-定数-テーブル-1" aria-label="Permalink to &quot;変数/定数/テーブル&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名前</th><th>説明</th><th>互換性</th></tr></thead><tbody><tr><td><a href="./package/cpath.html"><code>package.cpath</code></a></td><td>Cライブラリの検索パスを定義する</td><td>Lua5.1</td></tr><tr><td><a href="./package/loaded.html"><code>package.loaded</code></a></td><td>すでにロードされたモジュールを保持するテーブル</td><td>Lua5.1</td></tr><tr><td><a href="./package/loaders.html"><code>package.loaders</code></a></td><td>モジュールのロード関数のリスト（非推奨、Lua5.2以降では<code>searchers</code>）</td><td>Lua5.1</td></tr><tr><td><a href="./package/path.html"><code>package.path</code></a></td><td>Luaスクリプトの検索パスを定義する</td><td>Lua5.1</td></tr><tr><td><a href="./package/preload.html"><code>package.preload</code></a></td><td>モジュールを手動で登録するためのテーブル</td><td>Lua5.1</td></tr></tbody></table><h3 id="関数-メソッド-1" tabindex="-1">関数/メソッド <a class="header-anchor" href="#関数-メソッド-1" aria-label="Permalink to &quot;関数/メソッド&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名前</th><th>説明</th><th>互換性</th></tr></thead><tbody><tr><td><a href="./package/module.html"><code>module</code></a></td><td>モジュールを定義する（非推奨）。</td><td>Lua5.1</td></tr><tr><td><a href="./package/require.html"><code>require</code></a></td><td>モジュールをロードして返す</td><td>Lua5.1</td></tr><tr><td><a href="./package/loadlib.html"><code>package.loadlib</code></a></td><td>Cライブラリをロードする</td><td><em>Lua5.2</em></td></tr><tr><td><a href="./package/seeall.html"><code>package.seeall</code></a></td><td>モジュールがグローバルな変数にアクセスできるようにする（非推奨）</td><td>Lua5.1</td></tr><tr><td><a href="./package/searchpath.html"><code>package.searchpath</code></a></td><td>指定されたモジュール名をパスで検索する</td><td><em>Lua5.2</em></td></tr></tbody></table><h2 id="文字列操作-string" tabindex="-1">文字列操作 (<code>string.*</code>) <a class="header-anchor" href="#文字列操作-string" aria-label="Permalink to &quot;文字列操作 (`string.*`)&quot;">​</a></h2><table tabindex="0"><thead><tr><th>名前</th><th>説明</th><th>互換性</th></tr></thead><tbody><tr><td><a href="./string/byte.html"><code>string.byte</code></a></td><td>指定された位置の文字のバイト値を返す</td><td>Lua5.1</td></tr><tr><td><a href="./string/char.html"><code>string.char</code></a></td><td>バイト値の列を文字列に変換する</td><td>Lua5.1</td></tr><tr><td><a href="./string/dump.html"><code>string.dump</code></a></td><td>関数のバイトコードを返す</td><td>Lua5.1(*)</td></tr><tr><td><a href="./string/find.html"><code>string.find</code></a></td><td>文字列内でパターン検索を行う</td><td>Lua5.1</td></tr><tr><td><a href="./string/format.html"><code>string.format</code></a></td><td>フォーマットに従って文字列を生成する</td><td>Lua5.2</td></tr><tr><td><a href="./string/gmatch.html"><code>string.gmatch</code></a></td><td>パターンに一致する部分を順次返すイテレータを生成する</td><td>Lua5.1</td></tr><tr><td><a href="./string/gsub.html"><code>string.gsub</code></a></td><td>文字列内でパターンに一致する部分を置換する</td><td>Lua5.1</td></tr><tr><td><a href="./string/len.html"><code>string.len</code></a></td><td>文字列の長さを返す</td><td>Lua5.1</td></tr><tr><td><a href="./string/lower.html"><code>string.lower</code></a></td><td>文字列をすべて小文字に変換する</td><td>Lua5.1</td></tr><tr><td><a href="./string/match.html"><code>string.match</code></a></td><td>文字列内でパターンに一致する部分を返す</td><td>Lua5.1</td></tr><tr><td><a href="./string/rep.html"><code>string.rep</code></a></td><td>文字列を指定回数繰り返し、任意で区切り文字を追加する</td><td><em>Lua5.2</em></td></tr><tr><td><a href="./string/reverse.html"><code>string.reverse</code></a></td><td>文字列を逆順にする</td><td>Lua5.1</td></tr><tr><td><a href="./string/sub.html"><code>string.sub</code></a></td><td>文字列の部分文字列を返す</td><td>Lua5.1</td></tr><tr><td><a href="./string/upper.html"><code>string.upper</code></a></td><td>文字列をすべて大文字に変換する</td><td>Lua5.1</td></tr></tbody></table><h2 id="テーブル操作-table" tabindex="-1">テーブル操作 (<code>table.*</code>) <a class="header-anchor" href="#テーブル操作-table" aria-label="Permalink to &quot;テーブル操作 (`table.*`)&quot;">​</a></h2><table tabindex="0"><thead><tr><th>名前</th><th>説明</th><th>互換性</th></tr></thead><tbody><tr><td><a href="./table/concat.html"><code>table.concat</code></a></td><td>テーブルの要素を連結し、文字列を返す</td><td>Lua5.1</td></tr><tr><td><a href="./table/insert.html"><code>table.insert</code></a></td><td>テーブルに要素を挿入する</td><td>Lua5.1</td></tr><tr><td><a href="./table/maxn.html"><code>table.maxn</code></a></td><td>テーブル内の数値キーの最大値を返す（非推奨）。</td><td>Lua5.1</td></tr><tr><td><a href="./table/remove.html"><code>table.remove</code></a></td><td>テーブルから要素を削除する</td><td>Lua5.1</td></tr><tr><td><a href="./table/sort.html"><code>table.sort</code></a></td><td>テーブルの要素をソートする</td><td>Lua5.1</td></tr><tr><td><a href="./table/new.html"><code>table.new</code></a></td><td>指定されたサイズで新しいテーブルを作成する</td><td><em>LuaJIT</em></td></tr><tr><td><a href="./table/clear.html"><code>table.clear</code></a></td><td>テーブル内のすべての要素を削除する</td><td><em>LuaJIT</em></td></tr><tr><td><a href="./table/move.html"><code>table.move</code></a></td><td>テーブルの一部の要素を他の位置に移動する</td><td><em>Lua5.3</em></td></tr></tbody></table><h2 id="数学関数-math" tabindex="-1">数学関数 (<code>math.*</code>) <a class="header-anchor" href="#数学関数-math" aria-label="Permalink to &quot;数学関数 (`math.*`)&quot;">​</a></h2><h3 id="変数-定数-テーブル-2" tabindex="-1">変数/定数/テーブル <a class="header-anchor" href="#変数-定数-テーブル-2" aria-label="Permalink to &quot;変数/定数/テーブル&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名前</th><th>説明</th><th>互換性</th></tr></thead><tbody><tr><td><a href="./math/huge.html"><code>math.huge</code></a></td><td>無限大を表す定数</td><td>Lua5.1</td></tr><tr><td><a href="./math/pi.html"><code>math.pi</code></a></td><td>π（円周率）を表す定数。</td><td>Lua5.1</td></tr></tbody></table><h3 id="関数-メソッド-2" tabindex="-1">関数/メソッド <a class="header-anchor" href="#関数-メソッド-2" aria-label="Permalink to &quot;関数/メソッド&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名前</th><th>説明</th><th>互換性</th></tr></thead><tbody><tr><td><a href="./math/abs.html"><code>math.abs</code></a></td><td>絶対値を返す</td><td>Lua5.1</td></tr><tr><td><a href="./math/acos.html"><code>math.acos</code></a></td><td>逆余弦を返す</td><td>Lua5.1</td></tr><tr><td><a href="./math/asin.html"><code>math.asin</code></a></td><td>逆正弦を返す</td><td>Lua5.1</td></tr><tr><td><a href="./math/atan.html"><code>math.atan</code></a></td><td>逆正接を返す</td><td>Lua5.1</td></tr><tr><td><a href="./math/atan2.html"><code>math.atan2</code></a></td><td>2つの引数の逆正接を返す</td><td>Lua5.1</td></tr><tr><td><a href="./math/ceil.html"><code>math.ceil</code></a></td><td>指定された数値以上の最小の整数を返す</td><td>Lua5.1</td></tr><tr><td><a href="./math/cos.html"><code>math.cos</code></a></td><td>余弦を返す</td><td>Lua5.1</td></tr><tr><td><a href="./math/cosh.html"><code>math.cosh</code></a></td><td>双曲線余弦を返す</td><td>Lua5.1</td></tr><tr><td><a href="./math/deg.html"><code>math.deg</code></a></td><td>ラジアンを度に変換する</td><td>Lua5.1</td></tr><tr><td><a href="./math/exp.html"><code>math.exp</code></a></td><td>指定された数のe乗を返す</td><td>Lua5.1</td></tr><tr><td><a href="./math/floor.html"><code>math.floor</code></a></td><td>指定された数値以下の最大の整数を返す</td><td>Lua5.1</td></tr><tr><td><a href="./math/fmod.html"><code>math.fmod</code></a></td><td>商の小数部を返す（余りを返す）</td><td>Lua5.1</td></tr><tr><td><a href="./math/frexp.html"><code>math.frexp</code></a></td><td>浮動小数点数を仮数部と指数部に分解する</td><td>Lua5.1</td></tr><tr><td><a href="./math/ldexp.html"><code>math.ldexp</code></a></td><td>仮数部と指数部から浮動小数点数を構成する</td><td>Lua5.1</td></tr><tr><td><a href="./math/log.html"><code>math.log</code></a></td><td>自然対数を返す</td><td><em>Lua5.2</em></td></tr><tr><td><a href="./math/log10.html"><code>math.log10</code></a></td><td>底10の対数を返す</td><td>Lua5.1</td></tr><tr><td><a href="./math/max.html"><code>math.max</code></a></td><td>引数の中で最大の数を返す</td><td>Lua5.1</td></tr><tr><td><a href="./math/min.html"><code>math.min</code></a></td><td>引数の中で最小の数を返す</td><td>Lua5.1</td></tr><tr><td><a href="./math/modf.html"><code>math.modf</code></a></td><td>整数部分と小数部分を分けて返す</td><td>Lua5.1</td></tr><tr><td><a href="./math/pow.html"><code>math.pow</code></a></td><td>べき乗を計算する（<code>^</code>演算子と同じ）</td><td>Lua5.1</td></tr><tr><td><a href="./math/rad.html"><code>math.rad</code></a></td><td>度をラジアンに変換する</td><td>Lua5.1</td></tr><tr><td><a href="./math/random.html"><code>math.random</code></a></td><td>ランダムな数値を返す</td><td>Lua5.1</td></tr><tr><td><a href="./math/randomseed.html"><code>math.randomseed</code></a></td><td>乱数生成器の種を設定する</td><td>Lua5.1</td></tr><tr><td><a href="./math/sin.html"><code>math.sin</code></a></td><td>正弦を返す</td><td>Lua5.1</td></tr><tr><td><a href="./math/sinh.html"><code>math.sinh</code></a></td><td>双曲線正弦を返す</td><td>Lua5.1</td></tr><tr><td><a href="./math/sqrt.html"><code>math.sqrt</code></a></td><td>平方根を返す</td><td>Lua5.1</td></tr><tr><td><a href="./math/tan.html"><code>math.tan</code></a></td><td>正接を返す</td><td>Lua5.1</td></tr><tr><td><a href="./math/tanh.html"><code>math.tanh</code></a></td><td>双曲線正接を返す</td><td>Lua5.1</td></tr></tbody></table><h2 id="入出力機能-io-file" tabindex="-1">入出力機能 (<code>io.*</code> | <code>file:*</code>) <a class="header-anchor" href="#入出力機能-io-file" aria-label="Permalink to &quot;入出力機能 (`io.*` | `file:*`)&quot;">​</a></h2><table tabindex="0"><thead><tr><th>名前</th><th>説明</th><th>互換性</th></tr></thead><tbody><tr><td><a href="./io/close.html"><code>io.close</code></a></td><td>現在の出力ファイルを閉じる</td><td>Lua5.1</td></tr><tr><td><a href="./io/flush.html"><code>io.flush</code></a></td><td>書き込みバッファをフラッシュする</td><td>Lua5.1</td></tr><tr><td><a href="./io/input.html"><code>io.input</code></a></td><td>入力ファイルを設定または返す</td><td>Lua5.1</td></tr><tr><td><a href="./io/lines.html"><code>io.lines</code></a></td><td>ファイルの各行を返すイテレータを作成する</td><td>Lua5.1</td></tr><tr><td><a href="./io/open.html"><code>io.open</code></a></td><td>ファイルを指定モードで開く</td><td>Lua5.1</td></tr><tr><td><a href="./io/output.html"><code>io.output</code></a></td><td>出力ファイルを設定または返す</td><td>Lua5.1</td></tr><tr><td><a href="./io/popen.html"><code>io.popen</code></a></td><td>サブプロセスを開き、その標準入出力にアクセスする</td><td>Lua5.1</td></tr><tr><td><a href="./io/read.html"><code>io.read</code></a></td><td>入力から指定された形式でデータを読み取る</td><td><em>Lua5.3</em></td></tr><tr><td><a href="./io/tmpfile.html"><code>io.tmpfile</code></a></td><td>一時ファイルを作成し開く</td><td>Lua5.1</td></tr><tr><td><a href="./io/type.html"><code>io.type</code></a></td><td>引数がファイルハンドルかどうかを判定する</td><td>Lua5.1</td></tr><tr><td><a href="./io/write.html"><code>io.write</code></a></td><td>出力にデータを書き込む</td><td>Lua5.1</td></tr><tr><td><a href="./io/file_close.html"><code>file:close</code></a></td><td>ファイルを閉じる</td><td>Lua5.1</td></tr><tr><td><a href="./io/file_flush.html"><code>file:flush</code></a></td><td>書き込みバッファをフラッシュする</td><td>Lua5.1</td></tr><tr><td><a href="./io/file_lines.html"><code>file:lines</code></a></td><td>ファイルの各行を返すイテレータを作成する</td><td>Lua5.1</td></tr><tr><td><a href="./io/file_read.html"><code>file:read</code></a></td><td>ファイルから指定された形式でデータを読み取る</td><td><em>Lua5.3</em></td></tr><tr><td><a href="./io/file_seek.html"><code>file:seek</code></a></td><td>ファイルの読み書き位置を設定または取得する</td><td>Lua5.1</td></tr><tr><td><a href="./io/file_setvbuf.html"><code>file:setvbuf</code></a></td><td>バッファリングモードを設定する</td><td>Lua5.1</td></tr><tr><td><a href="./io/file_write.html"><code>file:write</code></a></td><td>ファイルにデータを書き込む</td><td>Lua5.1</td></tr></tbody></table><h2 id="osの機能-os" tabindex="-1">OSの機能 (<code>os.*</code>) <a class="header-anchor" href="#osの機能-os" aria-label="Permalink to &quot;OSの機能 (`os.*`)&quot;">​</a></h2><table tabindex="0"><thead><tr><th>名前</th><th>説明</th><th>互換性</th></tr></thead><tbody><tr><td><a href="./os/clock.html"><code>os.clock</code></a></td><td>プログラムの実行時間を返す</td><td>Lua5.1</td></tr><tr><td><a href="./os/date.html"><code>os.date</code></a></td><td>現在の日時をフォーマットして返す</td><td>Lua5.1</td></tr><tr><td><a href="./os/difftime.html"><code>os.difftime</code></a></td><td>2つの時刻の差を秒で返す</td><td>Lua5.1</td></tr><tr><td><a href="./os/execute.html"><code>os.execute</code></a></td><td>システムコマンドを実行する</td><td>Lua5.1</td></tr><tr><td><a href="./os/exit.html"><code>os.exit</code></a></td><td>プログラムを終了する</td><td><em>Lua5.2</em></td></tr><tr><td><a href="./os/getenv.html"><code>os.getenv</code></a></td><td>環境変数の値を取得する</td><td>Lua5.1</td></tr><tr><td><a href="./os/remove.html"><code>os.remove</code></a></td><td>ファイルを削除する</td><td>Lua5.1</td></tr><tr><td><a href="./os/rename.html"><code>os.rename</code></a></td><td>ファイルの名前を変更する</td><td>Lua5.1</td></tr><tr><td><a href="./os/setlocale.html"><code>os.setlocale</code></a></td><td>ロケール情報を設定する</td><td>Lua5.1</td></tr><tr><td><a href="./os/time.html"><code>os.time</code></a></td><td>現在の時刻をタイムスタンプとして返す</td><td>Lua5.1</td></tr><tr><td><a href="./os/tmpname.html"><code>os.tmpname</code></a></td><td>一時ファイル名を返す</td><td>Lua5.1</td></tr></tbody></table><h2 id="デバッグ機能-debug" tabindex="-1">デバッグ機能 (<code>debug.*</code>) <a class="header-anchor" href="#デバッグ機能-debug" aria-label="Permalink to &quot;デバッグ機能 (`debug.*`)&quot;">​</a></h2><table tabindex="0"><thead><tr><th>名前</th><th>説明</th><th>互換性</th></tr></thead><tbody><tr><td><a href="./debug/debug.html"><code>debug.debug</code></a></td><td>インタラクティブなデバッガを開始する</td><td>Lua5.1</td></tr><tr><td><a href="./debug/getfenv.html"><code>debug.getfenv</code></a></td><td>指定した関数やスレッドの環境テーブルを取得する</td><td>Lua5.1</td></tr><tr><td><a href="./debug/gethook.html"><code>debug.gethook</code></a></td><td>現在設定されているフック関数を返す</td><td>Lua5.1</td></tr><tr><td><a href="./debug/getinfo.html"><code>debug.getinfo</code></a></td><td>関数やスレッドに関する情報を返す</td><td>Lua5.1</td></tr><tr><td><a href="./debug/getlocal.html"><code>debug.getlocal</code></a></td><td>指定されたレベルの関数のローカル変数を取得する</td><td>Lua5.1</td></tr><tr><td><a href="./debug/getmetatable.html"><code>debug.getmetatable</code></a></td><td>オブジェクトのメタテーブルを取得する</td><td>Lua5.1</td></tr><tr><td><a href="./debug/getregistry.html"><code>debug.getregistry</code></a></td><td>Luaのレジストリテーブルを取得する</td><td>Lua5.1</td></tr><tr><td><a href="./debug/getupvalue.html"><code>debug.getupvalue</code></a></td><td>指定した関数のアップバリューを取得する</td><td>Lua5.1</td></tr><tr><td><a href="./debug/setfenv.html"><code>debug.setfenv</code></a></td><td>関数やスレッドに環境テーブルを設定する</td><td>Lua5.1</td></tr><tr><td><a href="./debug/sethook.html"><code>debug.sethook</code></a></td><td>指定したフック関数を設定する</td><td>Lua5.1</td></tr><tr><td><a href="./debug/setlocal.html"><code>debug.setlocal</code></a></td><td>指定した関数のローカル変数の値を設定する</td><td>Lua5.1</td></tr><tr><td><a href="./debug/setmetatable.html"><code>debug.setmetatable</code></a></td><td>オブジェクトにメタテーブルを設定する</td><td>Lua5.1</td></tr><tr><td><a href="./debug/setupvalue.html"><code>debug.setupvalue</code></a></td><td>指定した関数のアップバリューに値を設定する</td><td>Lua5.1</td></tr><tr><td><a href="./debug/traceback.html"><code>debug.traceback</code></a></td><td>スタックトレースを返す</td><td>Lua5.1</td></tr><tr><td><a href="./debug/upvalueid.html"><code>debug.upvalueid</code></a></td><td>指定した関数のアップバリューに固有のIDを返す</td><td><em>Lua5.2</em></td></tr><tr><td><a href="./debug/upvaluejoin.html"><code>debug.upvaluejoin</code></a></td><td>2つの関数のアップバリューを結合する</td><td><em>Lua5.2</em></td></tr></tbody></table><h2 id="ビット単位の操作-bit" tabindex="-1">ビット単位の操作 (<code>bit.*</code>) <a class="header-anchor" href="#ビット単位の操作-bit" aria-label="Permalink to &quot;ビット単位の操作 (`bit.*`)&quot;">​</a></h2><table tabindex="0"><thead><tr><th>名前</th><th>説明</th><th>互換性</th></tr></thead><tbody><tr><td><a href="./bit/tobit.html"><code>bit.tobit</code></a></td><td>数値を32ビット整数に変換する</td><td>LuaJIT</td></tr><tr><td><a href="./bit/tohex.html"><code>bit.tohex</code></a></td><td>数値を16進数の文字列に変換する</td><td>LuaJIT</td></tr><tr><td><a href="./bit/bnot.html"><code>bit.bnot</code></a></td><td>数値のビット単位のNOT演算を行う</td><td>LuaJIT</td></tr><tr><td><a href="./bit/band.html"><code>bit.band</code></a></td><td>数値同士のビット単位のAND演算を行う</td><td>LuaJIT</td></tr><tr><td><a href="./bit/bor.html"><code>bit.bor</code></a></td><td>数値同士のビット単位のOR演算を行う</td><td>LuaJIT</td></tr><tr><td><a href="./bit/bxor.html"><code>bit.bxor</code></a></td><td>数値同士のビット単位のXOR演算を行う</td><td>LuaJIT</td></tr><tr><td><a href="./bit/lshift.html"><code>bit.lshift</code></a></td><td>数値を左にビットシフトする</td><td>LuaJIT</td></tr><tr><td><a href="./bit/rshift.html"><code>bit.rshift</code></a></td><td>数値を右にビットシフトする（符号なし）</td><td>LuaJIT</td></tr><tr><td><a href="./bit/arshift.html"><code>bit.arshift</code></a></td><td>数値を右にビットシフトする（符号あり）</td><td>LuaJIT</td></tr><tr><td><a href="./bit/rol.html"><code>bit.rol</code></a></td><td>数値を左にローテートシフトする</td><td>LuaJIT</td></tr><tr><td><a href="./bit/ror.html"><code>bit.ror</code></a></td><td>数値を右にローテートシフトする</td><td>LuaJIT</td></tr><tr><td><a href="./bit/bswap.html"><code>bit.bswap</code></a></td><td>32ビット整数のバイト順序を逆転させる（エンディアン変換）</td><td>LuaJIT</td></tr></tbody></table><h2 id="ffiライブラリ-ffi" tabindex="-1">FFIライブラリ (<code>ffi.*</code>) <a class="header-anchor" href="#ffiライブラリ-ffi" aria-label="Permalink to &quot;FFIライブラリ (`ffi.*`)&quot;">​</a></h2><h3 id="変数-定数-テーブル-3" tabindex="-1">変数/定数/テーブル <a class="header-anchor" href="#変数-定数-テーブル-3" aria-label="Permalink to &quot;変数/定数/テーブル&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名前</th><th>説明</th><th>互換性</th></tr></thead><tbody><tr><td><a href="./ffi/os.html"><code>ffi.os</code></a></td><td>実行中のオペレーティングシステムの名前を返す</td><td>LuaJIT</td></tr><tr><td><a href="./ffi/arch.html"><code>ffi.arch</code></a></td><td>実行中のプロセッサアーキテクチャを返す</td><td>LuaJIT</td></tr></tbody></table><h3 id="関数-メソッド-3" tabindex="-1">関数/メソッド <a class="header-anchor" href="#関数-メソッド-3" aria-label="Permalink to &quot;関数/メソッド&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名前</th><th>説明</th><th>互換性</th></tr></thead><tbody><tr><td><a href="./ffi/cdef.html"><code>ffi.cdef</code></a></td><td>C言語の宣言をLuaJITに定義する</td><td>LuaJIT</td></tr><tr><td><a href="./ffi/c.html"><code>ffi.C</code></a></td><td>C標準ライブラリへのアクセスを提供する</td><td>LuaJIT</td></tr><tr><td><a href="./ffi/load.html"><code>ffi.load</code></a></td><td>共有ライブラリをロードし、関数や変数にアクセスする</td><td>LuaJIT</td></tr><tr><td><a href="./ffi/new.html"><code>ffi.new</code></a></td><td>指定された型の新しいCデータを作成する</td><td>LuaJIT</td></tr><tr><td><a href="./ffi/ctype.html"><code>ctype</code></a></td><td><code>ffi.new</code>や<code>ffi.cast</code>などで使用されるC型を定義する</td><td>LuaJIT</td></tr><tr><td><a href="./ffi/typeof.html"><code>ffi.typeof</code></a></td><td>型を定義し、キャッシュするための関数</td><td>LuaJIT</td></tr><tr><td><a href="./ffi/cast.html"><code>ffi.cast</code></a></td><td>型にCデータをキャストする</td><td>LuaJIT</td></tr><tr><td><a href="./ffi/metatype.html"><code>ffi.metatype</code></a></td><td>Cデータ型にメタテーブルを設定する</td><td>LuaJIT</td></tr><tr><td><a href="./ffi/gc.html"><code>ffi.gc</code></a></td><td>ガベージコレクションでメモリを解放するための関数を登録する</td><td>LuaJIT</td></tr><tr><td><a href="./ffi/sizeof.html"><code>ffi.sizeof</code></a></td><td>型やオブジェクトのサイズ（バイト数）を返す</td><td>LuaJIT</td></tr><tr><td><a href="./ffi/alignof.html"><code>ffi.alignof</code></a></td><td>型のアラインメントを返す</td><td>LuaJIT</td></tr><tr><td><a href="./ffi/offsetof.html"><code>ffi.offsetof</code></a></td><td>C構造体のフィールドのオフセットを返す</td><td>LuaJIT</td></tr><tr><td><a href="./ffi/errno.html"><code>ffi.errno</code></a></td><td>Cライブラリの<code>errno</code>の値を取得または設定する</td><td>LuaJIT</td></tr><tr><td><a href="./ffi/string.html"><code>ffi.string</code></a></td><td>Cの文字列（<code>char*</code>）をLuaの文字列に変換する</td><td>LuaJIT</td></tr><tr><td><a href="./ffi/copy.html"><code>ffi.copy</code></a></td><td>メモリ間でデータをコピーする</td><td>LuaJIT</td></tr><tr><td><a href="./ffi/fill.html"><code>ffi.fill</code></a></td><td>メモリを指定された値で埋める</td><td>LuaJIT</td></tr><tr><td><a href="./ffi/abi.html"><code>ffi.abi</code></a></td><td>実行環境に関するABI情報を取得する</td><td>LuaJIT</td></tr><tr><td><a href="./ffi/cb_free.html"><code>cb:free</code></a></td><td>コールバック関数を解放する</td><td>LuaJIT</td></tr><tr><td><a href="./ffi/cb_set.html"><code>cb:set</code></a></td><td>コールバック関数を設定する</td><td>LuaJIT</td></tr></tbody></table><h2 id="jitライブラリ-jit" tabindex="-1">JITライブラリ (<code>jit.*</code>) <a class="header-anchor" href="#jitライブラリ-jit" aria-label="Permalink to &quot;JITライブラリ (`jit.*`)&quot;">​</a></h2><h3 id="変数-定数-テーブル-4" tabindex="-1">変数/定数/テーブル <a class="header-anchor" href="#変数-定数-テーブル-4" aria-label="Permalink to &quot;変数/定数/テーブル&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名前</th><th>説明</th><th>互換性</th></tr></thead><tbody><tr><td><a href="./jit/version.html"><code>jit.version</code></a></td><td>JITコンパイラのバージョン文字列</td><td>LuaJIT</td></tr><tr><td><a href="./jit/version_num.html"><code>jit.version_num</code></a></td><td>JITコンパイラのバージョン番号</td><td>LuaJIT</td></tr><tr><td><a href="./jit/os.html"><code>jit.os</code></a></td><td>オペレーティングシステム</td><td>LuaJIT</td></tr><tr><td><a href="./jit/arch.html"><code>jit.arch</code></a></td><td>プロセッサアーキテクチャ</td><td>LuaJIT</td></tr></tbody></table><h3 id="関数-メソッド-4" tabindex="-1">関数/メソッド <a class="header-anchor" href="#関数-メソッド-4" aria-label="Permalink to &quot;関数/メソッド&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名前</th><th>説明</th><th>互換性</th></tr></thead><tbody><tr><td><a href="./jit/on.html"><code>jit.on</code></a></td><td>JITコンパイラを有効にする</td><td>LuaJIT</td></tr><tr><td><a href="./jit/off.html"><code>jit.off</code></a></td><td>JITコンパイラを無効にする</td><td>LuaJIT</td></tr><tr><td><a href="./jit/flush.html"><code>jit.flush</code></a></td><td>JITコンパイル済みコードをクリアし、再コンパイルさせる</td><td>LuaJIT</td></tr><tr><td><a href="./jit/status.html"><code>jit.status</code></a></td><td>JITコンパイラの現在のステータスを返す</td><td>LuaJIT</td></tr><tr><td><code>jit.opt.*</code></td><td>JITの最適化オプションを設定または取得するための関数群</td><td>LuaJIT</td></tr><tr><td><code>jit.util.*</code></td><td>JITコンパイラの内部情報やデバッグツールにアクセスするための関数群</td><td>LuaJIT</td></tr></tbody></table>',42)]))}const b=d(o,[["render",h]]);export{s as __pageData,b as default};
