import{_ as a,c as e,a2 as t,o as i}from"./chunks/framework.CKGreiRV.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"resource/duktape/guide/custom_directives.md","filePath":"resource/duktape/guide/custom_directives.md","lastUpdated":1732350347000}'),n={name:"resource/duktape/guide/custom_directives.md"};function l(p,s,o,r,d,c){return i(),e("div",null,s[0]||(s[0]=[t(`<h2 id="custom_directives" tabindex="-1">カスタムディレクティブ <a class="header-anchor" href="#custom_directives" aria-label="Permalink to &quot;カスタムディレクティブ {#custom_directives}&quot;">​</a></h2><p>ECMAScript E5/E5.1 では、バージョンまたは実装固有の機能を有効にするために、ディレクティブプロローグを採用しています。標準では &quot;use strict &quot;という1つのディレクティブしか提供しませんが、asm.jsでは &quot;use asm &quot;を使用します。Duktapeのカスタムディレクティブについては、このセクションで説明します。</p><h3 id="use-duk-notail-ユースデューク・ノテイル" tabindex="-1">use duk notail （ユースデューク・ノテイル） <a class="header-anchor" href="#use-duk-notail-ユースデューク・ノテイル" aria-label="Permalink to &quot;use duk notail （ユースデューク・ノテイル）&quot;">​</a></h3><p>use duk notailディレクティブは、その関数が決してテールコールされてはならないことを示します。テールコールはコールスタックに影響を与えるので、スタックトレースで見ることができ、 (通常は無害です) また、例えば Duktape.act() を使ってコールスタックを検査する関数に影響を与えます。このディレクティブは、コールスタックが既知の形状であることを保証するために、特殊なケースで有用です。例</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> noTailCall</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;use duk notail&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>ネイティブ関数はテールコールされないので、対応する宣言は必要ない。</p>`,6)]))}const k=a(n,[["render",l]]);export{h as __pageData,k as default};
