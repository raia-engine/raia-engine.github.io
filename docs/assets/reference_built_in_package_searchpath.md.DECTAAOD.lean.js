import{_ as e,c as i,a2 as s,o as t}from"./chunks/framework.DPuwY6B9.js";const k=JSON.parse('{"title":"package.searchpath","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/package/searchpath.md","filePath":"reference/built_in/package/searchpath.md","lastUpdated":1729914702000}'),l={name:"reference/built_in/package/searchpath.md"};function o(c,a,h,p,d,n){return t(),i("div",null,a[0]||(a[0]=[s(`<h1 id="package-searchpath" tabindex="-1">package.searchpath <a class="header-anchor" href="#package-searchpath" aria-label="Permalink to &quot;package.searchpath&quot;">​</a></h1><p>指定されたモジュール名をパスで検索する</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">package.searchpath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (name, path [, sep [, rep]])</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>指定されたモジュール名 <code>name</code> を、指定されたパス <code>path</code> を使って検索します。</p><ul><li><code>path</code>：セミコロンで区切られたテンプレート文字列です。各テンプレート内の疑問符（<code>?</code>）を、<code>name</code> のコピーに置き換えます。</li><li><code>sep</code>：<code>name</code> 内の区切り文字を指定します。デフォルトはドット（<code>.</code>）です。</li><li><code>rep</code>：ファイルパス内の区切り文字を指定します。デフォルトはシステムのディレクトリ区切り文字（UNIX 系ではスラッシュ <code>/</code>）です。</li></ul><p>例えば、<code>path</code> が以下のような文字列の場合：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&quot;./?.lua;./?.lc;/usr/local/?/init.lua&quot;</span></span></code></pre></div><p><code>name</code> が <code>&quot;foo.a&quot;</code> の場合、<code>name</code> 内のドットをスラッシュに置き換え、<code>&quot;foo/a&quot;</code> となります。これを疑問符に置き換えて、以下のファイルをこの順番で試します：</p><ul><li><code>./foo/a.lua</code></li><li><code>./foo/a.lc</code></li><li><code>/usr/local/foo/a/init.lua</code></li></ul><p>ファイルが見つかった場合、そのファイル名を返します。見つからなかった場合は、<code>nil</code> とエラーメッセージ（試した全てのファイル名が含まれる）を返します。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> package.searchpath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mymodule&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./?.lua;./libs/?.lua&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(path)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- ファイルパスが見つかれば表示</span></span></code></pre></div><p>この例では、<code>mymodule</code>というモジュールを指定されたパスで検索します。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua 5.2</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li><a href="./require.html"><code>require</code></a></li><li><a href="./path.html"><code>package.path</code></a></li></ul>`,18)]))}const u=e(l,[["render",o]]);export{k as __pageData,u as default};
