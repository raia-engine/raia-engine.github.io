import{_ as i,c as s,a2 as e,o as l}from"./chunks/framework.CKGreiRV.js";const k=JSON.parse('{"title":"ffi.load","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/ffi/load.md","filePath":"reference/built_in/ffi/load.md","lastUpdated":1730090475000}'),t={name:"reference/built_in/ffi/load.md"};function o(n,a,d,h,r,p){return l(),s("div",null,a[0]||(a[0]=[e(`<h1 id="ffi-load" tabindex="-1">ffi.load <a class="header-anchor" href="#ffi-load" aria-label="Permalink to &quot;ffi.load&quot;">​</a></h1><p>共有ライブラリをロードし、関数や変数にアクセスする</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ffi.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">load</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name [, global])</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p><code>ffi.load</code> 関数は、指定された動的ライブラリをロードし、そのライブラリ内の関数やシンボルを新しいCライブラリ名前空間で利用できるようにします。<code>name</code> にはライブラリの名前またはパスを指定します。オプションの <code>global</code> に <code>true</code> を指定すると、ライブラリのシンボルがグローバル名前空間にもロードされます。</p><h2 id="補足" tabindex="-1">補足 <a class="header-anchor" href="#補足" aria-label="Permalink to &quot;補足&quot;">​</a></h2><ul><li><code>name</code> がパスでない場合、ライブラリ名の解釈はシステムに依存します。 <ul><li><strong>POSIXシステム</strong>：ドットが含まれない場合は <code>.so</code> 拡張子が追加され、必要に応じて <code>lib</code> 接頭辞も追加されます（例：<code>ffi.load(&quot;z&quot;)</code> は <code>libz.so</code> をロード）。</li><li><strong>Windowsシステム</strong>：ドットが含まれない場合は <code>.dll</code> 拡張子が追加されます（例：<code>ffi.load(&quot;ws2_32&quot;)</code> は <code>ws2_32.dll</code> をロード）。</li></ul></li></ul><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ffi </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ffi&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mylib </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ffi.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">load</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mylib&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>このコードは、<code>mylib</code> というライブラリをロードし、Luaからその機能にアクセスできるようにします。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>LuaJIT</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li>ffi.C</li><li>ffi.cdef</li></ul>`,14)]))}const u=i(t,[["render",o]]);export{k as __pageData,u as default};
