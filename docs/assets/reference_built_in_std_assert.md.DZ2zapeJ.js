import{_ as s,c as e,a2 as i,o as t}from"./chunks/framework.DzmM640o.js";const k=JSON.parse('{"title":"assert","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/std/assert.md","filePath":"reference/built_in/std/assert.md","lastUpdated":1730041717000}'),l={name:"reference/built_in/std/assert.md"};function n(r,a,h,o,d,p){return t(),e("div",null,a[0]||(a[0]=[i(`<h1 id="assert" tabindex="-1">assert <a class="header-anchor" href="#assert" aria-label="Permalink to &quot;assert&quot;">​</a></h1><p>条件が偽の場合、エラーを発生させる</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">assert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(v [, message])</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>引数 <code>v</code> が偽（<code>nil</code> または <code>false</code>）の場合にエラーを発生させます。そうでない場合は、全ての引数をそのまま返します。</p><p><code>message</code> はエラーオブジェクトで、任意の型を許容します。文字列だけでなく、テーブル、数値、関数など、カスタムエラーメッセージとして任意のデータ型を使用できます。<code>message</code> を省略した場合、デフォルトのエラーメッセージは <code>&quot;assertion failed!&quot;</code> です。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">assert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;x cannot be zero.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>この例では、<code>x</code>が0のためエラーメッセージが表示されます。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua5.3</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li><a href="./error.html"><code>error</code></a></li></ul>`,13)]))}const u=s(l,[["render",n]]);export{k as __pageData,u as default};
