import{_ as e,c as s,a2 as i,o as t}from"./chunks/framework.CKGreiRV.js";const c=JSON.parse('{"title":"lua_newthread","description":"","frontmatter":{},"headers":[],"relativePath":"reference/lua_c/lua_newthread.md","filePath":"reference/lua_c/lua_newthread.md","lastUpdated":1731828945000}'),l={name:"reference/lua_c/lua_newthread.md"};function h(n,a,r,d,p,k){return t(),s("div",null,a[0]||(a[0]=[i(`<h1 id="lua-newthread" tabindex="-1">lua_newthread <a class="header-anchor" href="#lua-newthread" aria-label="Permalink to &quot;lua_newthread&quot;">​</a></h1><p>新しいスレッドを作成し、スタックにプッシュします。</p><p><code>[-0, +1, m]</code></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lua_State </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lua_newthread</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (lua_State </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">L</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>新しいスレッドを作成し、スタックにプッシュし、この新しいスレッドを表す<code>lua_State</code>へのポインタを返します。この関数によって返される新しいステートは、元のステートとすべてのグローバルオブジェクト（テーブルなど）を共有しますが、独立した実行スタックを持ちます。</p><p>スレッドを閉じるまたは破壊するための明示的な関数はありません。スレッドは、任意のLuaオブジェクトと同様に、ガーベジコレクションの対象です。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lua_State </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">new_thread </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lua_newthread</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(L);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lua_pushthread</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(new_thread);</span></span></code></pre></div><p>このコードは、新しいスレッドを作成し、そのスレッド自体をスタックにプッシュします。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua5.1</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li>lua_resume</li><li>lua_yield</li></ul>`,14)]))}const u=e(l,[["render",h]]);export{c as __pageData,u as default};
