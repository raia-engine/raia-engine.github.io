import{_ as i,c as e,a2 as s,o as t}from"./chunks/framework.DPuwY6B9.js";const k=JSON.parse('{"title":"string.byte","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/string/byte.md","filePath":"reference/built_in/string/byte.md","lastUpdated":null}'),l={name:"reference/built_in/string/byte.md"};function n(h,a,r,d,o,p){return t(),e("div",null,a[0]||(a[0]=[s(`<h1 id="string-byte" tabindex="-1">string.byte <a class="header-anchor" href="#string-byte" aria-label="Permalink to &quot;string.byte&quot;">​</a></h1><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">string.byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (s [, i [, j]])</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>文字列<code>s</code>の指定した範囲の文字（<code>i</code>から<code>j</code>）の内部数値コードを返します。デフォルトでは、<code>i</code>は1で、<code>j</code>も省略されている場合は<code>i</code>と同じです。数値コードはプラットフォームによって異なる可能性があります。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> s </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Lua&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">string.byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- &#39;L&#39; の数値コードを出力</span></span></code></pre></div><p>この例では、<code>&quot;Lua&quot;</code>の1文字目の内部数値コードを返します。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua 5.1</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li><a href="./char.html"><code>string.char</code></a></li><li><a href="./len.html"><code>string.len</code></a></li></ul>`,11)]))}const u=i(l,[["render",n]]);export{k as __pageData,u as default};
