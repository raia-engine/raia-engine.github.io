import{_ as i,c as e,a2 as t,o as s}from"./chunks/framework.DPuwY6B9.js";const k=JSON.parse('{"title":"io.write","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/io/write.md","filePath":"reference/built_in/io/write.md","lastUpdated":1729914702000}'),l={name:"reference/built_in/io/write.md"};function n(r,a,h,o,p,d){return s(),e("div",null,a[0]||(a[0]=[t(`<h1 id="io-write" tabindex="-1">io.write <a class="header-anchor" href="#io-write" aria-label="Permalink to &quot;io.write&quot;">​</a></h1><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">io.write</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (···)</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>デフォルトの出力ファイルにデータを書き込みます。複数の引数を指定でき、文字列や数値を出力できます。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">io.output</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">io.write</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, Lua!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- ファイルに書き込む</span></span></code></pre></div><p>この例では、ファイルにデータを書き込んでいます。</p><h2 id="luajit独自の拡張" tabindex="-1">LuaJIT独自の拡張 <a class="header-anchor" href="#luajit独自の拡張" aria-label="Permalink to &quot;LuaJIT独自の拡張&quot;">​</a></h2><p>64ビットファイルオフセットを扱う。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua 5.1</li><li>LuaJIT</li></ul>`,11)]))}const c=i(l,[["render",n]]);export{k as __pageData,c as default};
