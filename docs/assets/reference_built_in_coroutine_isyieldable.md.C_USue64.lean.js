import{_ as s,c as a,a2 as e,o as l}from"./chunks/framework.CKGreiRV.js";const k=JSON.parse('{"title":"coroutine.isyieldable","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/coroutine/isyieldable.md","filePath":"reference/built_in/coroutine/isyieldable.md","lastUpdated":1730041717000}'),t={name:"reference/built_in/coroutine/isyieldable.md"};function n(h,i,d,o,r,p){return l(),a("div",null,i[0]||(i[0]=[e(`<h1 id="coroutine-isyieldable" tabindex="-1">coroutine.isyieldable <a class="header-anchor" href="#coroutine-isyieldable" aria-label="Permalink to &quot;coroutine.isyieldable&quot;">​</a></h1><p>現在の関数が中断可能かどうかを判定する</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">coroutine.isyieldable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ()</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>現在実行中のコルーチンが <code>yield</code>（中断）できる場合に <code>true</code> を返します。</p><p>コルーチンが <code>yield</code> 可能なのは、メインスレッドでなく、かつ <code>yield</code> 非対応の C 関数の内部にいないときです。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> co </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> coroutine.create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">coroutine.isyieldable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- true が表示されます</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    coroutine.yield</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">coroutine.isyieldable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- メインスレッドではfalseが表示されます</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">coroutine.resume</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(co)</span></span></code></pre></div><p>この例では、メインスレッドでは<code>yield</code>できないため<code>false</code>を返し、コルーチン内では<code>yield</code>可能なため<code>true</code>を返します。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua 5.3</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li><a href="./yield.html"><code>coroutine.yield</code></a></li><li><a href="./resume.html"><code>coroutine.resume</code></a></li></ul>`,13)]))}const u=s(t,[["render",n]]);export{k as __pageData,u as default};
