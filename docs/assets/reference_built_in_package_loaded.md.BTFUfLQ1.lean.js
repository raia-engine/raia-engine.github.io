import{_ as e,c as i,a2 as l,o as t}from"./chunks/framework.DPuwY6B9.js";const u=JSON.parse('{"title":"package.loaded","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/package/loaded.md","filePath":"reference/built_in/package/loaded.md","lastUpdated":1730041717000}'),s={name:"reference/built_in/package/loaded.md"};function d(o,a,n,r,h,p){return t(),i("div",null,a[0]||(a[0]=[l('<h1 id="package-loaded" tabindex="-1">package.loaded <a class="header-anchor" href="#package-loaded" aria-label="Permalink to &quot;package.loaded&quot;">​</a></h1><p>すでにロードされたモジュールを保持するテーブル</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">package.loaded</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>ロード済みのモジュールを管理するテーブルです。モジュールが既にロードされている場合、<code>require</code> はこのテーブルからモジュールを取得して返します。これにより、同じモジュールを複数回ロードすることを防ぎます。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">package.loaded</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mymodule&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>この例では、<code>mymodule</code>が<code>package.loaded</code>に存在するかどうかを確認します。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua 5.1</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li><a href="./require.html"><code>require</code></a></li><li><a href="./module.html"><code>module</code></a></li></ul>',12)]))}const k=e(s,[["render",d]]);export{u as __pageData,k as default};
