import{_ as i,c as a,a2 as t,o as e}from"./chunks/framework.6x3wfQve.js";const u=JSON.parse('{"title":"jit.flush","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/jit/flush.md","filePath":"reference/built_in/jit/flush.md","lastUpdated":null}'),l={name:"reference/built_in/jit/flush.md"};function h(n,s,p,r,k,d){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="jit-flush" tabindex="-1">jit.flush <a class="header-anchor" href="#jit-flush" aria-label="Permalink to &quot;jit.flush&quot;">​</a></h1><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">jit.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flush</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([func|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p><code>jit.flush</code> 関数は、指定された関数または全体のコンパイル済みコードキャッシュをクリアします。JITコンパイラの有効/無効状態には影響を与えません。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;jit&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">jit.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flush</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 全体のコンパイル済みコードをフラッシュ</span></span></code></pre></div><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>LuaJIT</li></ul>`,8)]))}const c=i(l,[["render",h]]);export{u as __pageData,c as default};
