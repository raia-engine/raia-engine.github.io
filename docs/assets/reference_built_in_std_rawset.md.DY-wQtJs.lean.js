import{_ as e,c as s,a2 as i,o as t}from"./chunks/framework.DPuwY6B9.js";const k=JSON.parse('{"title":"rawset","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/std/rawset.md","filePath":"reference/built_in/std/rawset.md","lastUpdated":1730041717000}'),l={name:"reference/built_in/std/rawset.md"};function n(h,a,d,r,o,p){return t(),s("div",null,a[0]||(a[0]=[i(`<h1 id="rawset" tabindex="-1">rawset <a class="header-anchor" href="#rawset" aria-label="Permalink to &quot;rawset&quot;">​</a></h1><p>テーブルに直接値を設定する（メタメソッドは呼び出されない）</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rawset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (table, index, value)</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>テーブル <code>table</code> のキー <code>index</code> に対して、値 <code>value</code> をメタメソッドを呼び出さずに直接設定します。<code>table</code> はテーブル型でなければならず、<code>index</code> は <code>nil</code> 以外の任意の値、<code>value</code> は任意の Lua の値を指定できます。</p><p>この関数は、設定後のテーブル <code>table</code> を返します。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> t </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rawset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>この例では、<code>1</code>が表示されます。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua5.1</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li><a href="./rawequal.html"><code>rawequal</code></a></li><li><a href="./rawget.html"><code>rawget</code></a></li></ul>`,13)]))}const u=e(l,[["render",n]]);export{k as __pageData,u as default};
