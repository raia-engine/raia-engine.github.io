import{_ as i,c as e,a2 as l,o as r}from"./chunks/framework.DPuwY6B9.js";const p=JSON.parse('{"title":"ドキュメントの草稿","description":"","frontmatter":{},"headers":[],"relativePath":"document/memo.md","filePath":"document/memo.md","lastUpdated":1702620513000}'),t={name:"document/memo.md"};function o(n,a,h,c,d,u){return r(),e("div",null,a[0]||(a[0]=[l('<h1 id="ドキュメントの草稿" tabindex="-1">ドキュメントの草稿 <a class="header-anchor" href="#ドキュメントの草稿" aria-label="Permalink to &quot;ドキュメントの草稿&quot;">​</a></h1><h2 id="特徴" tabindex="-1">特徴 <a class="header-anchor" href="#特徴" aria-label="Permalink to &quot;特徴&quot;">​</a></h2><p>Node.jsのような構造、Electronのような実態。</p><h2 id="raiaengineの思想" tabindex="-1">RaiaEngineの思想 <a class="header-anchor" href="#raiaengineの思想" aria-label="Permalink to &quot;RaiaEngineの思想&quot;">​</a></h2><p>何か一つの言語やプラットフォームに縛られることなくゲーム制作を楽しめる開発環境。</p><h2 id="共有ライブラリによる機能の共通化" tabindex="-1">共有ライブラリによる機能の共通化 <a class="header-anchor" href="#共有ライブラリによる機能の共通化" aria-label="Permalink to &quot;共有ライブラリによる機能の共通化&quot;">​</a></h2><h2 id="このドキュメントについて" tabindex="-1">このドキュメントについて <a class="header-anchor" href="#このドキュメントについて" aria-label="Permalink to &quot;このドキュメントについて&quot;">​</a></h2><p>RaiaEngineに関する包括的な解説を記述することを目的としています。</p><h3 id="raiaengineの特徴" tabindex="-1">RaiaEngineの特徴 <a class="header-anchor" href="#raiaengineの特徴" aria-label="Permalink to &quot;RaiaEngineの特徴&quot;">​</a></h3><ul><li>C言語基盤</li><li>JavaScriptで記述できる</li><li>スクリプトベース</li><li>クロスプラットフォーム</li><li>拡張しやすいモジュール</li></ul><p>規模なIDEを必要とせず、既存のエディターで編集することができます。プログラミング中心の開発に慣れている方におすすめです。</p><p>スクリプト言語にはJavaScript(ECMAScript)を採用しています。非常に広く使われているプログラミング言語ですので、学習コストを最小限にすることができます。TypeScriptやCoffeeScriptからトランスコンパイルしたコードにも対応しているため、より堅実に開発を進めることができます。</p><h3 id="対応するプラットフォーム" tabindex="-1">対応するプラットフォーム <a class="header-anchor" href="#対応するプラットフォーム" aria-label="Permalink to &quot;対応するプラットフォーム&quot;">​</a></h3><ul><li>Windows</li><li>macOS</li><li>Linux</li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p>iOS、Androidおよびウェブ対応について: デスクトップアプリとウェブアプリやモバイルアプリではゲーム体験が大きく異なります。そのため開発の優先度は低く見積もっています。</p></div><h3 id="raiaengineの技術基盤" tabindex="-1">RaiaEngineの技術基盤 <a class="header-anchor" href="#raiaengineの技術基盤" aria-label="Permalink to &quot;RaiaEngineの技術基盤&quot;">​</a></h3><p>描画処理にはANGLEを採用しており、各プラットフォームに最適なグラフィックAPIが呼び出されます。例えばWindowsであればDirectX、macOSであればMetalAPIが選ばれます。ANGLEはGpenGLES互換レイヤーでもあるため、GpenGLESを利用するウェブやモバイルへの移植も容易になっています。 RaiaEngineはC言語で記述されており、移植性が高く、拡張が容易です。 サウンド処理にはOpenALを採用しています。</p><h2 id="拡張しやすいモジュラー式" tabindex="-1">拡張しやすいモジュラー式 <a class="header-anchor" href="#拡張しやすいモジュラー式" aria-label="Permalink to &quot;拡張しやすいモジュラー式&quot;">​</a></h2><p>RaiaEngineはコンパクトな実行バイナリであるraia_coreに拡張プラグインを追加する形で動作します。これによりコードは独立して保守しやすくなります。また、RaiaEngineの拡張プラグインは比較的容易に作成できるため、高速で高度なシーンにも対応します。</p><h2 id="raiaengineのスクリプト" tabindex="-1">RaiaEngineのスクリプト <a class="header-anchor" href="#raiaengineのスクリプト" aria-label="Permalink to &quot;RaiaEngineのスクリプト&quot;">​</a></h2><h3 id="javascript-es5" tabindex="-1">JavaScript ES5 <a class="header-anchor" href="#javascript-es5" aria-label="Permalink to &quot;JavaScript ES5&quot;">​</a></h3><p>スクリプト言語には組み込み可能なECMAScriptエンジンであるDuktapeを採用しています。DukutapeはES5.0/ES5.1に準拠しています。</p><p>ES6以降のJavaScriptやTypeScriptもES5にトランスコンパイルすることで使用することができます。</p><h3 id="トランスコンパイル機能" tabindex="-1">トランスコンパイル機能 <a class="header-anchor" href="#トランスコンパイル機能" aria-label="Permalink to &quot;トランスコンパイル機能&quot;">​</a></h3><p>raia_config.jsonのes6modeが有効になっているとき自動的にbabel.jsの機能を使って、es6形式のスクリプトをトランスコンパイルします。</p><p>TODO: typescriptのトランスコンパイル。</p><h4 id="raiacore" tabindex="-1">RaiaCore <a class="header-anchor" href="#raiacore" aria-label="Permalink to &quot;RaiaCore&quot;">​</a></h4><h4 id="raia" tabindex="-1"><code>__Raia__</code> <a class="header-anchor" href="#raia" aria-label="Permalink to &quot;`__Raia__`&quot;">​</a></h4><p>__Raia__がスクリプトで使用するグローバルなオブジェクト変数です。RaiaEngineが初期状態で提供するすべての関数やプロパティは__Raia__オブジェクトに入っています。</p><h4 id="raia-core" tabindex="-1"><code>__Raia__.Core</code> <a class="header-anchor" href="#raia-core" aria-label="Permalink to &quot;`__Raia__.Core`&quot;">​</a></h4><h4 id="raia-lib" tabindex="-1"><code>__Raia__.Lib</code> <a class="header-anchor" href="#raia-lib" aria-label="Permalink to &quot;`__Raia__.Lib`&quot;">​</a></h4><h2 id="es6環境をセットアップする" tabindex="-1">ES6環境をセットアップする <a class="header-anchor" href="#es6環境をセットアップする" aria-label="Permalink to &quot;ES6環境をセットアップする&quot;">​</a></h2><p>ES6でゲーム開発したい場合の環境構築方法について説明します。</p><h2 id="typescript環境をセットアップする" tabindex="-1">TypeScript環境をセットアップする <a class="header-anchor" href="#typescript環境をセットアップする" aria-label="Permalink to &quot;TypeScript環境をセットアップする&quot;">​</a></h2><p>TypeScriptでゲーム開発したい場合の環境構築方法について説明します。</p><h2 id="プラグイン開発ガイド" tabindex="-1">プラグイン開発ガイド <a class="header-anchor" href="#プラグイン開発ガイド" aria-label="Permalink to &quot;プラグイン開発ガイド&quot;">​</a></h2><p>ランプレートのraia_sdkを参考にしてください。</p><p>プロジェクト構成、configファイル、ヘッダーファイル。</p><h2 id="c言語との連携" tabindex="-1">C言語との連携 <a class="header-anchor" href="#c言語との連携" aria-label="Permalink to &quot;C言語との連携&quot;">​</a></h2><p>RaiaEngineはゲームで使用するデータをJavaScript側で保持するように設計しています。これによりプラグインを使用するときにスムーズにデータのやり取りができます。</p><h3 id="windowsの場合" tabindex="-1">Windowsの場合 <a class="header-anchor" href="#windowsの場合" aria-label="Permalink to &quot;Windowsの場合&quot;">​</a></h3><p>Windowsでの拡張プラグイン開発には現状ではVisualStudioが必要になります。コードは共通化できますが、いくつかのファイルが追加されます。</p><h3 id="linux-macosの場合" tabindex="-1">Linux, macOSの場合 <a class="header-anchor" href="#linux-macosの場合" aria-label="Permalink to &quot;Linux, macOSの場合&quot;">​</a></h3><p>RaiaEngine公式プラグインはCmakeを用いていますが、Duktapeの機能を利用できる、共有ライブラリとして出力できる環境であれば問題ありません。</p><h3 id="コントリビューションガイド" tabindex="-1">コントリビューションガイド <a class="header-anchor" href="#コントリビューションガイド" aria-label="Permalink to &quot;コントリビューションガイド&quot;">​</a></h3><p>RaiaEngine本体の開発に興味がありますか。</p><h1 id="summary" tabindex="-1">Summary <a class="header-anchor" href="#summary" aria-label="Permalink to &quot;Summary&quot;">​</a></h1><ul><li><a href="./README.html">はじめに</a></li></ul><h3 id="初心者ガイド" tabindex="-1">初心者ガイド <a class="header-anchor" href="#初心者ガイド" aria-label="Permalink to &quot;初心者ガイド&quot;">​</a></h3><ul><li><a href="./guide/setup.html">インストールと実行</a></li><li><a href="./guide/tutorial.html">チュートリアル</a></li></ul><h3 id="トピック" tabindex="-1">トピック <a class="header-anchor" href="#トピック" aria-label="Permalink to &quot;トピック&quot;">​</a></h3><ul><li><a href="./overview.html">概要</a></li><li><a href="./script.html">スクリプト</a></li><li><a href="./context.html">コンテキスト</a></li></ul><h3 id="コンテキスト" tabindex="-1">コンテキスト <a class="header-anchor" href="#コンテキスト" aria-label="Permalink to &quot;コンテキスト&quot;">​</a></h3><ul><li><a href="./ctx/context.html">Raia.context</a></li></ul><h3 id="apiリファレンス" tabindex="-1">APIリファレンス <a class="header-anchor" href="#apiリファレンス" aria-label="Permalink to &quot;APIリファレンス&quot;">​</a></h3><h4 id="組み込みjavascriptのapi" tabindex="-1">組み込みJavaScriptのAPI <a class="header-anchor" href="#組み込みjavascriptのapi" aria-label="Permalink to &quot;組み込みJavaScriptのAPI&quot;">​</a></h4><h4 id="raiaで提供されているapi" tabindex="-1">Raiaで提供されているAPI <a class="header-anchor" href="#raiaで提供されているapi" aria-label="Permalink to &quot;Raiaで提供されているAPI&quot;">​</a></h4><ul><li><a href="./api/raia.html">Raia</a><ul><li><a href="./api/raia_core.html">Core</a></li><li><a href="./api/raia_app.html">App</a></li></ul></li></ul><h2 id="二重構造のraiaengineapi" tabindex="-1">二重構造のRaiaEngineAPI <a class="header-anchor" href="#二重構造のraiaengineapi" aria-label="Permalink to &quot;二重構造のRaiaEngineAPI&quot;">​</a></h2><p>RaiaEngineはC言語とやり取りしやすい形でJavaScriptに渡し、それをJavaScriptのモジュール側で使いやすいようにカスタマイズするという方法を取っています。基本的にJavaScriptにチューニングされた機能をお使いいただき、元の関数などは気にしなくて問題ありません。</p><p>元の関数は__Raia__オブジェクトに格納されます。カスタマイズされた関数はそれを参照する形で実行します。</p><ul><li>Raia <ul><li>Core <ul><li>Context <ul><li>init: コンテキストを返す</li></ul></li><li>Lib <ul><li>init:</li><li>open: ダイナミックライブラリを開く</li><li>close: ライブラリを閉じる</li><li>closeAll: すべてのライブラリを閉じる</li><li>funcGlobal: ライブラリの関数をグローバルオブジェクトに登録する</li><li>func: ライブラリの関数を返す</li></ul></li><li>IO <ul><li>loadStringFilename: テキストファイルを読み込む</li></ul></li></ul></li><li>App <ul><li>Window <ul><li>init: ウィンドウを生成する</li><li>setTitle: タイトルを設定する</li><li>shouldClose: クローズボタンが押されたか</li><li>pollEvents: イベントをプールする</li></ul></li><li>Screen <ul><li>redraw: スクリーンを再描画する</li></ul></li><li>Event <ul><li>key: キー入力のコールバックを登録する</li><li>error: エラーのコールバックを登録する</li><li>corsor: マウス移動のコールバックを登録する</li><li>mouse: マウスボタンのコールバックを登録する</li><li>char: 文字入力のコールバックを登録する</li><li>enter: マウスの入退出のコールバックを登録する</li><li>scroll: スクロールのコールバックを登録する</li><li>joystick: ジョイスティック接続・解除のコールバックを登録する</li><li>drop: ドラッグ＆ドロップのコールバックを登録する</li><li>update: 再描画のコールバックを登録する</li><li>updateEnable: 再描画のコールバックを有効にする</li></ul></li><li>GLFW</li><li>GLES</li></ul></li></ul></li></ul>',62)]))}const m=i(t,[["render",o]]);export{p as __pageData,m as default};
