import{_ as a,c as i,a2 as e,o as t}from"./chunks/framework.6x3wfQve.js";const c=JSON.parse('{"title":"table.move","description":"","frontmatter":{},"headers":[],"relativePath":"document/built_in/table/move.md","filePath":"document/built_in/table/move.md","lastUpdated":1729487189000}'),n={name:"document/built_in/table/move.md"};function l(h,s,p,k,d,o){return t(),i("div",null,s[0]||(s[0]=[e(`<h1 id="table-move" tabindex="-1">table.move <a class="header-anchor" href="#table-move" aria-label="Permalink to &quot;table.move&quot;">​</a></h1><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">table.move</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (a1, f, e, t [,a2])</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>テーブル<code>a1</code>の要素をテーブル<code>a2</code>に移動します。この操作は次のような複数代入に相当します：<code>a2[t],··· = a1[f],···,a1[e]</code>。<code>a2</code>のデフォルト値は<code>a1</code>です。つまり、<code>a2</code>を省略した場合、要素は<code>a1</code>内で移動されます。移動元の範囲と移動先の範囲は重複しても問題ありません。移動する要素の数はLuaの整数に収まる必要があります。</p><p>この関数は移動先のテーブル<code>a2</code>を返します。</p><h3 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- テーブルa1の要素を移動</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">table.move</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a1, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- a1の2番目から4番目の要素を1番目から配置し直す</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i, v </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ipairs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a1) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(i, v)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>この例では、テーブル<code>a1</code>の2番目から4番目の要素（20, 30, 40）が1番目から順に配置されます。結果として、テーブル<code>a1</code>は<code>{20, 30, 40, 40, 50}</code>になります。</p>`,8)]))}const E=a(n,[["render",l]]);export{c as __pageData,E as default};
