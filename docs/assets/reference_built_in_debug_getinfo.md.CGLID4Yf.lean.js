import{_ as i,c as e,a2 as s,o as t}from"./chunks/framework.DzmM640o.js";const c=JSON.parse('{"title":"debug.getinfo","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/debug/getinfo.md","filePath":"reference/built_in/debug/getinfo.md","lastUpdated":1730090475000}'),l={name:"reference/built_in/debug/getinfo.md"};function n(h,a,d,o,r,p){return t(),e("div",null,a[0]||(a[0]=[s(`<h1 id="debug-getinfo" tabindex="-1">debug.getinfo <a class="header-anchor" href="#debug-getinfo" aria-label="Permalink to &quot;debug.getinfo&quot;">​</a></h1><p>関数やスレッドに関する情報を返す</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">debug.getinfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ([thread,] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [, what])</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>指定した関数やスタックレベルに関する情報を返します。この情報には、関数名、ソースコードの行番号、呼び出し回数などが含まれます。<code>what</code>引数を使用して取得する情報を特定することができます。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> info </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> debug.getinfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;n&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(info.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>この例では、現在の関数に関する名前が取得され、出力されます。</p><h2 id="luajit独自の拡張" tabindex="-1">LuaJIT独自の拡張 <a class="header-anchor" href="#luajit独自の拡張" aria-label="Permalink to &quot;LuaJIT独自の拡張&quot;">​</a></h2><ul><li>メタメソッドを識別する。</li><li>オプション&quot;u&quot;に対して<code>nparams</code>と<code>isvararg</code>を返す。</li></ul><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua 5.1</li><li>LuaJIT</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li><a href="./traceback.html"><code>debug.traceback</code></a></li><li><a href="./getlocal.html"><code>debug.getlocal</code></a></li></ul>`,14)]))}const u=i(l,[["render",n]]);export{c as __pageData,u as default};
