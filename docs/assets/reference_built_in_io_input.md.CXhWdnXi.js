import{_ as i,c as s,a2 as t,o as e}from"./chunks/framework.CuCbyi2k.js";const u=JSON.parse('{"title":"io.input","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/io/input.md","filePath":"reference/built_in/io/input.md","lastUpdated":1730041717000}'),n={name:"reference/built_in/io/input.md"};function l(h,a,p,o,r,d){return e(),s("div",null,a[0]||(a[0]=[t(`<h1 id="io-input" tabindex="-1">io.input <a class="header-anchor" href="#io-input" aria-label="Permalink to &quot;io.input&quot;">​</a></h1><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">io.input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ([file])</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>引数 <code>file</code> にファイル名が指定された場合は、そのファイルを開いてデフォルトの入力ファイルとして設定します。ファイルハンドルが指定された場合、そのハンドルをデフォルトの入力ファイルとして設定します。引数なしで呼び出すと、現在のデフォルト入力ファイルを返します。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">io.input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- test.txt をデフォルトの入力ファイルに設定</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> content </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> io.read</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;*a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- ファイル全体を読み込む</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(content)</span></span></code></pre></div><p>この例では、ファイルをデフォルトの入力として設定し、その内容を読み込んで出力しています。</p><h2 id="luajit独自の拡張" tabindex="-1">LuaJIT独自の拡張 <a class="header-anchor" href="#luajit独自の拡張" aria-label="Permalink to &quot;LuaJIT独自の拡張&quot;">​</a></h2><p>64ビットファイルオフセットを扱う。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua 5.1</li><li>LuaJIT</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li><a href="./output.html"><code>io.output</code></a></li></ul>`,13)]))}const c=i(n,[["render",l]]);export{u as __pageData,c as default};
