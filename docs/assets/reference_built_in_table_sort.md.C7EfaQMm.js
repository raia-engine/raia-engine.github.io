import{_ as s,c as i,a2 as t,o as e}from"./chunks/framework.6x3wfQve.js";const c=JSON.parse('{"title":"table.sort","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/table/sort.md","filePath":"reference/built_in/table/sort.md","lastUpdated":null}'),l={name:"reference/built_in/table/sort.md"};function n(h,a,r,p,o,k){return e(),i("div",null,a[0]||(a[0]=[t(`<h1 id="table-sort" tabindex="-1">table.sort <a class="header-anchor" href="#table-sort" aria-label="Permalink to &quot;table.sort&quot;">​</a></h1><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">table.sort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (table [, comp])</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>テーブルをその場でソートします。<code>comp</code>関数が指定されていない場合、デフォルトで<code>&lt;</code>演算子が使用されます。<code>comp</code>が指定された場合、その関数は2つの要素を受け取り、最初の要素が2番目より小さい場合に<code>true</code>を返す必要があります。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> t </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">table.sort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">table.concat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;, &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 1, 2, 3, 4</span></span></code></pre></div><p>この例では、テーブル内の数値を昇順にソートしています。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua 5.1</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li><a href="./concat.html"><code>table.concat</code></a></li><li><a href="./insert.html"><code>table.insert</code></a></li></ul>`,11)]))}const E=s(l,[["render",n]]);export{c as __pageData,E as default};
