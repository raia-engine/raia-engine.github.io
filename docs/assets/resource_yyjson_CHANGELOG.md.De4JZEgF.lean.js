import{_ as a,c as o,a2 as d,o as i}from"./chunks/framework.CKGreiRV.js";const m=JSON.parse('{"title":"Changelog","description":"","frontmatter":{},"headers":[],"relativePath":"resource/yyjson/CHANGELOG.md","filePath":"resource/yyjson/CHANGELOG.md","lastUpdated":1732350347000}'),l={name:"resource/yyjson/CHANGELOG.md"};function r(t,e,n,c,h,s){return i(),o("div",null,e[0]||(e[0]=[d('<h1 id="changelog" tabindex="-1">Changelog <a class="header-anchor" href="#changelog" aria-label="Permalink to &quot;Changelog&quot;">​</a></h1><p>All notable changes to this project will be documented in this file.</p><h2 id="unreleased" tabindex="-1">Unreleased <a class="header-anchor" href="#unreleased" aria-label="Permalink to &quot;Unreleased&quot;">​</a></h2><h4 id="added" tabindex="-1">Added <a class="header-anchor" href="#added" aria-label="Permalink to &quot;Added&quot;">​</a></h4><ul><li>Add <code>YYJSON_WRITE_PRETTY_TWO_SPACES</code> option to allow 2 spaces instead of 4 spaces when writing pretty JSON: #99</li><li>Add <code>yyjson_get_num()</code> function to convert and return any number value as <code>double</code>: #108</li><li>Add support for Loongarch: #112</li><li>Add functions to get type-specific values specified by JSON Pointer: #116</li><li>Add functions to read/write JSON with file pointer <code>FILE *</code>: #122</li><li>Add functions to support modifying memory pool size of <code>yyjson_mut_doc</code>.</li><li>Add convenience functions <code>iter_with()</code> for creating iterator.</li><li>Add functions to modify JSON by JSON Pointer, such as <code>ptr_set()</code> and <code>ptr_remove()</code>.</li><li>Add support for JSON Patch (RFC 6902).</li></ul><h4 id="changed" tabindex="-1">Changed <a class="header-anchor" href="#changed" aria-label="Permalink to &quot;Changed&quot;">​</a></h4><ul><li><strong>BREAKING CHANGE:</strong> Change allocator&#39;s realloc function signature, add <code>old_size</code> parameter for custom allocator: #100</li><li><strong>BREAKING CHANGE:</strong> Change <code>yyjson_read_number()</code> function, add <code>alc</code> parameter.</li><li><strong>DEPRECATED:</strong> Deprecate <code>get_pointer()</code> functions, rename to <code>ptr_get()</code>.</li><li>Improve <code>yyjson_mut_write()</code> performance.</li></ul><h4 id="fixed" tabindex="-1">Fixed <a class="header-anchor" href="#fixed" aria-label="Permalink to &quot;Fixed&quot;">​</a></h4><ul><li>Fix inaccurate error code for truncated JSON: #103</li></ul><h2 id="_0-6-0-2022-12-12" tabindex="-1">0.6.0 (2022-12-12) <a class="header-anchor" href="#_0-6-0-2022-12-12" aria-label="Permalink to &quot;0.6.0 (2022-12-12)&quot;">​</a></h2><h4 id="added-1" tabindex="-1">Added <a class="header-anchor" href="#added-1" aria-label="Permalink to &quot;Added&quot;">​</a></h4><ul><li>Add functions to modify the content of a JSON value, for example <code>yyjson_set_int(yyjson_val *val, int num)</code>.</li><li>Add functions to copy from mutable doc to immutable doc.</li><li>Add functions to support renaming an object&#39;s key.</li><li>Add the <code>yyjson_read_number()</code> function to parse numeric strings.</li><li>Add a placeholder allocator if <code>yyjson_alc_pool_init()</code> fails.</li></ul><h4 id="fixed-1" tabindex="-1">Fixed <a class="header-anchor" href="#fixed-1" aria-label="Permalink to &quot;Fixed&quot;">​</a></h4><ul><li>Fix quite NaN on MIPS and HPPA arch.</li><li>Fixed compile error before <code>GCC 4.5</code> which doesn&#39;t support empty optional extended asm label.</li><li>When built-in floating point conversion is disabled, sprintf() output for floating point numbers is missing a decimal point, for example 123 should be 123.0.</li></ul><h2 id="_0-5-1-2022-06-17" tabindex="-1">0.5.1 (2022-06-17) <a class="header-anchor" href="#_0-5-1-2022-06-17" aria-label="Permalink to &quot;0.5.1 (2022-06-17)&quot;">​</a></h2><h4 id="fixed-2" tabindex="-1">Fixed <a class="header-anchor" href="#fixed-2" aria-label="Permalink to &quot;Fixed&quot;">​</a></h4><ul><li>Fix run-time error when compiling as cpp and 32-bit (g++-5 -m32 -fPIC) #85</li><li>Fix incurrect output number format, remove unnecessary digits (e.g. 2.0e34 -&gt; 2e34).</li></ul><h2 id="_0-5-0-2022-05-25" tabindex="-1">0.5.0 (2022-05-25) <a class="header-anchor" href="#_0-5-0-2022-05-25" aria-label="Permalink to &quot;0.5.0 (2022-05-25)&quot;">​</a></h2><h4 id="added-2" tabindex="-1">Added <a class="header-anchor" href="#added-2" aria-label="Permalink to &quot;Added&quot;">​</a></h4><ul><li>Add LibFuzzer support.</li><li>Add Doxygen support.</li><li>Add functions to support serializing a single JSON value.</li><li>Add <code>yyjson_mut_doc_mut_copy()</code>, <code>yyjson_mut_val_mut_copy()</code>, <code>yyjson_mut_merge_patch()</code> function for mutable input.</li><li>Add <code>yyjson_equals()</code> and <code>yyjson_mut_equals()</code> function to compare two values.</li><li>Add <code>yyjson_mut_obj_remove_key()</code> and <code>yyjson_mut_obj_remove_keyn()</code> to make it easier to remove a key.</li><li>Add <code>YYJSON_READ_NUMBER_AS_RAW</code> option and <code>RAW</code> type support.</li><li>Add <code>YYJSON_READ_ALLOW_INVALID_UNICODE</code> and <code>YYJSON_WRITE_ALLOW_INVALID_UNICODE</code> options to allow invalid unicode.</li></ul><h4 id="changed-1" tabindex="-1">Changed <a class="header-anchor" href="#changed-1" aria-label="Permalink to &quot;Changed&quot;">​</a></h4><ul><li>Change <code>yyjson_mut_obj_remove()</code> return type from <code>bool</code> to <code>yyjson_mut_val *</code>.</li><li>Rewrite string serialization function, validate unicode encoding by default.</li><li>Rewrite the JSON Pointer implementation, remove internal malloc() calls.</li></ul><h4 id="fixed-3" tabindex="-1">Fixed <a class="header-anchor" href="#fixed-3" aria-label="Permalink to &quot;Fixed&quot;">​</a></h4><ul><li>Make the code work correctly with setlocale() function and fast-math flag: #54</li><li>Fix negative infinity literals read error: #64</li><li>Fix non null-terminated string write error.</li><li>Fix incorrect behavior of <code>YYJSON_DISABLE_NON_STANDARD</code> flag: #80</li></ul><h2 id="_0-4-0-2021-12-12" tabindex="-1">0.4.0 (2021-12-12) <a class="header-anchor" href="#_0-4-0-2021-12-12" aria-label="Permalink to &quot;0.4.0 (2021-12-12)&quot;">​</a></h2><h4 id="added-3" tabindex="-1">Added <a class="header-anchor" href="#added-3" aria-label="Permalink to &quot;Added&quot;">​</a></h4><ul><li>Add <code>YYJSON_WRITE_INF_AND_NAN_AS_NULL</code> flag for JSON writer.</li><li>Add <code>yyjson_merge_patch()</code> function for JSON Merge-Path API (RFC 7386).</li><li>Add <code>yyjson_mut_obj_replace()</code> and <code>yyjson_mut_obj_insert()</code> function for object modification.</li><li>Add <code>yyjson_obj_iter_get()</code> and <code>yyjson_mut_obj_iter_get()</code> function for faster object search.</li><li>Add <code>yyjson_version()</code> function.</li></ul><h4 id="changed-2" tabindex="-1">Changed <a class="header-anchor" href="#changed-2" aria-label="Permalink to &quot;Changed&quot;">​</a></h4><ul><li>Replace <code>YYJSON_DISABLE_COMMENT_READER</code> and <code>YYJSON_DISABLE_INF_AND_NAN_READER</code> with <code>YYJSON_DISABLE_NON_STANDARD</code> compiler flag.</li><li>Replace <code>YYJSON_DISABLE_FP_READER</code> and <code>YYJSON_DISABLE_FP_WRITER</code> with <code>YYJSON_DISABLE_FAST_FP_CONV</code> compiler flag.</li></ul><h4 id="fixed-4" tabindex="-1">Fixed <a class="header-anchor" href="#fixed-4" aria-label="Permalink to &quot;Fixed&quot;">​</a></h4><ul><li>Fix compiler warning with <code>-Wconversion</code></li><li>Fix compiler error for GCC 4.4 (#53) and MSVC 6.0 (#55)</li></ul><h2 id="_0-3-0-2021-05-25" tabindex="-1">0.3.0 (2021-05-25) <a class="header-anchor" href="#_0-3-0-2021-05-25" aria-label="Permalink to &quot;0.3.0 (2021-05-25)&quot;">​</a></h2><h4 id="added-4" tabindex="-1">Added <a class="header-anchor" href="#added-4" aria-label="Permalink to &quot;Added&quot;">​</a></h4><ul><li>Add <code>JSON Pointer</code> support.</li><li>Add CMake install target.</li></ul><h4 id="changed-3" tabindex="-1">Changed <a class="header-anchor" href="#changed-3" aria-label="Permalink to &quot;Changed&quot;">​</a></h4><ul><li>Improve performance for some arch which doesn&#39;t support unaligned memory access.</li></ul><h4 id="fixed-5" tabindex="-1">Fixed <a class="header-anchor" href="#fixed-5" aria-label="Permalink to &quot;Fixed&quot;">​</a></h4><ul><li>Fix some compiler warning for GCC and Clang.</li><li>Fix MSVC build error on UWP (uninitialized local variable).</li><li>Fix stream file reading error on some platform.</li></ul><h2 id="_0-2-0-2020-12-12" tabindex="-1">0.2.0 (2020-12-12) <a class="header-anchor" href="#_0-2-0-2020-12-12" aria-label="Permalink to &quot;0.2.0 (2020-12-12)&quot;">​</a></h2><h4 id="added-5" tabindex="-1">Added <a class="header-anchor" href="#added-5" aria-label="Permalink to &quot;Added&quot;">​</a></h4><ul><li>Add swift package manager support.</li></ul><h4 id="changed-4" tabindex="-1">Changed <a class="header-anchor" href="#changed-4" aria-label="Permalink to &quot;Changed&quot;">​</a></h4><ul><li>Improve JSON reader performance for gcc.</li><li>Improve double number reader performance with a fast path.</li><li>Rewrite double number writer with Schubfach algorithm: #4.</li><li>Strict UTF-8 validation for JSON reader.</li></ul><h4 id="removed" tabindex="-1">Removed <a class="header-anchor" href="#removed" aria-label="Permalink to &quot;Removed&quot;">​</a></h4><ul><li>Remove <code>YYJSON_READ_FASTFP</code> compiler flag.</li></ul><h4 id="fixed-6" tabindex="-1">Fixed <a class="header-anchor" href="#fixed-6" aria-label="Permalink to &quot;Fixed&quot;">​</a></h4><ul><li>Fix a compile error for old version gcc on linux: #7.</li></ul><h2 id="_0-1-0-2020-10-26" tabindex="-1">0.1.0 (2020-10-26) <a class="header-anchor" href="#_0-1-0-2020-10-26" aria-label="Permalink to &quot;0.1.0 (2020-10-26)&quot;">​</a></h2><h4 id="added-6" tabindex="-1">Added <a class="header-anchor" href="#added-6" aria-label="Permalink to &quot;Added&quot;">​</a></h4><ul><li>Initial release.</li><li>Add the basic JSON reader and writer (RFC 8259).</li><li>Add CMake support.</li><li>Add GitHub CI workflow.</li><li>Add test code and test data.</li><li>Add <code>sanitizer</code> and <code>valgrind</code> memory checker.</li><li>Add <code>API</code> and <code>DataStructure</code> documentation.</li></ul>',50)]))}const _=a(l,[["render",r]]);export{m as __pageData,_ as default};
