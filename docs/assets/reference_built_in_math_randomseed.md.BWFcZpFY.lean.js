import{_ as e,c as s,a2 as i,o as t}from"./chunks/framework.DPuwY6B9.js";const c=JSON.parse('{"title":"math.randomseed","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/math/randomseed.md","filePath":"reference/built_in/math/randomseed.md","lastUpdated":1730090475000}'),n={name:"reference/built_in/math/randomseed.md"};function h(l,a,d,r,o,p){return t(),s("div",null,a[0]||(a[0]=[i(`<h1 id="math-randomseed" tabindex="-1">math.randomseed <a class="header-anchor" href="#math-randomseed" aria-label="Permalink to &quot;math.randomseed&quot;">​</a></h1><p>乱数生成器の種を設定する</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">math.randomseed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (x)</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>擬似乱数生成器のシードを <code>x</code> に設定します。これにより、同じシード値から同じ乱数列を再現できます。</p><h2 id="補足" tabindex="-1">補足 <a class="header-anchor" href="#補足" aria-label="Permalink to &quot;補足&quot;">​</a></h2><ul><li>LuaJIT は、Tausworthe PRNG を使用して <code>math.random()</code> と <code>math.randomseed()</code> を実装しています。</li></ul><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">math.randomseed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">os.time</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">math.random</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 1から100の乱数</span></span></code></pre></div><p>この例では、現在の時刻を使って擬似乱数生成器のシードを設定しています。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua5.1</li><li>LuaJIT</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li><a href="./random.html"><code>math.random</code></a></li></ul>`,14)]))}const m=e(n,[["render",h]]);export{c as __pageData,m as default};
