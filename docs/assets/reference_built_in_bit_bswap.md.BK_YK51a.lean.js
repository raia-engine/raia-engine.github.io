import{_ as i,c as s,a2 as t,o as e}from"./chunks/framework.DPuwY6B9.js";const c=JSON.parse('{"title":"bit.bswap","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/bit/bswap.md","filePath":"reference/built_in/bit/bswap.md","lastUpdated":1730041717000}'),l={name:"reference/built_in/bit/bswap.md"};function n(h,a,p,r,d,k){return e(),s("div",null,a[0]||(a[0]=[t(`<h1 id="bit-bswap" tabindex="-1">bit.bswap <a class="header-anchor" href="#bit-bswap" aria-label="Permalink to &quot;bit.bswap&quot;">​</a></h1><p>32ビット整数のバイト順序を逆転させる（エンディアン変換）</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bit.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bswap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (x)</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>数値 <code>x</code> のバイトオーダーを逆転します。これにより、32ビット整数のリトルエンディアン表現とビッグエンディアン表現を相互に変換できます。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(bit.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bswap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x12345678</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">--&gt; 2018915346</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(bit.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bswap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x78563412</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">--&gt; 305419896</span></span></code></pre></div><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>LuaJIT</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li><a href="./tohex.html"><code>bit.tohex</code></a></li></ul>`,11)]))}const b=i(l,[["render",n]]);export{c as __pageData,b as default};
