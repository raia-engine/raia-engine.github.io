import{_ as a,c as s,a2 as e,o as t}from"./chunks/framework.DzmM640o.js";const c=JSON.parse('{"title":"luaL_optinteger","description":"","frontmatter":{},"headers":[],"relativePath":"reference/lua_c/luaL_optinteger.md","filePath":"reference/lua_c/luaL_optinteger.md","lastUpdated":1731828945000}'),l={name:"reference/lua_c/luaL_optinteger.md"};function n(h,i,p,r,k,d){return t(),s("div",null,i[0]||(i[0]=[e(`<h1 id="lual-optinteger" tabindex="-1">luaL_optinteger <a class="header-anchor" href="#lual-optinteger" aria-label="Permalink to &quot;luaL_optinteger&quot;">​</a></h1><p>指定された引数が数値である場合、その数値を<code>lua_Integer</code>型で返します。引数が省略された場合や<code>nil</code>の場合はデフォルト値を返します。</p><p><code>[-0, +0, v]</code></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lua_Integer </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">luaL_optinteger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (lua_State </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">L</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> narg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lua_Integer </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>関数の引数<code>narg</code>が数値の場合、その数値を<code>lua_Integer</code>型にキャストして返します。この引数が欠けている場合や<code>nil</code>の場合は、<code>d</code>を返します。それ以外の場合はエラーを発生させます。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lua_Integer value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> luaL_optinteger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(L, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;整数値: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%lld\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">long</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> long</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>このコードは、引数1が省略された場合や<code>nil</code>の場合にデフォルト値100を返します。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua5.1</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li>luaL_checkinteger</li><li>luaL_optint</li></ul>`,13)]))}const g=a(l,[["render",n]]);export{c as __pageData,g as default};
