import{_ as a,c as i,a2 as t,o as l}from"./chunks/framework.CKGreiRV.js";const c=JSON.parse('{"title":"lua_pushvfstring","description":"","frontmatter":{},"headers":[],"relativePath":"reference/lua_c/lua_pushvfstring.md","filePath":"reference/lua_c/lua_pushvfstring.md","lastUpdated":1731828945000}'),e={name:"reference/lua_c/lua_pushvfstring.md"};function h(n,s,p,r,k,d){return l(),i("div",null,s[0]||(s[0]=[t(`<h1 id="lua-pushvfstring" tabindex="-1">lua_pushvfstring <a class="header-anchor" href="#lua-pushvfstring" aria-label="Permalink to &quot;lua_pushvfstring&quot;">​</a></h1><p>可変個の引数をリスト形式で受け取り、フォーマットされた文字列をスタックにプッシュします。</p><p><code>[-0, +1, m]</code></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> char</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lua_pushvfstring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (lua_State </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">L</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> char</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">fmt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, va_list </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">argp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p><code>lua_pushfstring</code>と同等ですが、可変個の引数の代わりに<code>va_list</code>を受け取ります。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">va_list args;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">va_start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args, format);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lua_pushvfstring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(L, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;フォーマット: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, args);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">va_end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args);</span></span></code></pre></div><p>このコードは、<code>va_list</code>を使ってフォーマット文字列をスタックにプッシュします。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua5.1</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li>lua_pushfstring</li><li>lua_pushstring</li></ul>`,13)]))}const u=a(e,[["render",h]]);export{c as __pageData,u as default};
