import{_ as i,c as a,a2 as t,o as l}from"./chunks/framework.DPuwY6B9.js";const d=JSON.parse('{"title":"グローバルオブジェクトへの参照を取得する方法","description":"","frontmatter":{},"headers":[],"relativePath":"resource/duktape/wiki/how_to_get_a_reference_to_the_global_object.md","filePath":"resource/duktape/wiki/how_to_get_a_reference_to_the_global_object.md","lastUpdated":null}'),e={name:"resource/duktape/wiki/how_to_get_a_reference_to_the_global_object.md"};function n(h,s,p,k,r,E){return l(),a("div",null,s[0]||(s[0]=[t(`<h1 id="グローバルオブジェクトへの参照を取得する方法" tabindex="-1">グローバルオブジェクトへの参照を取得する方法 <a class="header-anchor" href="#グローバルオブジェクトへの参照を取得する方法" aria-label="Permalink to &quot;グローバルオブジェクトへの参照を取得する方法&quot;">​</a></h1><p>ECMAScript にはグローバル・オブジェクトのための標準的な名前付きバインディングがないので、スクリプトは様々なイディオムを使ってグローバル・オブジェクトにアクセスします。Duktape 2.1以降では、<a href="https://github.com/tc39/proposal-global" target="_blank" rel="noreferrer">https://github.com/tc39/proposal-global</a> に基づいて、明示的なグローバル・バインディングが利用できます。</p><p>次のスニペットは、グローバル（プログラム）コード、evalコード、関数コードなど、どのコンテキストからでもグローバルオブジェクトに簡単にアクセスできます（暗号化されているとしても）。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> globalObject </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;return this;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)();</span></span></code></pre></div><p>globalは標準化される可能性が高いので、以下のようなpolyfillが望ましいかもしれません（<a href="https://github.com/svaarala/duktape/blob/master/polyfills/global.js%EF%BC%89%E3%80%82" target="_blank" rel="noreferrer">https://github.com/svaarala/duktape/blob/master/polyfills/global.js）。</a></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> global </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;undefined&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> global </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;return this;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Object.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">defineProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(global, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;global&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            value: global,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            writable: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            enumerable: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            configurable: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>new Function(...) は、引数として与えられたボディを持つ新しい関数を作成します。他の多くのコンテキストとは異なり、周囲のコードの厳密性は継承されないので、作成された関数は厳密ではないので、これは一貫してグローバルオブジェクトにバインドされます。</p>`,7)]))}const g=i(e,[["render",n]]);export{d as __pageData,g as default};
