import{_ as a,c as i,a2 as e,o as l}from"./chunks/framework.DPuwY6B9.js";const d=JSON.parse('{"title":"lua_pushcclosure","description":"","frontmatter":{},"headers":[],"relativePath":"reference/lua_c/lua_pushcclosure.md","filePath":"reference/lua_c/lua_pushcclosure.md","lastUpdated":1731828945000}'),t={name:"reference/lua_c/lua_pushcclosure.md"};function h(n,s,p,c,r,u){return l(),i("div",null,s[0]||(s[0]=[e(`<h1 id="lua-pushcclosure" tabindex="-1">lua_pushcclosure <a class="header-anchor" href="#lua-pushcclosure" aria-label="Permalink to &quot;lua_pushcclosure&quot;">​</a></h1><p>新しいCクロージャをスタックにプッシュします。</p><p><code>[-n, +1, m]</code></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lua_pushcclosure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (lua_State </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">L</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lua_CFunction </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">fn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> n</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>新しいCクロージャをスタックにプッシュします。</p><p>C関数が作成されると、それにいくつかの値を関連付けることができ、これによりCクロージャが作成されます。これらの値は、関数が呼び出されるたびに関数からアクセス可能です。C関数に値を関連付けるには、まずこれらの値をスタックにプッシュする必要があります（複数の値がある場合は、最初の値が最初にプッシュされます）。次に<code>lua_pushcclosure</code>を呼び出して、C関数をスタックに作成してプッシュします。引数<code>n</code>は関数に関連付けるべき値の数を示します。<code>lua_pushcclosure</code>はこれらの値もスタックからポップします。</p><p><code>n</code>の最大値は255です。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lua_pushnumber</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(L, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 値をスタックにプッシュ */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lua_pushcclosure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(L, my_c_function, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* my_c_functionをクロージャとしてプッシュ */</span></span></code></pre></div><p>このコードは、C関数<code>my_c_function</code>に値を関連付けたクロージャを作成し、スタックにプッシュします。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua5.1</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li>lua_pushcfunction</li><li>lua_pushvalue</li></ul>`,15)]))}const k=a(t,[["render",h]]);export{d as __pageData,k as default};
