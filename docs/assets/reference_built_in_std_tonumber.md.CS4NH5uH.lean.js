import{_ as e,c as t,a2 as i,o as s}from"./chunks/framework.DzmM640o.js";const u=JSON.parse('{"title":"tonumber","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/std/tonumber.md","filePath":"reference/built_in/std/tonumber.md","lastUpdated":1730041717000}'),n={name:"reference/built_in/std/tonumber.md"};function l(o,a,r,d,h,c){return s(),t("div",null,a[0]||(a[0]=[i('<h1 id="tonumber" tabindex="-1">tonumber <a class="header-anchor" href="#tonumber" aria-label="Permalink to &quot;tonumber&quot;">​</a></h1><p>値を数値に変換する</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tonumber</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (e [, base])</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>引数 <code>e</code> を数値に変換します。<code>e</code> が既に数値であるか、数値に変換可能な文字列であれば、その数値を返します。変換できない場合は <code>nil</code> を返します。</p><p>オプションの引数 <code>base</code> は、<code>e</code> を解釈する際の基数を指定します。基数は 2 から 36 までの整数で、デフォルトは 10 です。基数が 10 を超える場合、文字 <code>&#39;A&#39;</code>（大文字・小文字問わず）が 10 を、<code>&#39;B&#39;</code> が 11、...、<code>&#39;Z&#39;</code> が 35 を表します。基数が 10 の場合、小数点や指数表記が利用できますが、他の基数では符号なし整数のみが受け入れられます。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tonumber</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;10&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 10</span></span></code></pre></div><p>この例では、文字列が数値に変換されます。</p><h2 id="luajit独自の拡張" tabindex="-1">LuaJIT独自の拡張 <a class="header-anchor" href="#luajit独自の拡張" aria-label="Permalink to &quot;LuaJIT独自の拡張&quot;">​</a></h2><p>組み込みの文字列から数値への変換を使用します。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua5.1</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li><a href="./tostring.html"><code>tostring</code></a></li></ul>',15)]))}const k=e(n,[["render",l]]);export{u as __pageData,k as default};
