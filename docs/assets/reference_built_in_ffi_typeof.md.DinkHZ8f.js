import{_ as a,c as s,a2 as e,o as t}from"./chunks/framework.CKGreiRV.js";const c=JSON.parse('{"title":"ffi.typeof","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/ffi/typeof.md","filePath":"reference/built_in/ffi/typeof.md","lastUpdated":1730090475000}'),l={name:"reference/built_in/ffi/typeof.md"};function n(h,i,p,o,d,k){return t(),s("div",null,i[0]||(i[0]=[e(`<h1 id="ffi-typeof" tabindex="-1">ffi.typeof <a class="header-anchor" href="#ffi-typeof" aria-label="Permalink to &quot;ffi.typeof&quot;">​</a></h1><p>型を定義し、キャッシュする</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ffi.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ct)</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p><code>ffi.typeof</code> 関数は、指定されたC型 <code>ct</code> を解析して、再利用可能な <code>ctype</code> オブジェクトを返します。<code>ctype</code> オブジェクトはキャッシュされ、同じ型の <code>cdata</code> オブジェクトを繰り返し生成する際に効率的に使用できます。</p><h2 id="補足" tabindex="-1">補足 <a class="header-anchor" href="#補足" aria-label="Permalink to &quot;補足&quot;">​</a></h2><ul><li><code>ffi.typeof</code> を用いて生成された <code>ctype</code> は、<code>ffi.new</code> の代わりに直接使用でき、性能が向上します。同じC型を複数回生成する場合は、<code>ffi.typeof</code> で型をキャッシュしておくのが推奨されます。</li></ul><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ffi </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ffi&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> int_type </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ffi.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;int&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> int_obj </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> int_type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(int_obj)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 10</span></span></code></pre></div><p>このコードは、<code>ffi.typeof</code> で整数型をキャッシュし、その型を使って新しいオブジェクトを作成します。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>LuaJIT</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li>ffi.new</li><li>ffi.metatype</li></ul>`,14)]))}const f=a(l,[["render",n]]);export{c as __pageData,f as default};
