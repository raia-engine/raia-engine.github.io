import{_ as s,c as a,a2 as e,o as n}from"./chunks/framework.6x3wfQve.js";const c=JSON.parse('{"title":"coroutine.yield","description":"","frontmatter":{},"headers":[],"relativePath":"document/built_in/coroutine/yield.md","filePath":"document/built_in/coroutine/yield.md","lastUpdated":null}'),t={name:"document/built_in/coroutine/yield.md"};function l(h,i,p,k,r,d){return n(),a("div",null,i[0]||(i[0]=[e(`<h1 id="coroutine-yield" tabindex="-1">coroutine.yield <a class="header-anchor" href="#coroutine-yield" aria-label="Permalink to &quot;coroutine.yield&quot;">​</a></h1><p>コルーチンを一時停止し、再開できるようにする</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">coroutine.yield</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>現在のコルーチンの実行を中断します。引数<code>...</code>はコルーチンを再開したときに返される結果として扱われます。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> co </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> coroutine.create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">coroutine.yield</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(i))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 1, 2, 3 を順に出力</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">coroutine.resume</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(co)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 1</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">coroutine.resume</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(co)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 2</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">coroutine.resume</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(co)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 3</span></span></code></pre></div><p>この例では、コルーチンが<code>yield</code>によって中断され、その後再開されています。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><p>Lua 5.1</p><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li><code>coroutine.resume</code></li><li><code>coroutine.wrap</code></li></ul>`,12)]))}const u=s(t,[["render",l]]);export{c as __pageData,u as default};
