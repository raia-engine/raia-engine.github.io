import{_ as s,c as i,a2 as e,o as t}from"./chunks/framework.CKGreiRV.js";const o=JSON.parse('{"title":"luaL_checkstack","description":"","frontmatter":{},"headers":[],"relativePath":"reference/lua_c/luaL_checkstack.md","filePath":"reference/lua_c/luaL_checkstack.md","lastUpdated":1731828945000}'),l={name:"reference/lua_c/luaL_checkstack.md"};function h(k,a,n,c,p,r){return t(),i("div",null,a[0]||(a[0]=[e('<h1 id="lual-checkstack" tabindex="-1">luaL_checkstack <a class="header-anchor" href="#lual-checkstack" aria-label="Permalink to &quot;luaL_checkstack&quot;">​</a></h1><p>スタックのサイズを確認し、指定されたサイズまで拡張可能かどうかを確認します。</p><p><code>[-0, +0, v]</code></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> luaL_checkstack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (lua_State </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">L</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> sz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> char</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">msg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>スタックサイズを<code>top + sz</code>要素まで増やし、スタックをそのサイズまで増やせない場合にはエラーを発生させます。<code>msg</code>はエラーメッセージに追加するテキストです。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">luaL_checkstack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(L, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;スタックが小さすぎます&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>このコードは、スタックに10個の追加項目が配置できるか確認し、できない場合はエラーを出します。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua5.1</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li>lua_checkstack</li><li>lua_error</li></ul>',13)]))}const u=s(l,[["render",h]]);export{o as __pageData,u as default};
