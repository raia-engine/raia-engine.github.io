import{_ as s,c as a,a2 as t,o as h}from"./chunks/framework.DPuwY6B9.js";const o=JSON.parse('{"title":"bit.tohex","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/bit/tohex.md","filePath":"reference/built_in/bit/tohex.md","lastUpdated":1729914702000}'),n={name:"reference/built_in/bit/tohex.md"};function e(l,i,k,p,r,d){return h(),a("div",null,i[0]||(i[0]=[t(`<h1 id="bit-tohex" tabindex="-1">bit.tohex <a class="header-anchor" href="#bit-tohex" aria-label="Permalink to &quot;bit.tohex&quot;">​</a></h1><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bit.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tohex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (x [, n])</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>数値 <code>x</code> を16進数表記の文字列に変換します。オプションの第2引数 <code>n</code> で出力する桁数を指定できます。<code>n</code> が正の数の場合は小文字、負の数の場合は大文字の16進数で表記されます。桁数は1から8まで指定可能で、デフォルトは8桁です。負の数 <code>x</code> は符号なしの32ビット整数として扱われます。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(bit.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tohex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))              </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">--&gt; 00000001</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(bit.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tohex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))             </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">--&gt; ffffffff</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(bit.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tohex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0xffffffff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">--&gt; ffffffff</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(bit.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tohex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">--&gt; FFFFFFFF</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(bit.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tohex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x21</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">--&gt; 0021</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(bit.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tohex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0x87654321</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">--&gt; 4321</span></span></code></pre></div><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>LuaJIT</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li><a href="./tobit.html"><code>bit.tobit</code></a></li></ul>`,10)]))}const g=s(n,[["render",e]]);export{o as __pageData,g as default};
