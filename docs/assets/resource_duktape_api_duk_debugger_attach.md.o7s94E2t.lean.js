import{_ as a,c as i,a2 as e,o as t}from"./chunks/framework.CuCbyi2k.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"resource/duktape/api/duk_debugger_attach.md","filePath":"resource/duktape/api/duk_debugger_attach.md","lastUpdated":1732350347000}'),n={name:"resource/duktape/api/duk_debugger_attach.md"};function h(p,s,k,l,d,r){return t(),i("div",null,s[0]||(s[0]=[e(`<h2 id="duk-debugger-attach" tabindex="-1">duk_debugger_attach() <a class="header-anchor" href="#duk-debugger-attach" aria-label="Permalink to &quot;duk_debugger_attach()&quot;">​</a></h2><p>1.2.0 debugger</p><h3 id="プロトタイプ" tabindex="-1">プロトタイプ <a class="header-anchor" href="#プロトタイプ" aria-label="Permalink to &quot;プロトタイプ&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> duk_debugger_attach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(duk_context </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ctx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                         duk_debug_read_function </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">read_cb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                         duk_debug_write_function </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">write_cb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                         duk_debug_peek_function </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">peek_cb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                         duk_debug_read_flush_function </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">read_flush_cb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                         duk_debug_write_flush_function </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">write_flush_cb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                         duk_debug_request_function </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">request_cb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                         duk_debug_detached_function </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">detached_cb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                         void</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">udata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="スタック" tabindex="-1">スタック <a class="header-anchor" href="#スタック" aria-label="Permalink to &quot;スタック&quot;">​</a></h3><p>(バリュースタックに影響なし。)</p><h3 id="要約" tabindex="-1">要約 <a class="header-anchor" href="#要約" aria-label="Permalink to &quot;要約&quot;">​</a></h3><p>Duktapeのヒープにデバッガーをアタッチします。アタッチが完了すると、デバッガは自動的にポーズ状態になります。デバッガのサポートがDuktapeにコンパイルされていない場合、エラーを投げます。。デバッガー統合の詳細については、debugger.rstを参照してください。コールバックは以下のとおりです。オプションのコールバックはNULLでもかまいません。</p><p>コールバック 必須 説明 read_cb はい デバッグトランスポート読み込みコールバック write_cb はい デバッグトランスポートの書き込みコールバック peek_cb No デバッグトランスポートのピークコールバック、強く推奨するがオプション read_flush_cb No デバッグトランスポートリードフラッシュコールバック write_flush_cb No デバッグトランスポートライトフラッシュコールバック request_cb No アプリケーション固有のコマンド (AppRequest) コールバック、NULL は AppRequest のサポートがないことを示します。 detached_cb No デバッガーを切り離すコールバック 重要：コールバックは、以下を除き、Duktape API関数を呼び出すことはできません（そうすることで、メモリが安全でない動作が発生する可能性があります）。</p><p>request_cb AppRequestコールバックは、debugger.rstに記載されているガイドラインの範囲内で、バリュースタックを使用することができます。 Duktape 1.4.0以降では、デバッガー離脱コールバックはduk_debugger_attach()を呼び出して、すぐにデバッガーを再接続することが許可されるようになりました。Duktape 1.4.0以前では、即時再接続は潜在的にいくつかの問題を引き起こしていました。 Duk_debugger_attach_custom() と duk_debugger_attach() APIコールは、Duktape 2.xでマージされました。</p><h3 id="例" tabindex="-1">例 <a class="header-anchor" href="#例" aria-label="Permalink to &quot;例&quot;">​</a></h3><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">duk_debugger_attach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ctx,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    my_read_cb,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    my_write_cb,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    my_peek_cb,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                    NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                    NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                    NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    my_detached_cb,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    my_udata);</span></span></code></pre></div><h3 id="参照" tabindex="-1">参照 <a class="header-anchor" href="#参照" aria-label="Permalink to &quot;参照&quot;">​</a></h3><p>duk_debugger_detach duk_debugger_cooperate duk_debugger_notify</p>`,14)]))}const u=a(n,[["render",h]]);export{E as __pageData,u as default};
