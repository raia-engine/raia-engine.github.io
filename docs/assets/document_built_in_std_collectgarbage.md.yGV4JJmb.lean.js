import{_ as a,c as e,a2 as d,o as s}from"./chunks/framework.6x3wfQve.js";const g=JSON.parse('{"title":"collectgarbage","description":"","frontmatter":{},"headers":[],"relativePath":"document/built_in/std/collectgarbage.md","filePath":"document/built_in/std/collectgarbage.md","lastUpdated":1729074270000}'),o={name:"document/built_in/std/collectgarbage.md"};function l(c,t,i,r,n,h){return s(),e("div",null,t[0]||(t[0]=[d('<h1 id="collectgarbage" tabindex="-1">collectgarbage <a class="header-anchor" href="#collectgarbage" aria-label="Permalink to &quot;collectgarbage&quot;">​</a></h1><p>ガベージコレクタを制御する</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">collectgarbage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ([opt [, arg]])</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>この関数はガベージコレクタへの汎用インターフェイスです。最初の引数<code>opt</code>に応じて異なる機能を実行します：</p><table tabindex="0"><thead><tr><th>opt</th><th>説明</th></tr></thead><tbody><tr><td><code>collect</code></td><td>完全なガベージコレクションサイクルを実行します。これがデフォルトオプションです。</td></tr><tr><td><code>stop</code></td><td>ガベージコレクタを停止します。</td></tr><tr><td><code>restart</code></td><td>ガベージコレクタを再起動します。</td></tr><tr><td><code>count</code></td><td>Luaによって使用されている合計メモリ（キロバイト単位）を返します。</td></tr><tr><td><code>step</code></td><td>ガベージコレクションステップを実行します。ステップの「サイズ」は<code>arg</code>によって制御されます（大きな値はより多くのステップを意味します）が、具体的な方法は指定されていません。ステップサイズを制御したい場合は、<code>arg</code>の値を実験的に調整する必要があります。コレクションサイクルが終了した場合はtrueを返します。</td></tr><tr><td><code>setpause</code></td><td>ガベージコレクタの一時停止の新しい値として<code>arg</code>を設定します。一時停止の前の値を返します。</td></tr><tr><td><code>setstepmul</code></td><td>ガベージコレクタのステップ乗数の新しい値として<code>arg</code>を設定します。ステップの前の値を返します。</td></tr></tbody></table><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">collectgarbage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;collect&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>この例では、ガベージコレクタが強制的に実行されます。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua5.1</li></ul>',11)]))}const u=a(o,[["render",l]]);export{g as __pageData,u as default};
