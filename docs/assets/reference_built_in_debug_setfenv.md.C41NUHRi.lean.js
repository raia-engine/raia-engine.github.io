import{_ as e,c as s,a2 as i,o as t}from"./chunks/framework.CuCbyi2k.js";const k=JSON.parse('{"title":"debug.setfenv","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/debug/setfenv.md","filePath":"reference/built_in/debug/setfenv.md","lastUpdated":1730090475000}'),n={name:"reference/built_in/debug/setfenv.md"};function l(h,a,d,p,r,o){return t(),s("div",null,a[0]||(a[0]=[i(`<h1 id="debug-setfenv" tabindex="-1">debug.setfenv <a class="header-anchor" href="#debug-setfenv" aria-label="Permalink to &quot;debug.setfenv&quot;">​</a></h1><p>関数やスレッドに環境テーブルを設定する</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">debug.setfenv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (object, table)</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>オブジェクト<code>object</code>の環境テーブルを<code>table</code>に設定します。<code>object</code>には関数やスレッドを指定できます。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">debug.setfenv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(test, {a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 42</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 42が表示される</span></span></code></pre></div><p>この例では、関数<code>test</code>の環境を設定して、その中で変数<code>a</code>が使用されます。</p><h2 id="luajit独自の拡張" tabindex="-1">LuaJIT独自の拡張 <a class="header-anchor" href="#luajit独自の拡張" aria-label="Permalink to &quot;LuaJIT独自の拡張&quot;">​</a></h2><p>メタメソッドを識別する。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua 5.1</li><li>LuaJIT</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li><a href="./getfenv.html"><code>debug.getfenv</code></a></li><li><a href="./../std/setfenv.html"><code>setfenv</code></a></li></ul>`,14)]))}const u=e(n,[["render",l]]);export{k as __pageData,u as default};
