import{_ as a,c as t,j as e,a as o,o as n}from"./chunks/framework.CKGreiRV.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"resource/duktape/guide/random_numbers.md","filePath":"resource/duktape/guide/random_numbers.md","lastUpdated":1732350347000}'),s={name:"resource/duktape/guide/random_numbers.md"};function d(m,r,u,p,i,l){return n(),t("div",null,r[0]||(r[0]=[e("h2",{id:"random_numbers",tabindex:"-1"},[o("乱数について "),e("a",{class:"header-anchor",href:"#random_numbers","aria-label":'Permalink to "乱数について {#random_numbers}"'},"​")],-1),e("p",null,"乱数は、内部的に Math.random() で使用されています。また、現在は Array.prototype.sort() の実装でランダムピボット選択のために使用されています。",-1),e("p",null,"デフォルトの内部乱数生成器は xoroshiro128+ で、SplitMix64 シードミキシングを使用します。Shamirの3-op PRNGは低メモリターゲットやコンパイラが64ビット型を持っていない場合に使用されます。このジェネレータは、例えばシード材料の品質が限られているため、本格的な統計アルゴリズムには適しておらず、暗号には全く適していません。",-1),e("p",null,"DUK_USE_GET_RANDOM_DOUBLE 設定オプションを使って、内部の乱数生成器を置き換えることができます。",-1)]))}const b=a(s,[["render",d]]);export{c as __pageData,b as default};
