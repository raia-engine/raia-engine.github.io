import{_ as a,c as t,a2 as i,o as s}from"./chunks/framework.DPuwY6B9.js";const u=JSON.parse('{"title":"type","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/std/type.md","filePath":"reference/built_in/std/type.md","lastUpdated":null}'),o={name:"reference/built_in/std/type.md"};function n(l,e,d,p,r,h){return s(),t("div",null,e[0]||(e[0]=[i('<h1 id="type" tabindex="-1">type <a class="header-anchor" href="#type" aria-label="Permalink to &quot;type&quot;">​</a></h1><p>引数のデータ型を文字列で返す</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (v)</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>唯一の引数の型を文字列として返します。この関数の可能な結果は <code>&quot;nil&quot;</code>（文字列であり、値<code>nil</code>ではありません）、<code>&quot;number&quot;</code>、<code>&quot;string&quot;</code>、<code>&quot;boolean&quot;</code>、<code>&quot;table&quot;</code>、<code>&quot;function&quot;</code>、<code>&quot;thread&quot;</code>、および <code>&quot;userdata&quot;</code>です。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- &quot;number&quot;</span></span></code></pre></div><p>この例では、引数の型が表示されます。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua5.1</li></ul>',10)]))}const k=a(o,[["render",n]]);export{u as __pageData,k as default};
