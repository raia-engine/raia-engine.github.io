import{_ as i,c as a,a2 as n,o as l}from"./chunks/framework.CKGreiRV.js";const g=JSON.parse('{"title":"列挙型","description":"","frontmatter":{},"headers":[],"relativePath":"resource/dart/language/classes_and_objects/enums.md","filePath":"resource/dart/language/classes_and_objects/enums.md","lastUpdated":1732376957000}'),h={name:"resource/dart/language/classes_and_objects/enums.md"};function t(p,s,k,e,r,d){return l(),a("div",null,s[0]||(s[0]=[n(`<h1 id="列挙型" tabindex="-1">列挙型 <a class="header-anchor" href="#列挙型" aria-label="Permalink to &quot;列挙型&quot;">​</a></h1><p>列挙型は、しばしば列挙型または列挙型と呼ばれ、固定数の定数値を表すために使われる特別な種類のクラスである。</p><div class="info custom-block"><p class="custom-block-title">Note</p><p>すべての列挙型は自動的にEnumクラスを継承します。また、Enum は封印されており、サブクラス化したり、実装したり、混ぜたり、明示的にインスタンス化したりすることはできません。</p><p>抽象クラスやミキシンはEnumを明示的に実装したり拡張したりすることができますが、Enum宣言によって実装されたりミックスされたりしない限り、オブジェクトが実際にそのクラスやミキシンの型を実装することはできません。</p></div><h2 id="単純な列挙型の宣言" tabindex="-1">単純な列挙型の宣言 <a class="header-anchor" href="#単純な列挙型の宣言" aria-label="Permalink to &quot;単純な列挙型の宣言&quot;">​</a></h2><p>単純な列挙型を宣言するには、enumキーワードを使用し、列挙したい値を列挙します：</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">enum</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { red, green, blue }</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Tip</p><p>また、列挙型を宣言するときに末尾にカンマを使用すると、コピー・ペースト・エラーを防ぐことができる。</p></div><h2 id="拡張列挙型の宣言" tabindex="-1">拡張列挙型の宣言 <a class="header-anchor" href="#拡張列挙型の宣言" aria-label="Permalink to &quot;拡張列挙型の宣言&quot;">​</a></h2><p>Dartでは、既知の定数インスタンスの数に制限されたフィールド、メソッド、コンストラクタを持つクラスを宣言するためのenum宣言も可能です。</p><p>拡張列挙型を宣言するには、通常のクラスと同様の構文に従いますが、いくつかの追加要件があります：</p><ul><li>インスタンス変数は、mixin によって追加されたものも含めて、final でなければならない。</li><li>すべての生成コンストラクタは定数でなければならない。</li><li>ファクトリーのコンストラクターは、固定された既知のEnumインスタンスの1つだけを返すことができる。</li><li>Enumは自動的に拡張されるため、他のクラスを拡張することはできない。</li><li>index、hashCode、等号演算子 <code>==</code> をオーバーライドすることはできません。</li><li>valuesという名前のメンバをenumで宣言することはできません。自動生成される静的値ゲッターと衝突してしまうからです。</li><li>列挙型のインスタンスはすべて宣言の冒頭で宣言する必要があり、少なくとも1つのインスタンスが宣言されていなければなりません。</li></ul><p>拡張列挙型のインスタンスメソッドは、これを使用して現在の列挙型の値を参照できる。</p><p>以下は、複数のインスタンス、インスタンス変数、ゲッター、実装されたインターフェイスを持つ拡張列挙型を宣言する例です：</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">enum</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Vehicle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> implements</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comparable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vehicle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  car</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tires</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, passengers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, carbonPerKilometer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  bus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tires</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, passengers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, carbonPerKilometer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  bicycle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tires</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, passengers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, carbonPerKilometer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Vehicle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    required</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.tires,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    required</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.passengers,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    required</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.carbonPerKilometer,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  final</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tires;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  final</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> passengers;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  final</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> carbonPerKilometer;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> carbonFootprint </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (carbonPerKilometer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> passengers).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">round</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isTwoWheeled </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Vehicle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.bicycle;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  @override</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> compareTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vehicle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> other) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> carbonFootprint </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> other.carbonFootprint;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">Version note</p><p>拡張された列挙型には、少なくとも2.17の言語バージョンが必要です。</p></div><h2 id="列挙型の使用" tabindex="-1">列挙型の使用 <a class="header-anchor" href="#列挙型の使用" aria-label="Permalink to &quot;列挙型の使用&quot;">​</a></h2><p>他の静的変数と同じように、列挙型の値にアクセスします：</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> favoriteColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.blue;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (favoriteColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.blue) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Your favorite color is blue!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>enumの各値にはインデックスゲッターがあり、enum宣言における値のゼロベースの位置を返す。例えば、最初の値はインデックス0、2番目の値はインデックス1です。</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">assert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.red.index </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">assert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.green.index </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">assert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.blue.index </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>列挙されたすべての値のリストを取得するには、列挙型のvalues定数を使用する。</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">List</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; colors </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.values;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">assert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(colors[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.blue);</span></span></code></pre></div><p>switch文の中でenumを使うことができ、enumの値をすべて処理しないと警告が出る：</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> aColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.blue;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">switch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (aColor) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  case</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.red</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Red as roses!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  case</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.green</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Green as grass!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  default:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Without this, you see a WARNING.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(aColor); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;Color.blue&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Color.blueから&#39;blue&#39;のような列挙値の名前にアクセスする必要がある場合は、.nameプロパティを使用します：</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.blue.name); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;blue&#39;</span></span></code></pre></div><p>通常のオブジェクトと同じように、列挙値のメンバーにアクセスできる：</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vehicle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.car.carbonFootprint);</span></span></code></pre></div>`,28)]))}const o=i(h,[["render",t]]);export{g as __pageData,o as default};
