import{_ as e,c as t,a2 as i,o as s}from"./chunks/framework.CuCbyi2k.js";const k=JSON.parse('{"title":"luaL_getmetatable","description":"","frontmatter":{},"headers":[],"relativePath":"reference/lua_c/luaL_getmetatable.md","filePath":"reference/lua_c/luaL_getmetatable.md","lastUpdated":1731828945000}'),l={name:"reference/lua_c/luaL_getmetatable.md"};function n(h,a,p,r,d,o){return s(),t("div",null,a[0]||(a[0]=[i('<h1 id="lual-getmetatable" tabindex="-1">luaL_getmetatable <a class="header-anchor" href="#lual-getmetatable" aria-label="Permalink to &quot;luaL_getmetatable&quot;">​</a></h1><p>レジストリ内の指定された名前で関連付けられたメタテーブルを取得します。</p><p><code>[-0, +1, -]</code></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> luaL_getmetatable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (lua_State </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">L</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> char</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">tname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>レジストリ内の<code>tname</code>名で関連付けられたメタテーブルをスタックにプッシュします（<code>luaL_newmetatable</code>を参照）。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">luaL_getmetatable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(L, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MyType&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>このコードは、レジストリ内の「MyType」メタテーブルを取得し、スタックにプッシュします。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua5.1</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li>luaL_newmetatable</li><li>luaL_checkudata</li></ul>',13)]))}const u=e(l,[["render",n]]);export{k as __pageData,u as default};
