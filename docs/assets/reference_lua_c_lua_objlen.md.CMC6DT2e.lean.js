import{_ as i,c as s,a2 as e,o as l}from"./chunks/framework.DPuwY6B9.js";const c=JSON.parse('{"title":"lua_objlen","description":"","frontmatter":{},"headers":[],"relativePath":"reference/lua_c/lua_objlen.md","filePath":"reference/lua_c/lua_objlen.md","lastUpdated":null}'),t={name:"reference/lua_c/lua_objlen.md"};function n(h,a,p,r,k,d){return l(),s("div",null,a[0]||(a[0]=[e(`<h1 id="lua-objlen" tabindex="-1">lua_objlen <a class="header-anchor" href="#lua-objlen" aria-label="Permalink to &quot;lua_objlen&quot;">​</a></h1><p>指定されたインデックスにある値の「長さ」を返します。</p><p><code>[-0, +0, -]</code></p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">size_t</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lua_objlen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (lua_State </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">L</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>指定された許容インデックスにある値の「長さ」を返します：文字列の場合は文字列の長さ、テーブルの場合は長さ演算子（&#39;#&#39;）の結果、ユーザーデータの場合はユーザーデータに割り当てられたメモリブロックのサイズ、他の値の場合は0です。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">size_t</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> len </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lua_objlen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(L, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;オブジェクトの長さ: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%zu\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, len);</span></span></code></pre></div><p>このコードは、インデックス1のオブジェクトの長さを取得し、出力します。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua5.1</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li>lua_strlen</li><li>lua_rawlen</li></ul>`,13)]))}const u=i(t,[["render",n]]);export{c as __pageData,u as default};
