import{_ as e,c as s,a2 as i,o as l}from"./chunks/framework.DPuwY6B9.js";const c=JSON.parse('{"title":"package.seeall","description":"","frontmatter":{},"headers":[],"relativePath":"reference/built_in/package/seeall.md","filePath":"reference/built_in/package/seeall.md","lastUpdated":1730041717000}'),t={name:"reference/built_in/package/seeall.md"};function n(h,a,p,d,r,o){return l(),s("div",null,a[0]||(a[0]=[i(`<h1 id="package-seeall" tabindex="-1">package.seeall <a class="header-anchor" href="#package-seeall" aria-label="Permalink to &quot;package.seeall&quot;">​</a></h1><p>モジュールがグローバルな変数にアクセスできるようにする</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">package.seeall</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>指定したモジュールのメタテーブルを設定し、その <code>__index</code> フィールドをグローバル環境（<code>_G</code>）に設定します。これにより、モジュール内で未定義の変数を参照した場合、グローバル環境から変数を検索できるようになります。</p><h2 id="補足" tabindex="-1">補足 <a class="header-anchor" href="#補足" aria-label="Permalink to &quot;補足&quot;">​</a></h2><ul><li><code>package.seeall</code> は <code>module</code> 関数と組み合わせて使用され、モジュールがグローバル変数を参照できるようにします。</li><li>グローバル変数の参照は推奨されない場合もあるため、使用には注意が必要です。</li></ul><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mymodule&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">package.seeall</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(_M)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_G</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- グローバルなprint関数が継承されます</span></span></code></pre></div><p>この例では、<code>seeall</code>を使ってグローバル環境をモジュールに継承しています。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua 5.1</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li><a href="./module.html"><code>module</code></a></li><li><a href="./../std/setmetatable.html"><code>setmetatable</code></a></li></ul>`,14)]))}const u=e(t,[["render",n]]);export{c as __pageData,u as default};
