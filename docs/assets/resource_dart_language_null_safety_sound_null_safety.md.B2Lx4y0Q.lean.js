import{_ as s,c as l,a2 as i,o as n}from"./chunks/framework.CuCbyi2k.js";const c=JSON.parse('{"title":"健全なNull安全性","description":"","frontmatter":{},"headers":[],"relativePath":"resource/dart/language/null_safety/sound_null_safety.md","filePath":"resource/dart/language/null_safety/sound_null_safety.md","lastUpdated":1732376957000}'),t={name:"resource/dart/language/null_safety/sound_null_safety.md"};function e(p,a,r,h,d,o){return n(),l("div",null,a[0]||(a[0]=[i(`<h1 id="健全なnull安全性" tabindex="-1">健全なNull安全性 <a class="header-anchor" href="#健全なnull安全性" aria-label="Permalink to &quot;健全なNull安全性&quot;">​</a></h1><p>Dart言語は健全なヌル安全性を実装しています。</p><p>NULL セーフティは、NULL に設定された変数への意図しないアクセスによるエラーを防ぎます。</p><p>例えば、あるメソッドが整数を予期していたのにNULLを受け取った場合、アプリは実行時エラーを引き起こします。この種のエラー（null dereference エラー）はデバッグが困難です。</p><p>健全なNul安全性では、すべての変数が値を必要とします。つまり、Dartはすべての変数をnull不可と見なします。int i=42 のように、宣言された型の値のみを代入することができます。デフォルトの変数型にヌル値を代入することはできません。変数型がヌル値を持つことができることを指定するには、型注釈の後に ? を追加します。</p><p>健全なNull安全性は、潜在的な実行時エラーを編集時の解析エラーに変えます。ヌル・セーフティを使用すると、Dart アナライザおよびコンパイラは、NULL 値を 持たない変数にフラグを付けます：</p><ul><li>NULL以外の値で初期化されていない</li><li>NULL値が割り当てられている</li></ul><p>これらのチェックにより、アプリをデプロイする前にこれらのエラーを修正することができます。</p><h2 id="実例による紹介" tabindex="-1">実例による紹介 <a class="header-anchor" href="#実例による紹介" aria-label="Permalink to &quot;実例による紹介&quot;">​</a></h2><p>Null安全を使えば、以下のコードの変数はどれもNullにはならない：</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// With null safety, none of these can ever be null.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 42</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Inferred to be an int.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getFileName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Foo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><p>変数がNULL値を持つ可能性があることを示すには、型宣言に<code>?</code>を追加すればよい：</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> aNullableInt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><ul><li>インタラクティブな例を試すには、Dartのチートシートにあるヌル・セーフティ指向の例をいくつか試してみてください。</li><li>ヌル安全性についての詳細は、Understanding null safetyを参照してください。</li></ul><h2 id="null安全性の原則" tabindex="-1">Null安全性の原則 <a class="header-anchor" href="#null安全性の原則" aria-label="Permalink to &quot;Null安全性の原則&quot;">​</a></h2><p>Dartは、以下の2つの基本設計原則を使用してヌルの安全性をサポートしています：</p><ul><li>デフォルトでは NULL 値を許容しない。変数が NULL になる可能性があることを Dart に明示的に指示しない限り、その変数は NULL にならないものと見なされます。このデフォルトは、APIにおいてnon-nullが最も一般的な選択肢であるという調査結果を受けて選択されました。</li><li>完全に健全です。DartのNULL安全性は健全であり、コンパイラの最適化を可能にします。型システムが何かをnullではないと判断した場合、その何かがnullになることはありません。プロジェクト全体とその依存関係をヌル・セーフに移行すれば、バグが減るだけでなく、バイナリが小さくなり、実行速度が速くなるだけでなく、サウンド・セーフのメリットをフルに享受できます。</li></ul><h2 id="dart3とnull安全性" tabindex="-1">Dart3とNull安全性 <a class="header-anchor" href="#dart3とnull安全性" aria-label="Permalink to &quot;Dart3とNull安全性&quot;">​</a></h2><p>Dart 3にはサウンド・ヌル・セーフティが組み込まれている。Dart 3はNull安全のないコードが実行されるのを防ぎます。</p><p>Dart 3への移行方法については、Dart 3移行ガイドを参照してください。Null安全をサポートせずに開発されたパッケージは、依存関係を解決する際に問題を引き起こします：</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ dart pub get</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Because pkg1 doesn&#39;t support null safety, version solving failed.</span></span>
<span class="line"><span>The lower bound of &quot;sdk: &#39;&gt;=2.9.0 &lt;3.0.0&#39;&quot; must be 2.12.0 or higher to enable null safety.</span></span></code></pre></div><p>Dart 3と互換性のないライブラリは、解析エラーやコンパイルエラーを引き起こす。</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ dart analyze .</span></span>
<span class="line"><span>Analyzing ....                         0.6s</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  error • lib/pkg1.dart:1:1 • The language version must be &gt;=2.12.0. </span></span>
<span class="line"><span>  Try removing the language version override and migrating the code.</span></span>
<span class="line"><span>  • illegal_language_version_override</span></span></code></pre></div><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ dart run bin/my_app.dart</span></span>
<span class="line"><span>../pkg1/lib/pkg1.dart:1:1: Error: Library doesn&#39;t support null safety.</span></span>
<span class="line"><span>// @dart=2.9</span></span>
<span class="line"><span>^^^^^^^^^^^^</span></span></code></pre></div><p>これらの問題を解決するために：</p><ol><li>pub.devからインストールしたパッケージのNull安全バージョンをチェックする。</li><li>すべてのソースコードを健全なNull安全を使用するように移行する。</li></ol><p>Dart 3はDartとFlutterの安定版チャンネルにあります。詳細については、ダウンロードページをご覧ください。Dart 3との互換性をテストするには、Dart 3以降を使用してください。</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ dart --version                     # make sure this reports 3.0.0-417.1.beta or higher</span></span>
<span class="line"><span>$ dart pub get / flutter pub get     # this should resolve without issues</span></span>
<span class="line"><span>$ dart analyze / flutter analyze     # this should pass without errors</span></span></code></pre></div><p>pub get ステップが失敗した場合は、依存関係のステータスを確認します。</p><p>analyze ステップが失敗した場合は、アナライザがリストした問題を解決するためにコードを更新してください。</p><h2 id="dart-2-x-のnull安全" tabindex="-1">Dart 2.x のNull安全 <a class="header-anchor" href="#dart-2-x-のnull安全" aria-label="Permalink to &quot;Dart 2.x のNull安全&quot;">​</a></h2><p>Dart 2.12 から 2.19 では、Null安全を有効にする必要があります。Dart 2.12 より前のバージョンの SDK では、ヌルセーフティを使用できません。</p><p>健全なNull安全を有効にするには、SDK 制約の下界を言語バージョン 2.12 以降に設定します。たとえば、pubspec.yaml ファイルには以下の制約があります：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  sdk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&gt;=2.12.0 &lt;3.0.0&#39;</span></span></code></pre></div><h2 id="既存コードの移行" tabindex="-1">既存コードの移行 <a class="header-anchor" href="#既存コードの移行" aria-label="Permalink to &quot;既存コードの移行&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">Warning</p><p>Dart 3 では、dart migrate ツールが削除されました。コードの移行にお困りの場合は、2.19 SDKでツールを実行し、Dart 3にアップグレードしてください。</p><p>ツールを使わなくても移行は可能ですが、手作業によるコードの編集が必要になります。</p></div><p>Null安全をサポートせずに記述された Dart コードは、Null安全を使用するように移行できます。Dart SDKバージョン2.12～2.19に含まれるdart migrateツールの使用をお勧めします。</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ cd my_app</span></span>
<span class="line"><span>$ dart migrate</span></span></code></pre></div><p>コードをNull安全に移行する方法については、移行ガイドをご覧ください。</p><h3 id="詳細はこちら" tabindex="-1">詳細はこちら <a class="header-anchor" href="#詳細はこちら" aria-label="Permalink to &quot;詳細はこちら&quot;">​</a></h3><p>Null安全についてもっと知りたい方は、以下のリソースをご覧ください：</p><ul><li>Null安全を理解する</li><li>既存コードのための移行ガイド</li><li>Null安全のFAQ</li><li>Null安全のサンプルコード</li></ul>`,42)]))}const k=s(t,[["render",e]]);export{c as __pageData,k as default};
