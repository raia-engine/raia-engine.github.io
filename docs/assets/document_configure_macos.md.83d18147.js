import{_ as s,o as a,c as l,Q as e}from"./chunks/framework.32d25f99.js";const b=JSON.parse('{"title":"Mac に Raia の開発環境を構築する","description":"","frontmatter":{},"headers":[],"relativePath":"document/configure_macos.md","filePath":"document/configure_macos.md","lastUpdated":1697381634000}'),n={name:"document/configure_macos.md"},o=e(`<h1 id="mac-に-raia-の開発環境を構築する" tabindex="-1">Mac に Raia の開発環境を構築する <a class="header-anchor" href="#mac-に-raia-の開発環境を構築する" aria-label="Permalink to &quot;Mac に Raia の開発環境を構築する&quot;">​</a></h1><p>この記事では Mac に Raia の開発環境を構築する方法を解説します。</p><nav class="table-of-contents"><ul><li><a href="#_0-検証した環境について">0. 検証した環境について</a><ul><li><a href="#ターミナルを起動する方法">ターミナルを起動する方法</a></li><li><a href="#作業ディレクトリについて">作業ディレクトリについて</a></li><li><a href="#適切に環境構築するために">適切に環境構築するために</a></li></ul></li><li><a href="#_1-xcodeをインストールする">1. Xcodeをインストールする</a><ul><li><a href="#ライセンスに同意する">ライセンスに同意する</a></li></ul></li><li><a href="#_2-コマンドラインツールをインストールする">2. コマンドラインツールをインストールする</a><ul><li><a href="#インストールの確認をする">インストールの確認をする</a></li></ul></li><li><a href="#_3-homebrew-をインストールする">3. Homebrew をインストールする</a><ul><li><a href="#homebrew-のパスを通す">Homebrew のパスを通す</a></li></ul></li><li><a href="#gcc-13-をインストールする">GCC-13 をインストールする</a></li><li><a href="#_4-ninjaをインストールする">4. Ninjaをインストールする</a></li><li><a href="#_5-raia-リポジトリをクローンする">5. Raia リポジトリをクローンする</a><ul><li><a href="#リポジトリをクローンする">リポジトリをクローンする</a></li></ul></li><li><a href="#_6-angle-をビルドする">6. ANGLE をビルドする</a><ul><li><a href="#depot-tools-をクローンする">depot_tools をクローンする</a></li><li><a href="#パスを通す">パスを通す</a></li><li><a href="#angle-のソースコードを取得する">ANGLE のソースコードを取得する</a></li><li><a href="#ninja-ファイルを生成する">ninja ファイルを生成する</a></li><li><a href="#コンパイルする">コンパイルする</a></li><li><a href="#生成された共有ライブラリを確認する">生成された共有ライブラリを確認する</a></li><li><a href="#共有ライブラリを-raia-コピーする">共有ライブラリを Raia コピーする</a></li><li><a href="#ヘッダーファイルを-raia-コピーする">ヘッダーファイルを Raia コピーする</a></li></ul></li><li><a href="#_7-v8-をビルドする">7. V8 をビルドする</a><ul><li><a href="#クローンして移動する">クローンして移動する</a></li><li><a href="#クローンしたディレクトリを移動する">クローンしたディレクトリを移動する</a></li><li><a href="#v8-のバージョンを指定する">V8 のバージョンを指定する</a></li><li><a href="#v8-の-ninja-ファイルを生成する">V8 の ninja ファイルを生成する</a></li><li><a href="#ビルドの設定ファイルを編集する">ビルドの設定ファイルを編集する</a></li><li><a href="#v8-をコンパイルする">V8 をコンパイルする</a></li><li><a href="#生成された静的ライブラリの確認">生成された静的ライブラリの確認</a></li><li><a href="#静的ライブラリを-raia-にコピーする">静的ライブラリを Raia にコピーする</a></li><li><a href="#ヘッダーファイルのコピー">ヘッダーファイルのコピー</a></li></ul></li><li><a href="#_8-glfw-をビルドする">8. GLFW をビルドする</a><ul><li><a href="#glfw-をクローンする">GLFW をクローンする</a></li><li><a href="#glfw-をビルドする">GLFW をビルドする</a></li></ul></li><li><a href="#mruby-をセットアップする">mruby をセットアップする</a></li></ul></nav><h2 id="_0-検証した環境について" tabindex="-1">0. 検証した環境について <a class="header-anchor" href="#_0-検証した環境について" aria-label="Permalink to &quot;0. 検証した環境について&quot;">​</a></h2><p>使用した Mac の環境は以下のとおりです。</p><ul><li>マシン: Mac mini</li><li>チップ: Apple M1</li><li>メモリ: 16GB</li><li>OS: macOS Ventura バージョン 13.2</li></ul><p>環境構築は Mac を工場出荷時の設定にリセットした状態から行っています。</p><details class="details custom-block"><summary>工場出荷時の設定にリセット</summary><p>検証環境では「すべてのコンテンツと設定を消去」を使って macOS を工場出荷時の設定にリセットしています。詳しくは <a href="https://support.apple.com/ja-jp/HT212749" target="_blank" rel="noreferrer">Mac を消去して工場出荷時の設定にリセットする</a>を参照してください。</p></details><h3 id="ターミナルを起動する方法" tabindex="-1">ターミナルを起動する方法 <a class="header-anchor" href="#ターミナルを起動する方法" aria-label="Permalink to &quot;ターミナルを起動する方法&quot;">​</a></h3><p>開発環境を構築するのにターミナルを使用します。ターミナルは「アプリケーション」フォルダの「ユーティリティ」サブフォルダにあります。</p><details class="details custom-block"><summary>Spotlight からアプリケーションを起動する</summary><p>Mac では Spotlightからアプリケーションを起動することができます。</p><ul><li>Mac のメニューバーで Spotlight アイコン をクリックするか、⌘ + Space を押します。</li><li>検索フィールドにアプリケーションの名前を入力します。今回は「ターミナル」と入力します。</li><li>Enter を押すか、検索結果のアプリケーション名をクリックして実行します。</li></ul></details><h3 id="作業ディレクトリについて" tabindex="-1">作業ディレクトリについて <a class="header-anchor" href="#作業ディレクトリについて" aria-label="Permalink to &quot;作業ディレクトリについて&quot;">​</a></h3><p>このドキュメントでは開発環境を構築するディレクトリに <code>~/</code> を使用するもの仮定として解説をします。</p><p>自分が普段使用しているディレクトリに置き換えて読み進めてください。</p><h3 id="適切に環境構築するために" tabindex="-1">適切に環境構築するために <a class="header-anchor" href="#適切に環境構築するために" aria-label="Permalink to &quot;適切に環境構築するために&quot;">​</a></h3><p>Raia は多数のサードパーティ製ライブラリを使用しています。その多くは活発に開発されているため、このドキュメントの解説が最新のものとは異なる可能性があることに留意してください。</p><h2 id="_1-xcodeをインストールする" tabindex="-1">1. Xcodeをインストールする <a class="header-anchor" href="#_1-xcodeをインストールする" aria-label="Permalink to &quot;1. Xcodeをインストールする&quot;">​</a></h2><p>Mac の App Store から <a href="https://apps.apple.com/jp/app/xcode/id497799835?mt=12" target="_blank" rel="noreferrer">Xcode を入手</a>します。</p><p>ダウンロードに時間がかかるので、完了するまで待ちます。</p><h3 id="ライセンスに同意する" tabindex="-1">ライセンスに同意する <a class="header-anchor" href="#ライセンスに同意する" aria-label="Permalink to &quot;ライセンスに同意する&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">xcodebuild</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-license</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">sudo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">xcodebuild</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-license</span></span></code></pre></div><p>ターミナルに表示されるライセンスを読んだのち、同意できたら <code>agree</code> と打ち込んでください。</p><h2 id="_2-コマンドラインツールをインストールする" tabindex="-1">2. コマンドラインツールをインストールする <a class="header-anchor" href="#_2-コマンドラインツールをインストールする" aria-label="Permalink to &quot;2. コマンドラインツールをインストールする&quot;">​</a></h2><p>ターミナルに以下のコマンドを入力して、コマンドラインツールをインストールします。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">xcode-select</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--install</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">xcode-select</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--install</span></span></code></pre></div><p>ポップアップウィンドウが表示され、デベロッパーツールをインストールするかどうかを尋ねられます。インストールを続行するための指示に従ってください。</p><details class="details custom-block"><summary>詳細な手順</summary><ul><li>「インストール」をクリックします。</li><li>「同意する」をクリックします。 <ul><li>ソフトウェアのダウンロードとインストールが開始されます（検証環境では10分程度かかりました）</li></ul></li><li>「完了」をクリックします。</li></ul></details><h3 id="インストールの確認をする" tabindex="-1">インストールの確認をする <a class="header-anchor" href="#インストールの確認をする" aria-label="Permalink to &quot;インストールの確認をする&quot;">​</a></h3><p>以下のコマンドをターミナルに入力して、正しくインストールされたことを確認します。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-v</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-v</span></span></code></pre></div><p>このコマンドを実行すると、インストールされた <code>git</code> のバージョン情報が表示されます。バージョン情報が表示されたら、コマンドラインツールのインストールに成功しています。</p><details class="details custom-block"><summary>検証した環境での結果と補足</summary><p>検証した環境では次のようなメッセージが表示されました。</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">git version 2.39.2 (Apple Git-143)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">git version 2.39.2 (Apple Git-143)</span></span></code></pre></div><p>なお、工場出荷時の状態で <code>git</code> 等のコマンドを実行しようとすると、<code>xcode-select --install</code> を実行したときと同様に、コマンドデベロッパーツールをインストールするためのポップアップが表示されます。</p></details><h2 id="_3-homebrew-をインストールする" tabindex="-1">3. Homebrew をインストールする <a class="header-anchor" href="#_3-homebrew-をインストールする" aria-label="Permalink to &quot;3. Homebrew をインストールする&quot;">​</a></h2><p><a href="https://brew.sh" target="_blank" rel="noreferrer">Homebrew のウェブサイト</a>のトップページにあるコマンドをターミナルで実行します。</p><p>検証環境で使用したコマンドは以下のとおりです。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">/bin/bash</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-c</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;$(</span><span style="color:#B392F0;">curl</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">-fsSL</span><span style="color:#9ECBFF;"> https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">/bin/bash</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-c</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;$(</span><span style="color:#6F42C1;">curl</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">-fsSL</span><span style="color:#032F62;"> https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;</span></span></code></pre></div><p>パスワードを求められるのでMacのパスワードを入力します。Enter を押して続行するとインストールが始まります。</p><h3 id="homebrew-のパスを通す" tabindex="-1">Homebrew のパスを通す <a class="header-anchor" href="#homebrew-のパスを通す" aria-label="Permalink to &quot;Homebrew のパスを通す&quot;">​</a></h3><p>インストールが完了したら、ターミナルに表示されている <code>==&gt; Next steps</code> の項の <code>... Homebrew to your PATH:</code> に続くコマンドをターミナルで実行します。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">例:</span></span>
<span class="line"><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;">; </span><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;eval &quot;$(/opt/homebrew/bin/brew shellenv)&quot;&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;"> /Users/UserName/.zprofile</span></span>
<span class="line"><span style="color:#79B8FF;">eval</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;$(</span><span style="color:#B392F0;">/opt/homebrew/bin/brew</span><span style="color:#9ECBFF;"> shellenv)&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">例:</span></span>
<span class="line"><span style="color:#24292E;">(</span><span style="color:#005CC5;">echo</span><span style="color:#24292E;">; </span><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;eval &quot;$(/opt/homebrew/bin/brew shellenv)&quot;&#39;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;"> /Users/UserName/.zprofile</span></span>
<span class="line"><span style="color:#005CC5;">eval</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;$(</span><span style="color:#6F42C1;">/opt/homebrew/bin/brew</span><span style="color:#032F62;"> shellenv)&quot;</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">注意点</p><p><code>/UserName/</code> の箇所を自分のユーザー名に置き換えて実行してください。</p></div><h2 id="gcc-13-をインストールする" tabindex="-1">GCC-13 をインストールする <a class="header-anchor" href="#gcc-13-をインストールする" aria-label="Permalink to &quot;GCC-13 をインストールする&quot;">​</a></h2><p>ompによるGPU処理で使用します。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">brew</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">gcc-13</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">brew</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">gcc-13</span></span></code></pre></div><h2 id="_4-ninjaをインストールする" tabindex="-1">4. Ninjaをインストールする <a class="header-anchor" href="#_4-ninjaをインストールする" aria-label="Permalink to &quot;4. Ninjaをインストールする&quot;">​</a></h2><p>次のコマンドを実行して、Ninjaをインストールします。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">brew</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ninja</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">brew</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ninja</span></span></code></pre></div><h2 id="_5-raia-リポジトリをクローンする" tabindex="-1">5. Raia リポジトリをクローンする <a class="header-anchor" href="#_5-raia-リポジトリをクローンする" aria-label="Permalink to &quot;5. Raia リポジトリをクローンする&quot;">​</a></h2><p><code>cd</code> コマンドを使用して作業ディレクトリに移動します。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 例:</span></span>
<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 例:</span></span>
<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/</span></span></code></pre></div><h3 id="リポジトリをクローンする" tabindex="-1">リポジトリをクローンする <a class="header-anchor" href="#リポジトリをクローンする" aria-label="Permalink to &quot;リポジトリをクローンする&quot;">​</a></h3><p><code>git clone</code> コマンドを使って、リポジトリをクローンします:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clone</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://github.com/dolphilia/raia-engine.git</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clone</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://github.com/dolphilia/raia-engine.git</span></span></code></pre></div><h2 id="_6-angle-をビルドする" tabindex="-1">6. ANGLE をビルドする <a class="header-anchor" href="#_6-angle-をビルドする" aria-label="Permalink to &quot;6. ANGLE をビルドする&quot;">​</a></h2><p><code>cd</code> コマンドを使用して作業ディレクトリに移動します。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 例:</span></span>
<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/raia/third_party</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 例:</span></span>
<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/raia/third_party</span></span></code></pre></div><h3 id="depot-tools-をクローンする" tabindex="-1">depot_tools をクローンする <a class="header-anchor" href="#depot-tools-をクローンする" aria-label="Permalink to &quot;depot_tools をクローンする&quot;">​</a></h3><p><code>git clone</code> コマンドを実行して depot_tools リポジトリをクローンします。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clone</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://chromium.googlesource.com/chromium/tools/depot_tools.git</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clone</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://chromium.googlesource.com/chromium/tools/depot_tools.git</span></span></code></pre></div><h3 id="パスを通す" tabindex="-1">パスを通す <a class="header-anchor" href="#パスを通す" aria-label="Permalink to &quot;パスを通す&quot;">​</a></h3><p><code>export</code> コマンドを使用して depot_tools のパスを通します。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 例:</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> PATH</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">~/</span><span style="color:#E1E4E8;">$PWD</span><span style="color:#9ECBFF;">/depot_tools:</span><span style="color:#E1E4E8;">$PATH</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 例:</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> PATH</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">~/</span><span style="color:#24292E;">$PWD</span><span style="color:#032F62;">/depot_tools:</span><span style="color:#24292E;">$PATH</span></span></code></pre></div><h3 id="angle-のソースコードを取得する" tabindex="-1">ANGLE のソースコードを取得する <a class="header-anchor" href="#angle-のソースコードを取得する" aria-label="Permalink to &quot;ANGLE のソースコードを取得する&quot;">​</a></h3><p>depot_tools の <code>fetch</code> を使って ANGLE のソースコードを取得します。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">mkdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">angle</span></span>
<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">angle</span></span>
<span class="line"><span style="color:#B392F0;">fetch</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">angle</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">mkdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">angle</span></span>
<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">angle</span></span>
<span class="line"><span style="color:#6F42C1;">fetch</span><span style="color:#24292E;"> </span><span style="color:#032F62;">angle</span></span></code></pre></div><p>ダウンロードに時間がかかるので、完了するまで待ちます。</p><h3 id="ninja-ファイルを生成する" tabindex="-1">ninja ファイルを生成する <a class="header-anchor" href="#ninja-ファイルを生成する" aria-label="Permalink to &quot;ninja ファイルを生成する&quot;">​</a></h3><p>depot_tools の <code>gn gen</code> コマンドを使用して ninja ファイルを生成します。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">gn</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">gen</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">out/Release</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">gn</span><span style="color:#24292E;"> </span><span style="color:#032F62;">gen</span><span style="color:#24292E;"> </span><span style="color:#032F62;">out/Release</span></span></code></pre></div><h3 id="コンパイルする" tabindex="-1">コンパイルする <a class="header-anchor" href="#コンパイルする" aria-label="Permalink to &quot;コンパイルする&quot;">​</a></h3><p>depot_toolsの <code>autoninja</code> を使ってコンパイルします。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">autoninja</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-C</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">out/Release</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">autoninja</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-C</span><span style="color:#24292E;"> </span><span style="color:#032F62;">out/Release</span></span></code></pre></div><p>コンパイルには時間がかかるので、完了まで待ちます。</p><h3 id="生成された共有ライブラリを確認する" tabindex="-1">生成された共有ライブラリを確認する <a class="header-anchor" href="#生成された共有ライブラリを確認する" aria-label="Permalink to &quot;生成された共有ライブラリを確認する&quot;">​</a></h3><p>以下の共有ライブラリが <code>~/raia/third_party/angle/out/Release</code> ディレクトリに生成されていることを確認してください。</p><ul><li><code>libc++_chrome.dylib</code></li><li><code>libchrome_zlib.dylib</code></li><li><code>libEGL.dylib</code></li><li><code>libGLESv2.dylib</code></li><li><code>libthird_party_abseil-cpp_absl.dylib</code></li></ul><h3 id="共有ライブラリを-raia-コピーする" tabindex="-1">共有ライブラリを Raia コピーする <a class="header-anchor" href="#共有ライブラリを-raia-コピーする" aria-label="Permalink to &quot;共有ライブラリを Raia コピーする&quot;">​</a></h3><p>先ほどの共有ライブラリを <code>~/raia/sdk/macos/arm64/lib</code> にコピーします。</p><h3 id="ヘッダーファイルを-raia-コピーする" tabindex="-1">ヘッダーファイルを Raia コピーする <a class="header-anchor" href="#ヘッダーファイルを-raia-コピーする" aria-label="Permalink to &quot;ヘッダーファイルを Raia コピーする&quot;">​</a></h3><p><code>~/raia/third_party/angle/include</code> 内のすべてのファイルを <code>~/raia/sdk/macos/arm64/include</code> にコピーする。</p><h2 id="_7-v8-をビルドする" tabindex="-1">7. V8 をビルドする <a class="header-anchor" href="#_7-v8-をビルドする" aria-label="Permalink to &quot;7. V8 をビルドする&quot;">​</a></h2><p>ディレクトリを作成して移動します。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">mkdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">v8</span></span>
<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">v8</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">mkdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">v8</span></span>
<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">v8</span></span></code></pre></div><h3 id="クローンして移動する" tabindex="-1">クローンして移動する <a class="header-anchor" href="#クローンして移動する" aria-label="Permalink to &quot;クローンして移動する&quot;">​</a></h3><p>depot_tools の <code>fetch</code> を使用して、V8をクローンします。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">fetch</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">v8</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">fetch</span><span style="color:#24292E;"> </span><span style="color:#032F62;">v8</span></span></code></pre></div><p>V8 のクローンには時間がかかるので、完了まで待ちます。</p><h3 id="クローンしたディレクトリを移動する" tabindex="-1">クローンしたディレクトリを移動する <a class="header-anchor" href="#クローンしたディレクトリを移動する" aria-label="Permalink to &quot;クローンしたディレクトリを移動する&quot;">​</a></h3><p><code>cd</code> コマンドでクローンしたディレクトリに移動します。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">v8</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">v8</span></span></code></pre></div><h3 id="v8-のバージョンを指定する" tabindex="-1">V8 のバージョンを指定する <a class="header-anchor" href="#v8-のバージョンを指定する" aria-label="Permalink to &quot;V8 のバージョンを指定する&quot;">​</a></h3><p>次のコマンドを実行して、正常な動作を確認しているバージョンに設定します。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">refs/tags/11.7.115</span></span>
<span class="line"><span style="color:#B392F0;">gclient</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sync</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-D</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">refs/tags/11.7.115</span></span>
<span class="line"><span style="color:#6F42C1;">gclient</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sync</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span></span></code></pre></div><h3 id="v8-の-ninja-ファイルを生成する" tabindex="-1">V8 の ninja ファイルを生成する <a class="header-anchor" href="#v8-の-ninja-ファイルを生成する" aria-label="Permalink to &quot;V8 の ninja ファイルを生成する&quot;">​</a></h3><p><code>python3</code> コマンドを使って ninja ファイルを生成します。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">python3</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">tools/dev/v8gen.py</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">arm64.release</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">python3</span><span style="color:#24292E;"> </span><span style="color:#032F62;">tools/dev/v8gen.py</span><span style="color:#24292E;"> </span><span style="color:#032F62;">arm64.release</span></span></code></pre></div><h3 id="ビルドの設定ファイルを編集する" tabindex="-1">ビルドの設定ファイルを編集する <a class="header-anchor" href="#ビルドの設定ファイルを編集する" aria-label="Permalink to &quot;ビルドの設定ファイルを編集する&quot;">​</a></h3><p><code>vi</code> などのエディターを使用してビルドの設定ファイル <code>args.gn</code> を編集します。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 例</span></span>
<span class="line"><span style="color:#B392F0;">vi</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">~/raia/third_party/v8/v8/out.gn/arm64.release/args.gn</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 例</span></span>
<span class="line"><span style="color:#6F42C1;">vi</span><span style="color:#24292E;"> </span><span style="color:#032F62;">~/raia/third_party/v8/v8/out.gn/arm64.release/args.gn</span></span></code></pre></div><p>内容を次のように書き換えて保存してください。</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">dcheck_always_on = false</span></span>
<span class="line"><span style="color:#e1e4e8;">is_component_build = false</span></span>
<span class="line"><span style="color:#e1e4e8;">is_debug = false</span></span>
<span class="line"><span style="color:#e1e4e8;">target_cpu = &quot;arm64&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">use_custom_libcxx = false</span></span>
<span class="line"><span style="color:#e1e4e8;">v8_monolithic = true</span></span>
<span class="line"><span style="color:#e1e4e8;">v8_enable_sandbox = false</span></span>
<span class="line"><span style="color:#e1e4e8;">v8_use_external_startup_data = false</span></span>
<span class="line"><span style="color:#e1e4e8;">v8_enable_pointer_compression = false</span></span>
<span class="line"><span style="color:#e1e4e8;">v8_enable_31bit_smis_on_64bit_arch = false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">dcheck_always_on = false</span></span>
<span class="line"><span style="color:#24292e;">is_component_build = false</span></span>
<span class="line"><span style="color:#24292e;">is_debug = false</span></span>
<span class="line"><span style="color:#24292e;">target_cpu = &quot;arm64&quot;</span></span>
<span class="line"><span style="color:#24292e;">use_custom_libcxx = false</span></span>
<span class="line"><span style="color:#24292e;">v8_monolithic = true</span></span>
<span class="line"><span style="color:#24292e;">v8_enable_sandbox = false</span></span>
<span class="line"><span style="color:#24292e;">v8_use_external_startup_data = false</span></span>
<span class="line"><span style="color:#24292e;">v8_enable_pointer_compression = false</span></span>
<span class="line"><span style="color:#24292e;">v8_enable_31bit_smis_on_64bit_arch = false</span></span></code></pre></div><details class="details custom-block"><summary>メモ: WindowsでV8をビルドするときのargs.gnの設定</summary><p>Windows向けの解説記事を書くまで、ここにメモを残しておきます。</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">is_debug = false</span></span>
<span class="line"><span style="color:#e1e4e8;">target_cpu = &quot;x64&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">treat_warnings_as_errors = false</span></span>
<span class="line"><span style="color:#e1e4e8;">is_component_build = false</span></span>
<span class="line"><span style="color:#e1e4e8;">v8_enable_i18n_support = false</span></span>
<span class="line"><span style="color:#e1e4e8;">symbol_level = 0</span></span>
<span class="line"><span style="color:#e1e4e8;">v8_use_external_startup_data = false</span></span>
<span class="line"><span style="color:#e1e4e8;">v8_static_library = true</span></span>
<span class="line"><span style="color:#e1e4e8;">v8_enable_i18n_support = false</span></span>
<span class="line"><span style="color:#e1e4e8;">v8_monolithic = true</span></span>
<span class="line"><span style="color:#e1e4e8;">use_custom_libcxx = false #おそらく削除</span></span>
<span class="line"><span style="color:#e1e4e8;">v8_enable_pointer_compression = false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">is_debug = false</span></span>
<span class="line"><span style="color:#24292e;">target_cpu = &quot;x64&quot;</span></span>
<span class="line"><span style="color:#24292e;">treat_warnings_as_errors = false</span></span>
<span class="line"><span style="color:#24292e;">is_component_build = false</span></span>
<span class="line"><span style="color:#24292e;">v8_enable_i18n_support = false</span></span>
<span class="line"><span style="color:#24292e;">symbol_level = 0</span></span>
<span class="line"><span style="color:#24292e;">v8_use_external_startup_data = false</span></span>
<span class="line"><span style="color:#24292e;">v8_static_library = true</span></span>
<span class="line"><span style="color:#24292e;">v8_enable_i18n_support = false</span></span>
<span class="line"><span style="color:#24292e;">v8_monolithic = true</span></span>
<span class="line"><span style="color:#24292e;">use_custom_libcxx = false #おそらく削除</span></span>
<span class="line"><span style="color:#24292e;">v8_enable_pointer_compression = false</span></span></code></pre></div></details><h3 id="v8-をコンパイルする" tabindex="-1">V8 をコンパイルする <a class="header-anchor" href="#v8-をコンパイルする" aria-label="Permalink to &quot;V8 をコンパイルする&quot;">​</a></h3><p><code>ninja</code> コマンドを使用して V8 をコンパイルします。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">ninja</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-C</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">out.gn/arm64.release</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">v8_monolith</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">ninja</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-C</span><span style="color:#24292E;"> </span><span style="color:#032F62;">out.gn/arm64.release</span><span style="color:#24292E;"> </span><span style="color:#032F62;">v8_monolith</span></span></code></pre></div><p>コンパイルには時間がかかるので、完了まで待ちます。</p><h3 id="生成された静的ライブラリの確認" tabindex="-1">生成された静的ライブラリの確認 <a class="header-anchor" href="#生成された静的ライブラリの確認" aria-label="Permalink to &quot;生成された静的ライブラリの確認&quot;">​</a></h3><p>以下の静的ライブラリが <code>~/raia/third_party/v8/v8/out.gn/arm64.release/obj</code> ディレクトリに生成されているのを確認してください。</p><ul><li><code>libv8_monolith.a</code></li><li><code>libv8_libbase.a</code></li><li><code>libv8_libplatform.a</code></li></ul><p><code>libv8_monolith.a</code> は容量が大きいので注意してください。</p><h3 id="静的ライブラリを-raia-にコピーする" tabindex="-1">静的ライブラリを Raia にコピーする <a class="header-anchor" href="#静的ライブラリを-raia-にコピーする" aria-label="Permalink to &quot;静的ライブラリを Raia にコピーする&quot;">​</a></h3><p>先ほど確認した静的ライブラリを <code>~/raia/sdk/macos/arm64/lib</code> にコピーします。</p><h3 id="ヘッダーファイルのコピー" tabindex="-1">ヘッダーファイルのコピー <a class="header-anchor" href="#ヘッダーファイルのコピー" aria-label="Permalink to &quot;ヘッダーファイルのコピー&quot;">​</a></h3><p><code>~/raia/third_party/v8/v8/include</code> にあるヘッダーファイルを <code>~/raia/sdk/macos/arm64/include</code> にコピーします。</p><h2 id="_8-glfw-をビルドする" tabindex="-1">8. GLFW をビルドする <a class="header-anchor" href="#_8-glfw-をビルドする" aria-label="Permalink to &quot;8. GLFW をビルドする&quot;">​</a></h2><h3 id="glfw-をクローンする" tabindex="-1">GLFW をクローンする <a class="header-anchor" href="#glfw-をクローンする" aria-label="Permalink to &quot;GLFW をクローンする&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clone</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://github.com/glfw/glfw.git</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clone</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://github.com/glfw/glfw.git</span></span></code></pre></div><h3 id="glfw-をビルドする" tabindex="-1">GLFW をビルドする <a class="header-anchor" href="#glfw-をビルドする" aria-label="Permalink to &quot;GLFW をビルドする&quot;">​</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">mkdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span></span>
<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span></span>
<span class="line"><span style="color:#B392F0;">cmake</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">..</span></span>
<span class="line"><span style="color:#B392F0;">cmake</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--build</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">mkdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span></span>
<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span></span>
<span class="line"><span style="color:#6F42C1;">cmake</span><span style="color:#24292E;"> </span><span style="color:#032F62;">..</span></span>
<span class="line"><span style="color:#6F42C1;">cmake</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--build</span><span style="color:#24292E;">  </span><span style="color:#032F62;">.</span></span></code></pre></div><h2 id="mruby-をセットアップする" tabindex="-1">mruby をセットアップする <a class="header-anchor" href="#mruby-をセットアップする" aria-label="Permalink to &quot;mruby をセットアップする&quot;">​</a></h2><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clone</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://github.com/mruby/mruby.git</span></span>
<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mruby</span></span>
<span class="line"><span style="color:#B392F0;">make</span></span>
<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">../</span></span>
<span class="line"><span style="color:#B392F0;">cp</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mruby/build/host/lib/libmruby_core.a</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">../sdk/macos/arm64/lib</span></span>
<span class="line"><span style="color:#B392F0;">cp</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mruby/build/host/lib/libmruby.a</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">../sdk/macos/arm64/lib</span></span>
<span class="line"><span style="color:#B392F0;">rsync</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-av</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mruby/build/host/include/</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">../sdk/macos/arm64/include/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clone</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://github.com/mruby/mruby.git</span></span>
<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mruby</span></span>
<span class="line"><span style="color:#6F42C1;">make</span></span>
<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">../</span></span>
<span class="line"><span style="color:#6F42C1;">cp</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mruby/build/host/lib/libmruby_core.a</span><span style="color:#24292E;"> </span><span style="color:#032F62;">../sdk/macos/arm64/lib</span></span>
<span class="line"><span style="color:#6F42C1;">cp</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mruby/build/host/lib/libmruby.a</span><span style="color:#24292E;"> </span><span style="color:#032F62;">../sdk/macos/arm64/lib</span></span>
<span class="line"><span style="color:#6F42C1;">rsync</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-av</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mruby/build/host/include/</span><span style="color:#24292E;"> </span><span style="color:#032F62;">../sdk/macos/arm64/include/</span></span></code></pre></div>`,121),p=[o];function c(t,r,i,d,h,y){return a(),l("div",null,p)}const E=s(n,[["render",c]]);export{b as __pageData,E as default};
