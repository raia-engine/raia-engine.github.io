import{_ as e,c as i,a2 as s,o as t}from"./chunks/framework.6x3wfQve.js";const c=JSON.parse('{"title":"debug.debug","description":"","frontmatter":{},"headers":[],"relativePath":"document/built_in/debug/debug.md","filePath":"document/built_in/debug/debug.md","lastUpdated":1729487189000}'),l={name:"document/built_in/debug/debug.md"};function d(n,a,h,o,u,r){return t(),i("div",null,a[0]||(a[0]=[s(`<h1 id="debug-debug" tabindex="-1">debug.debug <a class="header-anchor" href="#debug-debug" aria-label="Permalink to &quot;debug.debug&quot;">​</a></h1><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">debug.debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ()</span></span></code></pre></div><h2 id="説明" tabindex="-1">説明 <a class="header-anchor" href="#説明" aria-label="Permalink to &quot;説明&quot;">​</a></h2><p>ユーザーがLuaインタプリタで対話モードに入れるシンプルなデバッガを開始します。ユーザーはコマンドを入力し、グローバル変数やローカル変数を調査したり、その値を変更したりできます。<code>cont</code>コマンドを入力すると、デバッガが終了し、実行が再開されます。</p><h2 id="サンプルコード" tabindex="-1">サンプルコード <a class="header-anchor" href="#サンプルコード" aria-label="Permalink to &quot;サンプルコード&quot;">​</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Before debug&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">debug.debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- デバッガに入る</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;After debug&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>この例では、<code>debug.debug</code> によって対話モードに入った後、再開して「After debug」が表示されます。</p><h2 id="互換性" tabindex="-1">互換性 <a class="header-anchor" href="#互換性" aria-label="Permalink to &quot;互換性&quot;">​</a></h2><ul><li>Lua 5.1</li></ul><h2 id="関連項目" tabindex="-1">関連項目 <a class="header-anchor" href="#関連項目" aria-label="Permalink to &quot;関連項目&quot;">​</a></h2><ul><li><a href="./traceback.html"><code>debug.traceback</code></a></li><li><a href="./getinfo.html"><code>debug.getinfo</code></a></li></ul>`,11)]))}const g=e(l,[["render",d]]);export{c as __pageData,g as default};
